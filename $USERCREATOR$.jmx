<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Blazemeter test plan" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers"/>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">192.168.140.16</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="appName" elementType="Argument">
            <stringProp name="Argument.name">appName</stringProp>
            <stringProp name="Argument.value">loadtest</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Put_Nulls" enabled="false">
          <stringProp name="BeanShellSampler.query">//vars.put(&quot;RoleName1&quot;, &quot;&quot;);
//vars.put(&quot;RoleName2&quot;, &quot;&quot;);
//vars.put(&quot;RoleName3&quot;, &quot;&quot;);
//vars.put(&quot;RoleName4&quot;, &quot;&quot;);
//vars.put(&quot;RoleName5&quot;, &quot;&quot;);
vars.put(&quot;boll&quot;, &quot;1&quot;);


</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV For Positions Search" enabled="false">
          <stringProp name="filename">posCheck.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">OfficePosition</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">;</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV For Roles Search" enabled="false">
          <stringProp name="filename">rolesCheck.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">RightRoleId,RoleName1</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">;</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">TestUser2.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">DirectorPassword,DirectorLogin,DirectorLastName,DirectorFirstName,DirectorMiddleName,DirectorDepartment,OfficePosition,IsDirector,RoleName1,RoleName2,RoleName3,RoleName4,RoleName5,RoleName6,RoleName7,RoleName8,RoleName9,RoleName10</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">C:\TEST SOFT\OfficialMemo\UserSet.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">DirectorPassword,DirectorLogin</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">LoginsenceDep.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">DirectorLogin,DirectorPassword,DirectorLastName,DirectorFirstName,DirectorMiddleName,DirectorDepartment,OfficePosition,IsDirector,RoleName1,RoleName2,RoleName3,RoleName4,RoleName5</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV For Search" enabled="false">
          <stringProp name="filename">departmentCheck.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">DirectorDepartment,RightDepId</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">;</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">ClonSmb.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">DirectorPassword,DirectorLogin,DirectorLastName,DirectorFirstName,DirectorMiddleName,DirectorDepartment,OfficePosition,IsDirector,RoleName1,RoleName2,RoleName3,RoleName4,RoleName5,RoleName6,RoleName7,RoleName8,RoleName9,RoleName10</stringProp>
        </CSVDataSet>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="UU generator" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.put(&quot;cardUUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;cardUUID_&quot;, UUID.randomUUID().toString());
vars.put(&quot;cardDirectorUUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;cardAssDirectorUUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;cardReferentUUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;cardBossUUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;cardAdvisorUUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;cardAssBossUUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;cardSpecialistUUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;cardConsultantUUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;Row1UUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;Rowf6UUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;Rowf7UUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;Rowf8UUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;Rowf9UUID&quot;, UUID.randomUUID().toString());
vars.put(&quot;Rowf10UUID&quot;, UUID.randomUUID().toString());

vars.put(&quot;Role2ID&quot;, &quot;&quot;);
vars.put(&quot;Role3ID&quot;, &quot;&quot;);
vars.put(&quot;Role4ID&quot;, &quot;&quot;);
vars.put(&quot;Role5ID&quot;, &quot;&quot;);
vars.put(&quot;Role6ID&quot;, &quot;&quot;);
vars.put(&quot;Role7ID&quot;, &quot;&quot;);
vars.put(&quot;Role8ID&quot;, &quot;&quot;);
vars.put(&quot;Role9ID&quot;, &quot;&quot;);
vars.put(&quot;Role10ID&quot;, &quot;&quot;);

vars.put(&quot;boll&quot;, &quot;0&quot;);
vars.put(&quot;puck&quot;, &quot;0&quot;);
vars.put(&quot;skate&quot;, &quot;0&quot;);

vars.put(&quot;ski&quot;, &quot;0&quot;);
vars.put(&quot;basket&quot;, &quot;0&quot;);
vars.put(&quot;gates&quot;, &quot;0&quot;);
vars.put(&quot;cheerleader&quot;, &quot;0&quot;);
vars.put(&quot;surfboard&quot;, &quot;0&quot;);

vars.put(&quot;shuttlecock&quot;, &quot;0&quot;);
vars.put(&quot;rollers&quot;, &quot;0&quot;);
vars.put(&quot;flippers&quot;, &quot;0&quot;);
vars.put(&quot;creatorLogin&quot;, &quot;admin&quot;);
vars.put(&quot;creatorPwd&quot;, &quot;admin&quot;);
//vars.put(&quot;DirectorLastName&quot;, &quot;&quot;);
//vars.put(&quot;DirectorMiddleName&quot;, &quot;&quot;);
//vars.put(&quot;DirectorFirstName&quot;, &quot;${DirectorLogin}&quot;);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EnterSystem" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1. https://192.168.140.16/loadtest/web/tessa/api/v1/sessions/open" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;ApplicationID::uid&quot;:&quot;3bc38194-a881-4955-85e7-0c6be3031f45&quot;,&quot;Client64Bit&quot;:true,&quot;Client64BitOS&quot;:true,&quot;CultureLCID::int&quot;:1049,&quot;DeviceType::int&quot;:1,&quot;EncodeBase64&quot;:true,&quot;Login&quot;:&quot;${__base64Encode(${creatorLogin})}&quot;,&quot;OSName&quot;:&quot;Microsoft Windows 10.0.19044 x64&quot;,&quot;Password&quot;:&quot;${__base64Encode(${creatorPwd})}&quot;,&quot;ServiceType&quot;:&quot;DesktopClient&quot;,&quot;UICultureLCID::int&quot;:25,&quot;UserAgent&quot;:null,&quot;UtcOffsetMinutes::int&quot;:180}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/sessions/open</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Tessa-Session" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">Tessa-Session</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&lt;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">app=</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="userName" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">userName</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">userName=&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="userID" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">userID</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">userID=&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/init/get" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;BuildDate::dtm&quot;:&quot;2022-10-24T00:00:00Z&quot;,&quot;CachedConfigurationVersion::int&quot;:326975,&quot;CachedSessionInfo&quot;:{&quot;AccessLevel::int&quot;:1,&quot;ApplicationID::uid&quot;:&quot;3bc38194-a881-4955-85e7-0c6be3031f45&quot;,&quot;CalendarID::uid&quot;:&quot;64b9230d-5422-466d-bb19-f9882bb87b78&quot;,&quot;Client64Bit&quot;:true,&quot;Client64BitOS&quot;:true,&quot;Created::dtm&quot;:&quot;2023-02-26T14:17:12.343Z&quot;,&quot;Culture::int&quot;:1049,&quot;DeviceType::int&quot;:1,&quot;Expires::dtm&quot;:&quot;2023-03-05T14:17:12.343Z&quot;,&quot;HostIP&quot;:&quot;192.168.133.34&quot;,&quot;HostName&quot;:&quot;192.168.133.34&quot;,&quot;InstanceName&quot;:&quot;tessa&quot;,&quot;LicenseType::int&quot;:1,&quot;LoginType::int&quot;:1,&quot;OSName&quot;:&quot;Microsoft Windows 10.0.19044 x64&quot;,&quot;ServerCode&quot;:&quot;loadtest&quot;,&quot;ServiceType::int&quot;:1,&quot;SessionID::uid&quot;:&quot;426b6781-549b-4250-a45b-b8cdb4de53af&quot;,&quot;Signature&quot;:&quot;Signature&quot;,&quot;TimeZoneUtcOffset::int&quot;:180,&quot;UICulture::int&quot;:25,&quot;UserAgent&quot;:null,&quot;UserID::uid&quot;:&quot;${userID}&quot;,&quot;UserLogin&quot;:&quot;${creatorLogin}&quot;,&quot;UserName&quot;:&quot;${userName}&quot;,&quot;UtcOffsetMinutes::int&quot;:180},&quot;Info&quot;:null,&quot;PublishMode&quot;:false,&quot;Version&quot;:&quot;1.0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/init/get</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:false,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      &#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;Count&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;0&quot;,&#xd;
                     &quot;Value::int&quot;:0&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;DeputyMode&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;$Enum_FunctionRoles_Performer&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;f726ab6c-a279-4d79-863a-47253e55ccc1&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;FunctionRolePerformerParam&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;$Enum_FunctionRoles_Author&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;6bc228a0-e5a2-4f15-bf6d-c8e744533241&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;FunctionRoleAuthorParam&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;ApMyTasks&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;Count&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Проверка исполнения&quot;,&quot;Value::uid&quot;:&quot;a7766a5b-7761-4143-82ef-cdd7e5c43ab2&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Контроль исполнения&quot;,&quot;Value::uid&quot;:&quot;02defd8c-8e22-430f-bd7e-97e1e33bb938&quot;}]}],&quot;Name&quot;:&quot;TaskType&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;0&quot;,&quot;Value::int&quot;:0}]}],&quot;Name&quot;:&quot;DeputyMode&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Performer&quot;,&quot;Value::uid&quot;:&quot;f726ab6c-a279-4d79-863a-47253e55ccc1&quot;}]}],&quot;Name&quot;:&quot;FunctionRolePerformerParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;IsTrue&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[]}],&quot;Name&quot;:&quot;WithoutComplect&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Author&quot;,&quot;Value::uid&quot;:&quot;6bc228a0-e5a2-4f15-bf6d-c8e744533241&quot;}]}],&quot;Name&quot;:&quot;FunctionRoleAuthorParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApMyTasksExecutionAndCheck&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;Count&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApMyTasksDeputies&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;Count&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;0&quot;,&quot;Value::int&quot;:0}]}],&quot;Name&quot;:&quot;DeputyMode&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Performer&quot;,&quot;Value::uid&quot;:&quot;f726ab6c-a279-4d79-863a-47253e55ccc1&quot;}]}],&quot;Name&quot;:&quot;FunctionRolePerformerParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;IsTrue&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[]}],&quot;Name&quot;:&quot;OnProcessing&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApMyTasksApproveAndSign&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;Count&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Экспертное согласование&quot;,&quot;Value::uid&quot;:&quot;0cbce6e6-0f62-4b03-a1c8-c6fe7a0dc60c&quot;}]}],&quot;Name&quot;:&quot;TaskKind&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;0&quot;,&quot;Value::int&quot;:0}]}],&quot;Name&quot;:&quot;DeputyMode&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Author&quot;,&quot;Value::uid&quot;:&quot;6bc228a0-e5a2-4f15-bf6d-c8e744533241&quot;}]}],&quot;Name&quot;:&quot;FunctionRoleAuthorParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Performer&quot;,&quot;Value::uid&quot;:&quot;f726ab6c-a279-4d79-863a-47253e55ccc1&quot;}]}],&quot;Name&quot;:&quot;FunctionRolePerformerParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApMyTasks&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;Count&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Performer&quot;,&quot;Value::uid&quot;:&quot;f726ab6c-a279-4d79-863a-47253e55ccc1&quot;}]}],&quot;Name&quot;:&quot;FunctionRolePerformerParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApComplectsWithTasks&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;Count&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Author&quot;,&quot;Value::uid&quot;:&quot;6bc228a0-e5a2-4f15-bf6d-c8e744533241&quot;}]}],&quot;Name&quot;:&quot;FunctionRoleAuthorParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApTasksForAssistants&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;Count&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Рассмотрение&quot;,&quot;Value::uid&quot;:&quot;b3d20c2c-2712-4f28-a531-9126671d2b8d&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Рассмотрение&quot;,&quot;Value::uid&quot;:&quot;38a4b517-c3e9-4ec5-bade-d4088497bd08&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Рассмотрение&quot;,&quot;Value::uid&quot;:&quot;99fecf2b-2572-494f-b939-dad0ec1bd400&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Ознакомление&quot;,&quot;Value::uid&quot;:&quot;e4607227-cf05-41fd-ab59-b005f75aa399&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Ознакомление&quot;,&quot;Value::uid&quot;:&quot;0b6a515e-3b2d-40fd-b29d-c4ba3d1ff38a&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Ознакомление&quot;,&quot;Value::uid&quot;:&quot;41cd566b-3b7e-4257-a1c6-e278efd83c9a&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Ознакомление&quot;,&quot;Value::uid&quot;:&quot;89c8b640-5043-43a7-acba-f9e6df48e497&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Запрос на изменение срока&quot;,&quot;Value::uid&quot;:&quot;908585dc-ccd2-47a9-8a88-e733587f75cf&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Запрос на изменение исполнителя&quot;,&quot;Value::uid&quot;:&quot;13a1c34f-dc4d-4d4f-b216-5b5f964d5f24&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Уведомление о наступлении планового срока КТ&quot;,&quot;Value::uid&quot;:&quot;f31883b3-3269-4a3b-b635-cdcd21c35fee&quot;}]}],&quot;Name&quot;:&quot;TaskType&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;0&quot;,&quot;Value::int&quot;:0}]}],&quot;Name&quot;:&quot;DeputyMode&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Performer&quot;,&quot;Value::uid&quot;:&quot;f726ab6c-a279-4d79-863a-47253e55ccc1&quot;}]}],&quot;Name&quot;:&quot;FunctionRolePerformerParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;IsTrue&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[]}],&quot;Name&quot;:&quot;WithoutComplect&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Author&quot;,&quot;Value::uid&quot;:&quot;6bc228a0-e5a2-4f15-bf6d-c8e744533241&quot;}]}],&quot;Name&quot;:&quot;FunctionRoleAuthorParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;IsTrue&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[]}],&quot;Name&quot;:&quot;WithCommentTasks&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApMyTasksReviewAndView&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;Count&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkExternalExecutionAssignments&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;Count&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Исполнение&quot;,&quot;Value::uid&quot;:&quot;6070c2d7-baa5-4b4a-a88e-1e23508b92e1&quot;}]}],&quot;Name&quot;:&quot;TaskType&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;0&quot;,&quot;Value::int&quot;:0}]}],&quot;Name&quot;:&quot;DeputyMode&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Performer&quot;,&quot;Value::uid&quot;:&quot;f726ab6c-a279-4d79-863a-47253e55ccc1&quot;}]}],&quot;Name&quot;:&quot;FunctionRolePerformerParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;IsTrue&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[]}],&quot;Name&quot;:&quot;WithoutComplect&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Author&quot;,&quot;Value::uid&quot;:&quot;6bc228a0-e5a2-4f15-bf6d-c8e744533241&quot;}]}],&quot;Name&quot;:&quot;FunctionRoleAuthorParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;IsTrue&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[]}],&quot;Name&quot;:&quot;RowColorization&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApMyTasksExecutionAndCheck&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;ByAssistant&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:true,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:true,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Author&quot;,&quot;Value::uid&quot;:&quot;6bc228a0-e5a2-4f15-bf6d-c8e744533241&quot;}]}],&quot;Name&quot;:&quot;FunctionRoleAuthorParam&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApTasksForAssistants&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;Count&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Ap_CardTypes_TypesNames_Approval&quot;,&quot;Value::uid&quot;:&quot;8eac6000-2abf-44fd-9aec-aa256cb8af89&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Согласование&quot;,&quot;Value::uid&quot;:&quot;59b5b8b6-a400-483d-ba2c-a301b7bda122&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$CardTypes_TypesNames_KrAdditionalApproval&quot;,&quot;Value::uid&quot;:&quot;b3d8eae3-c6bf-4b59-bcc7-461d526c326c&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Дополнительное согласование (правительство)&quot;,&quot;Value::uid&quot;:&quot;45f2e922-abfa-40e6-bfb0-644df82911a4&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Утверждение&quot;,&quot;Value::uid&quot;:&quot;2f574151-2e7b-4eac-bc7d-3b40824fdfc5&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Утверждение&quot;,&quot;Value::uid&quot;:&quot;314d90eb-010e-4ffa-9a36-91c61e123aa8&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Подписание&quot;,&quot;Value::uid&quot;:&quot;830b825f-b406-4c45-8ce2-e7b7c2bef6c7&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Ap_CardTypes_TypesNames_Signing&quot;,&quot;Value::uid&quot;:&quot;821492a9-6a89-4062-9093-045f8bf62ff2&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Подписание&quot;,&quot;Value::uid&quot;:&quot;03f51a1d-9c83-4c91-81fa-02f9f89a9458&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Подписание&quot;,&quot;Value::uid&quot;:&quot;613d4325-7b7e-4960-8b8c-cc5717972971&quot;}]},{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$CardTypes_TypesNames_KrSigning&quot;,&quot;Value::uid&quot;:&quot;968d68b3-a7c5-4b5d-bfa4-bb0f346880b6&quot;}]}],&quot;Name&quot;:&quot;TaskType&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;0&quot;,&quot;Value::int&quot;:0}]}],&quot;Name&quot;:&quot;DeputyMode&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Performer&quot;,&quot;Value::uid&quot;:&quot;f726ab6c-a279-4d79-863a-47253e55ccc1&quot;}]}],&quot;Name&quot;:&quot;FunctionRolePerformerParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;IsTrue&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[]}],&quot;Name&quot;:&quot;WithoutComplect&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Author&quot;,&quot;Value::uid&quot;:&quot;6bc228a0-e5a2-4f15-bf6d-c8e744533241&quot;}]}],&quot;Name&quot;:&quot;FunctionRoleAuthorParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;IsTrue&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[]}],&quot;Name&quot;:&quot;WithCommentTasks&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApMyTasksApproveAndSign&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;Count&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;0&quot;,&quot;Value::int&quot;:0}]}],&quot;Name&quot;:&quot;DeputyMode&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Performer&quot;,&quot;Value::uid&quot;:&quot;f726ab6c-a279-4d79-863a-47253e55ccc1&quot;}]}],&quot;Name&quot;:&quot;FunctionRolePerformerParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Ознакомление по списку&quot;,&quot;Value::uid&quot;:&quot;b3909e0a-3127-45ef-a769-5a027a0996ed&quot;}]}],&quot;Name&quot;:&quot;TaskKind&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;IsTrue&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[]}],&quot;Name&quot;:&quot;WithoutComplect&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Author&quot;,&quot;Value::uid&quot;:&quot;6bc228a0-e5a2-4f15-bf6d-c8e744533241&quot;}]}],&quot;Name&quot;:&quot;FunctionRoleAuthorParam&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApMyTasksViewByList&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Info&quot;:null,&quot;RequestType::uid&quot;:&quot;700c053d-d389-47e1-a269-22c0ee9ece05&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;CheckUserRole&quot;:[{&quot;::single_type&quot;:&quot;uid&quot;},&quot;${userID}&quot;,&quot;2454f52f-70f9-4548-bfc1-58548065974d&quot;,&quot;8d8d2bd9-1f6d-4f96-b6b1-1d0ad415f8a8&quot;]},&quot;RequestType::uid&quot;:&quot;c4df4f86-7cbe-40a1-8cfc-faaf21901032&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;RoleID::uid&quot;:&quot;2119aa21-c99b-45db-8e8b-c2a369e98478&quot;,&quot;UserID::uid&quot;:&quot;${userID}&quot;},&quot;RequestType::uid&quot;:&quot;8660e758-562a-4212-8e1c-9c14e571da89&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;CheckUserRole&quot;:[{&quot;::single_type&quot;:&quot;uid&quot;},&quot;${userID}&quot;,&quot;2454f52f-70f9-4548-bfc1-58548065974d&quot;,&quot;8d8d2bd9-1f6d-4f96-b6b1-1d0ad415f8a8&quot;]},&quot;RequestType::uid&quot;:&quot;c4df4f86-7cbe-40a1-8cfc-faaf21901032&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;RoleID::uid&quot;:&quot;2119aa21-c99b-45db-8e8b-c2a369e98478&quot;,&quot;UserID::uid&quot;:&quot;${userID}&quot;},&quot;RequestType::uid&quot;:&quot;8660e758-562a-4212-8e1c-9c14e571da89&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;CheckUserRole&quot;:[{&quot;::single_type&quot;:&quot;uid&quot;},&quot;${userID}&quot;,&quot;2454f52f-70f9-4548-bfc1-58548065974d&quot;,&quot;8d8d2bd9-1f6d-4f96-b6b1-1d0ad415f8a8&quot;]},&quot;RequestType::uid&quot;:&quot;c4df4f86-7cbe-40a1-8cfc-faaf21901032&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;RoleID::uid&quot;:&quot;2119aa21-c99b-45db-8e8b-c2a369e98478&quot;,&quot;UserID::uid&quot;:&quot;${userID}&quot;},&quot;RequestType::uid&quot;:&quot;8660e758-562a-4212-8e1c-9c14e571da89&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;.forumRequest&quot;:{&quot;MessageID&quot;:null,&quot;TopicID&quot;:null}},&quot;RequestType::uid&quot;:&quot;08e5ebfc-c75a-434f-8edc-e42de6b13bd3&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="25. https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CreatedDate&quot;,&quot;Descending&quot;:true}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:true,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:true,&quot;Text&quot;:&quot;0&quot;,&quot;Value::int&quot;:0}]}],&quot;Name&quot;:&quot;DeputyMode&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:true,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:true,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Performer&quot;,&quot;Value::uid&quot;:&quot;f726ab6c-a279-4d79-863a-47253e55ccc1&quot;}]}],&quot;Name&quot;:&quot;FunctionRolePerformerParam&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:true,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:true,&quot;Text&quot;:&quot;$Enum_FunctionRoles_Author&quot;,&quot;Value::uid&quot;:&quot;6bc228a0-e5a2-4f15-bf6d-c8e744533241&quot;}]}],&quot;Name&quot;:&quot;FunctionRoleAuthorParam&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApMyTasks&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">1692</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1724.8000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">3449.6000000000004</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateDepartment" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateCard" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="26. https://192.168.140.16/loadtest/web/tessa/api/v1/cards/new" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;CardTypeName&quot;:&quot;DepartmentRole&quot;,&quot;Info&quot;:{}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/new</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:null,&#xd;
                     &quot;Value::uid&quot;:&quot;${cardUUID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Role&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;RoleDeputies&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;CheckUserRole&quot;:[{&quot;::single_type&quot;:&quot;uid&quot;},&quot;${userID}&quot;,&quot;2454f52f-70f9-4548-bfc1-58548065974d&quot;,&quot;8d8d2bd9-1f6d-4f96-b6b1-1d0ad415f8a8&quot;]},&quot;RequestType::uid&quot;:&quot;c4df4f86-7cbe-40a1-8cfc-faaf21901032&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="29. https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;RoleID::uid&quot;:&quot;2119aa21-c99b-45db-8e8b-c2a369e98478&quot;,&quot;UserID::uid&quot;:&quot;${userID}&quot;},&quot;RequestType::uid&quot;:&quot;8660e758-562a-4212-8e1c-9c14e571da89&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenHeadDepartmentGuide" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="30. https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="31. https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;Departments&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchHeadDepartment" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32. https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Contains&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Департаменты&quot;,&quot;Value&quot;:&quot;Департаменты&quot;}]}],&quot;Name&quot;:&quot;Name&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;Departments&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveCreatedDepartment" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33. https://192.168.140.16/loadtest/web/tessa/api/v1/cards/store" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;docTypeID&quot;:null&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApDepartmentAreaOfCompetenceTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDepartments&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;DocumentsAccessRoleID&quot;:null,&#xd;
               &quot;DocumentsAccessRoleName&quot;:null,&#xd;
               &quot;FullName&quot;:null,&#xd;
               &quot;HeadDeputyID&quot;:null,&#xd;
               &quot;HeadDeputyName&quot;:null,&#xd;
               &quot;ID_Source&quot;:null,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NameDat&quot;:null,&#xd;
               &quot;NameImn&quot;:null,&#xd;
               &quot;NameRod&quot;:null,&#xd;
               &quot;NameVin&quot;:null,&#xd;
               &quot;NotForSelection&quot;:false,&#xd;
               &quot;Order&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;RootSecondDepartmentID&quot;:null,&#xd;
               &quot;RootSecondDepartmentName&quot;:null,&#xd;
               &quot;SecretariatUserID&quot;:null,&#xd;
               &quot;SecretariatUserName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApSubDepartmentListVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;DepartmentRoles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;DepartmentCode&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DepartmentCode&quot;:&quot;П51&quot;,&#xd;
               &quot;HeadUserID&quot;:null,&#xd;
               &quot;HeadUserName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;Name&quot;,&#xd;
               &quot;ParentID&quot;,&#xd;
               &quot;ParentName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;DisableDeputies&quot;:false,&#xd;
               &quot;ExternalID&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:&quot;${DepartmenName1}&quot;,&#xd;
               &quot;ParentID::uid&quot;:&quot;90072fb4-175d-400f-9010-f648afab8fe0&quot;,&#xd;
               &quot;ParentName&quot;:&quot;Департаменты и управления Аппарата Правительства Российской Федерации&quot;,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:2&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_DepartmentRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;abe57cb7-e1cb-06f6-b7ca-ad1668bebd72&quot;,&#xd;
      &quot;TypeName&quot;:&quot;DepartmentRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:&quot;${DepartmenName1}&quot;&#xd;
   }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${cardUUID}&quot;,&quot;CardTypeID::uid&quot;:&quot;abe57cb7-e1cb-06f6-b7ca-ad1668bebd72&quot;,&quot;CardTypeName&quot;:&quot;DepartmentRole&quot;,&quot;CompressionMode::int&quot;:1,&quot;Info&quot;:{&quot;.digest&quot;:&quot;${DepartmenName1}&quot;},&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35. https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateDep2" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateCard" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="36. https://192.168.140.16/loadtest/web/tessa/api/v1/cards/new" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;CardTypeName&quot;:&quot;DepartmentRole&quot;,&quot;Info&quot;:{}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/new</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:null,&#xd;
                     &quot;Value::uid&quot;:&quot;${cardUUID_}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Role&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;RoleDeputies&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;CheckUserRole&quot;:[{&quot;::single_type&quot;:&quot;uid&quot;},&quot;${userID}&quot;,&quot;2454f52f-70f9-4548-bfc1-58548065974d&quot;,&quot;8d8d2bd9-1f6d-4f96-b6b1-1d0ad415f8a8&quot;]},&quot;RequestType::uid&quot;:&quot;c4df4f86-7cbe-40a1-8cfc-faaf21901032&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="39. https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;RoleID::uid&quot;:&quot;2119aa21-c99b-45db-8e8b-c2a369e98478&quot;,&quot;UserID::uid&quot;:&quot;${userID}&quot;},&quot;RequestType::uid&quot;:&quot;8660e758-562a-4212-8e1c-9c14e571da89&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenHeadDepartmentGuide" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="40. https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Length" elementType="Header">
                    <stringProp name="Header.name">Content-Length</stringProp>
                    <stringProp name="Header.value">147</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="RandomTimer.range">28550.800000000003</stringProp>
                <stringProp name="ConstantTimer.delay">57101.600000000006</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="41. https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;Departments&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Length" elementType="Header">
                    <stringProp name="Header.name">Content-Length</stringProp>
                    <stringProp name="Header.value">981</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="RandomTimer.range">146.4</stringProp>
                <stringProp name="ConstantTimer.delay">292.8</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchHeadDepartment" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="42. https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Contains&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;Поднебесный&quot;,&quot;Value&quot;:&quot;Поднебесный&quot;}]}],&quot;Name&quot;:&quot;Name&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;Departments&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Length" elementType="Header">
                    <stringProp name="Header.name">Content-Length</stringProp>
                    <stringProp name="Header.value">1202</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="RandomTimer.range">17217.600000000002</stringProp>
                <stringProp name="ConstantTimer.delay">34435.200000000004</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveCreatedDepartment" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="43. https://192.168.140.16/loadtest/web/tessa/api/v1/cards/store" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardUUID_}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;docTypeID&quot;:null&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApDepartmentAreaOfCompetenceTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDepartments&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;DocumentsAccessRoleID&quot;:null,&#xd;
               &quot;DocumentsAccessRoleName&quot;:null,&#xd;
               &quot;FullName&quot;:null,&#xd;
               &quot;HeadDeputyID&quot;:null,&#xd;
               &quot;HeadDeputyName&quot;:null,&#xd;
               &quot;ID_Source&quot;:null,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NameDat&quot;:null,&#xd;
               &quot;NameImn&quot;:null,&#xd;
               &quot;NameRod&quot;:null,&#xd;
               &quot;NameVin&quot;:null,&#xd;
               &quot;NotForSelection&quot;:false,&#xd;
               &quot;Order&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;RootSecondDepartmentID&quot;:null,&#xd;
               &quot;RootSecondDepartmentName&quot;:null,&#xd;
               &quot;SecretariatUserID&quot;:null,&#xd;
               &quot;SecretariatUserName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApSubDepartmentListVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;DepartmentRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DepartmentCode&quot;:null,&#xd;
               &quot;HeadUserID&quot;:null,&#xd;
               &quot;HeadUserName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;Name&quot;,&#xd;
               &quot;ParentID&quot;,&#xd;
               &quot;ParentName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;DisableDeputies&quot;:false,&#xd;
               &quot;ExternalID&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:&quot;${DepartmenName2}&quot;,&#xd;
               &quot;ParentID::uid&quot;:&quot;${cardUUID}&quot;,&#xd;
               &quot;ParentName&quot;:&quot;${DepartmenName1}&quot;,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:2&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_DepartmentRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;abe57cb7-e1cb-06f6-b7ca-ad1668bebd72&quot;,&#xd;
      &quot;TypeName&quot;:&quot;DepartmentRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:&quot;${DepartmenName2}&quot;&#xd;
   }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${cardUUID_}&quot;,&quot;CardTypeID::uid&quot;:&quot;abe57cb7-e1cb-06f6-b7ca-ad1668bebd72&quot;,&quot;CardTypeName&quot;:&quot;DepartmentRole&quot;,&quot;CompressionMode::int&quot;:1,&quot;Info&quot;:{&quot;.digest&quot;:&quot;${DepartmenName2}&quot;},&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="45. https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardUUID_}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreatePerson" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">import org.apache.jmeter.services.FileServer;

String path=FileServer.getFileServer().getBaseDir();

name1= vars.get(&quot;DirectorLogin&quot;);

file = new FileOutputStream(&quot;C://TEST SOFT/CreateUseres/IsGuyRight.csv&quot;, true); //spec-ify true if you want to overwrite file. Keep blank otherwise.
pr = new PrintStream(file); 
this.interpreter.setOut(pr); 
pr.print(name1);
file.close();</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateCardOfPerson" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateDirectlyCard" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="26" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&quot;Info&quot;:{}}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/new</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="26" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&quot;Info&quot;:{}}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/new</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;CheckUserRole&quot;:[{&quot;::single_type&quot;:&quot;uid&quot;},&quot;${userID}&quot;,&quot;2454f52f-70f9-4548-bfc1-58548065974d&quot;,&quot;8d8d2bd9-1f6d-4f96-b6b1-1d0ad415f8a8&quot;]},&quot;RequestType::uid&quot;:&quot;c4df4f86-7cbe-40a1-8cfc-faaf21901032&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="30" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;RoleID::uid&quot;:&quot;2119aa21-c99b-45db-8e8b-c2a369e98478&quot;,&quot;UserID::uid&quot;:&quot;${userID}&quot;},&quot;RequestType::uid&quot;:&quot;8660e758-562a-4212-8e1c-9c14e571da89&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenEnterSystemGuide" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="31" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;LoginTypes&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если одна роль" enabled="true">
              <stringProp name="IfController.condition">${__groovy(&quot;${RoleName1}&quot;!=&quot;&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если  две роли" enabled="true">
                <stringProp name="IfController.condition">${__groovy(&quot;${RoleName2}&quot;!=&quot;&quot;)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если  три роли" enabled="true">
                  <stringProp name="IfController.condition">${__groovy(&quot;${RoleName3}&quot;!=&quot;&quot;)}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                  <boolProp name="IfController.useExpression">true</boolProp>
                </IfController>
                <hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если 4 роли" enabled="true">
                    <stringProp name="IfController.condition">${__groovy(&quot;${RoleName4}&quot;!=&quot;&quot;)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если 5 ролей" enabled="true">
                      <stringProp name="IfController.condition">${__groovy(&quot;${RoleName5}&quot;!=&quot;&quot;)}</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                      <boolProp name="IfController.useExpression">true</boolProp>
                    </IfController>
                    <hashTree>
                      <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если 6 ролей" enabled="true">
                        <stringProp name="IfController.condition">${__groovy(&quot;${RoleName6}&quot;!=&quot;&quot;)}</stringProp>
                        <boolProp name="IfController.evaluateAll">false</boolProp>
                        <boolProp name="IfController.useExpression">true</boolProp>
                      </IfController>
                      <hashTree>
                        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если 7 ролей" enabled="true">
                          <stringProp name="IfController.condition">${__groovy(&quot;${RoleName7}&quot;!=&quot;&quot;)}</stringProp>
                          <boolProp name="IfController.evaluateAll">false</boolProp>
                          <boolProp name="IfController.useExpression">true</boolProp>
                        </IfController>
                        <hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если 8 ролей" enabled="true">
                            <stringProp name="IfController.condition">${__groovy(&quot;${RoleName8}&quot;!=&quot;&quot;)}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                            <boolProp name="IfController.useExpression">true</boolProp>
                          </IfController>
                          <hashTree>
                            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если 9 ролей" enabled="true">
                              <stringProp name="IfController.condition">${__groovy(&quot;${RoleName9}&quot;!=&quot;&quot;)}</stringProp>
                              <boolProp name="IfController.evaluateAll">false</boolProp>
                              <boolProp name="IfController.useExpression">true</boolProp>
                            </IfController>
                            <hashTree>
                              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если 10 ролей" enabled="true">
                                <stringProp name="IfController.condition">${__groovy(&quot;${RoleName10}&quot;!=&quot;&quot;)}</stringProp>
                                <boolProp name="IfController.evaluateAll">false</boolProp>
                                <boolProp name="IfController.useExpression">true</boolProp>
                              </IfController>
                              <hashTree>
                                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Set surfboard true" enabled="true">
                                  <stringProp name="BeanShellSampler.query">vars.put(&quot;surfboard&quot;, &quot;1&quot;);
vars.put(&quot;cheerleader&quot;, &quot;1&quot;);
vars.put(&quot;gates&quot;, &quot;1&quot;);
vars.put(&quot;basket&quot;, &quot;1&quot;);
vars.put(&quot;ski&quot;, &quot;1&quot;);
vars.put(&quot;boll&quot;, &quot;1&quot;);
vars.put(&quot;puck&quot;, &quot;1&quot;);
vars.put(&quot;shuttlecock&quot;, &quot;1&quot;);
vars.put(&quot;rollers&quot;, &quot;1&quot;);
vars.put(&quot;skate&quot;, &quot;1&quot;);



</stringProp>
                                  <stringProp name="BeanShellSampler.filename"></stringProp>
                                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                                </BeanShellSampler>
                                <hashTree/>
                                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Hellow i am 10" enabled="true">
                                  <boolProp name="displayJMeterProperties">false</boolProp>
                                  <boolProp name="displayJMeterVariables">true</boolProp>
                                  <boolProp name="displaySystemProperties">false</boolProp>
                                </DebugSampler>
                                <hashTree/>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получение id ролей" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role1ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role1ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName2}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName2}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role2ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role2ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName3}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName3}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role3ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role3ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName4}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName4}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role4ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role4ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName5}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName5}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role5ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role5ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName6}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName6}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role6ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role6ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName7}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName7}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role7ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role7ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName8}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName8}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role8ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role8ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName9}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName9}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role9ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role9ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName10}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName10}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role10ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role10ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveNewCard" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApBarcodeScannerUsrCfg&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;ID_source&quot;:null,&#xd;
               &quot;IsClosePendingDisabled&quot;:false,&#xd;
               &quot;IsDismissed&quot;:false,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NumberInitials&quot;:null,&#xd;
               &quot;PersonDat&quot;:null,&#xd;
               &quot;PersonPre&quot;:null,&#xd;
               &quot;PersonRod&quot;:null,&#xd;
               &quot;PersonTvo&quot;:null,&#xd;
               &quot;PersonVin&quot;:null,&#xd;
               &quot;PositionDat&quot;:null,&#xd;
               &quot;PositionImn&quot;:null,&#xd;
               &quot;PositionRod&quot;:null,&#xd;
               &quot;PositionText&quot;:null,&#xd;
               &quot;PressServiceExportFolder&quot;:null,&#xd;
               &quot;Room&quot;:null,&#xd;
               &quot;SecretariatID&quot;:null,&#xd;
               &quot;SecretariatName&quot;:null,&#xd;
               &quot;SummaryExportFolder&quot;:null,&#xd;
               &quot;UopiExportFolder&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApPersonalRolesPrinters&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:true&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantDocKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantEntryPoints&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantFileType&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;FileCategoryID&quot;:null,&#xd;
               &quot;FileCategoryName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistants&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistory&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrAuthorDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrDocReceiversCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrPartnerTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryPerformerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_FieldChangedCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocStateCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrPartnerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrTaskTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrUsersCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocKindsCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocStatesCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionCompletionOptions&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionFunctionRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ConditionsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;CustomBackgroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomBlockColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomForegroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;DefaultWorkplacesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;ba729035-42d5-4a18-ae4d-b5fde98ed42b&quot;,&#xd;
                  &quot;WorkplaceID::uid&quot;:&quot;6b522604-0bdf-4cc0-a8d9-b1df3320584f&quot;,&#xd;
                  &quot;WorkplaceName&quot;:&quot;ЗамПред&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;FmUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;EnableMessageIndicator&quot;:true,&#xd;
               &quot;IsNotShowMsgIndicatorOnStartup&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;KrActiveTasksVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalInfoUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrApprovalCommonInfoVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;ApprovedBy&quot;:null,&#xd;
               &quot;AuthorComment&quot;:null,&#xd;
               &quot;AuthorID&quot;:null,&#xd;
               &quot;AuthorName&quot;:null,&#xd;
               &quot;CurrentApprovalStageRowID&quot;:null,&#xd;
               &quot;DisapprovedBy&quot;:null,&#xd;
               &quot;MainCardID&quot;:null,&#xd;
               &quot;ProcessOwnerID&quot;:null,&#xd;
               &quot;ProcessOwnerName&quot;:null,&#xd;
               &quot;StateChangedDateTimeUTC&quot;:null,&#xd;
               &quot;StateID::int&quot;:0,&#xd;
               &quot;StateName&quot;:&quot;$KrStates_Doc_Draft&quot;&#xd;
            }&#xd;
         },&#xd;
         &quot;KrApprovalHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrDialogButtonSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkNestedProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkSecondaryProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrNotificationOptionalRecipientsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrPerformersVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrStagesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUniversalTaskOptionsSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DisableTaskPopupNotifications&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRulesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AllowanceType&quot;:null,&#xd;
                  &quot;Disallow&quot;:true,&#xd;
                  &quot;Name&quot;:&quot;Отключить все&quot;,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRuleTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;967bfb11-4dc5-4f94-884d-5512717c9c27&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;816aaf6b-f601-4b69-bac4-2bb26697d4f4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;471e9ca5-8f3e-451c-afc3-4b8eaf8d26c6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Внутренний документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;acb9811f-1130-4c77-b50c-3caece5223c2&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;06cfa119-409b-4f7d-8a26-dde973712133&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ReturnFromPostponeNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;01a87a90-68b9-4b0c-a994-9a857fd64ec0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c410ab01-6890-4a7f-80f2-2d1cc9037d63&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Входящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;0d96e715-24df-4fe4-aea3-74378f43407c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f543d9b7-3d04-4bec-b1ce-60d735fd8374&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ee1b057f-9b73-4813-ae76-84fd2756913d&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2d5a655c-8757-4249-b987-3548bf3bc4ba&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения исполнителем дочернего поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;07c4a069-f4f7-464c-b05b-0bba5b440b43&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;032c0098-4a93-464c-959b-ae89f7c80cb6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения поручения соисполнителем&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;09bf9c04-be98-405c-acdb-7d767d59d7b4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;02b56f51-5085-48a9-952d-ea83f517c478&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение контроля исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;8e9cfb4e-d5c4-425f-85a7-1e333bf9c2e7&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;85054f91-9b48-4c4d-a3e3-1f019b15e8a9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3debfa49-e272-4a15-ac79-05364b34a0a6&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1db3d05b-dc2d-498b-a8e6-6956781a063c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение проверки исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6d64082e-372e-4e75-ba2b-236d101a0df8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ea46a095-d7ed-4309-b3d1-3e5c434a9d50&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TaskNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c36e86b6-6101-4067-8357-2ca981b6d8be&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ec2d437c-5fd9-4f6e-bcfa-fddb9acec096&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Изменение срока исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;a5d7cd05-a21d-4412-9d93-7c16ca679efc&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;70e39d81-2843-4a25-bcf5-c0f8b4a32e77&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Исходящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;55bcba7f-0e2e-439a-a1ce-f294681c26c4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2f168457-6a7f-4f1a-9bc6-bbb369f6499f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Общий процесс&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;4f9ee838-74df-4b98-ad9c-06683179a45f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8660fbf3-11a5-46a8-a1ba-1ae60177e82c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotification_AcquaintanceType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9d070b1a-f6b3-40d6-a08b-00d9e70dad7f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;b27cd592-8f80-4039-b694-547c94ecd31e&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_CommentNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c7a3be23-c42b-4971-88a3-eac6502f09a0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1f5f3d98-232c-461a-8350-98cd7f230459&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskRevokedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;95773bf8-11dc-4e25-8bbf-aa97371e8bb5&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;914deea1-6e40-4d01-af6c-42d2055c61d9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Отзыв поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3a1906d7-2406-4724-8301-b5f6ca3c64c9&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c5a765f4-bd96-44c3-8c5f-5cf5fe43c521&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$Notifications_Other&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;406c9297-e763-415e-9262-7b8c595ff1d3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3ede2c7b-1e06-4d43-bb3a-8752e2bc146a&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ForumNewMessagesNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;5fb7363e-023f-43c4-93ed-d19e3d3863df&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;a05d2e88-cbcc-40f8-b655-93d8c02a5525&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр отправки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;37ca2bfa-c22e-45eb-8da9-fc737a9b454c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;42f27ce9-ab29-4f1f-a302-c7ae90a841e5&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр доставки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53a097c1-2cf4-47e3-88ea-e57a9f92747f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ae5c5cd7-4c7c-4b8b-a679-8d5c2fe5d2da&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция аннулирована&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9a995274-b6ac-408a-ac89-79eadd2ba8b3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;701b44c7-90ab-4485-b9b7-aab9b4b91149&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция исполнена&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;03b5c071-280f-4006-b5c9-e07009bb757a&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3d5d7a44-c74e-418f-85eb-201bac6a9493&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция отозвана&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9271192a-2187-42f9-b042-e6c3f6134dab&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;77bdba46-e241-479a-aea1-6b0987da9783&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Смена исполнителя поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;b970e7e7-a430-43ab-965f-853460d26348&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7af52656-2a34-4f9c-b8ac-265f0c48f442&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Согласование досыла. Отказ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;47db0ce8-672c-4345-9a90-de9e198ec59c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;e0a148bf-1a73-4581-b8b6-05d0c61b85db&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление о миграции после одобрения запроса доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3f93dcd9-b6ef-46d9-aaa1-75fc016678d4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;6bbbaf3c-d578-40a7-8f44-b22aeaa95ab7&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об отказе в предоставлении доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;62bf7f22-84f5-48e3-8b40-47443b530aa1&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;90fca673-2e25-4adc-958d-03a8aa79b13f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об ошибке при миграции карточки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9c665744-e962-4e0d-9131-5e8c095d4c79&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f979367c-5d0c-429e-8cbd-9b1a508c1340&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об успешном завершении миграции&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;fdc664f8-57b0-42a7-a971-9b0b606b77e8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7daca7d3-70f7-4643-9431-f5cf975ee115&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;ФИАС&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;2fda3e2e-5418-4fff-b945-54fa3ce7888e&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;LastName&quot;,&#xd;
               &quot;FirstName&quot;,&#xd;
               &quot;MiddleName&quot;,&#xd;
               &quot;Name&quot;,&#xd;
               &quot;FullName&quot;,&#xd;
               &quot;LoginTypeID&quot;,&#xd;
               &quot;LoginTypeName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AccessLevelID::int&quot;:0,&#xd;
               &quot;AccessLevelName&quot;:&quot;$Enum_AccessLevels_Regular&quot;,&#xd;
               &quot;ApplicationArchitectureID::int&quot;:0,&#xd;
               &quot;ApplicationArchitectureName&quot;:&quot;$Enum_ApplicationArchitectures_Auto&quot;,&#xd;
               &quot;BirthDate&quot;:null,&#xd;
               &quot;Blocked&quot;:false,&#xd;
               &quot;BlockedDueDate&quot;:null,&#xd;
               &quot;CipherInfo&quot;:null,&#xd;
               &quot;Email&quot;:null,&#xd;
               &quot;Fax&quot;:null,&#xd;
               &quot;FirstName&quot;:&quot;${DirectorFirstName}&quot;,&#xd;
               &quot;FullName&quot;:&quot;${DirectorLastName} ${DirectorFirstName} ${DirectorMiddleName}&quot;,&#xd;
               &quot;HomePhone&quot;:null,&#xd;
               &quot;IPPhone&quot;:null,&#xd;
               &quot;LastName&quot;:&quot;${DirectorLastName}&quot;,&#xd;
               &quot;Login&quot;:&quot;${DirectorLogin}&quot;,&#xd;
               &quot;LoginTypeID::int&quot;:1,&#xd;
               &quot;LoginTypeName&quot;:&quot;$Enum_LoginTypes_Tessa&quot;,&#xd;
               &quot;MiddleName&quot;:&quot;${DirectorMiddleName}&quot;,&#xd;
               &quot;MobilePhone&quot;:null,&#xd;
               &quot;Name&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
               &quot;PasswordChanged&quot;:null,&#xd;
               &quot;PasswordHash&quot;:null,&#xd;
               &quot;PasswordKey&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;Position&quot;:null,&#xd;
               &quot;Security&quot;:null,&#xd;
               &quot;SecurityLock&quot;:false,&#xd;
               &quot;UserPositionID&quot;:null,&#xd;
               &quot;UserPositionName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleStaticRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role1ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName1}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;850ed3b6-6af2-4df1-9b2e-4615a2b3e504&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role2ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName2}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;11edacee-27f5-4af5-828e-181487442803&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role3ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName3}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6f7e8c55-73ac-4c50-b749-1032487e395c&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role4ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName4}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53dccec1-9793-4128-865b-051d0e8be0ab&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role5ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName5}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;d5a6a966-a1b2-4f9c-b829-04c73c437a5d&quot;&#xd;
               },&#xd;
			{&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role6ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName6}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf6UUID}&quot;&#xd;
               },&#xd;
		     {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role7ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName7}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf7UUID}&quot;&#xd;
               },&#xd;
			   {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role8ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName8}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf8UUID}&quot;&#xd;
               },&#xd;
			   {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role9ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName9}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf9UUID}&quot;&#xd;
               },&#xd;
			   {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role10ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName10}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf10UUID}&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleSubscribedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LanguageCaption&quot;:null,&#xd;
               &quot;LanguageCode&quot;:null,&#xd;
               &quot;LanguageID&quot;:null,&#xd;
               &quot;Password&quot;: &quot;${DirectorPassword}&quot;,&#xd;
               &quot;PasswordRepeat&quot;:&quot;${DirectorPassword}&quot;,&#xd;
               &quot;Settings&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleUnsubscibedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8916d66f-627f-4733-91bf-4c264fcb9d1d&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TasksNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ac08e02e-a28a-40dc-ae28-41ea7e5b397e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementAccess&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementHelperVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserID&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:null,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:1&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;UserSettingsFunctionRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AssistantHeadParallelColor&quot;:null,&#xd;
               &quot;AssistantHeadParallelDeputyColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialDeputyColor&quot;:null,&#xd;
               &quot;AssistantParallelColor&quot;:null,&#xd;
               &quot;AssistantParallelEntryColor&quot;:null,&#xd;
               &quot;AssistantSerialColor&quot;:null,&#xd;
               &quot;AssistantSerialEntryColor&quot;:null,&#xd;
               &quot;AuthorColor&quot;:null,&#xd;
               &quot;AuthorDeputyColor&quot;:null,&#xd;
               &quot;PerformerColor&quot;:null,&#xd;
               &quot;PerformerDeputyColor&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;UserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LeftPanelOpenOnClick&quot;:true,&#xd;
               &quot;RightPanelOpenOnClick&quot;:true&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:null&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                                      <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                                      <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                    </JSONPostProcessor>
                                    <hashTree/>
                                  </hashTree>
                                  <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                                    <boolProp name="displayJMeterProperties">false</boolProp>
                                    <boolProp name="displayJMeterVariables">true</boolProp>
                                    <boolProp name="displaySystemProperties">false</boolProp>
                                  </DebugSampler>
                                  <hashTree/>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:null,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                                      <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                                      <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                    </JSONPostProcessor>
                                    <hashTree/>
                                  </hashTree>
                                  <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                                    <boolProp name="displayJMeterProperties">false</boolProp>
                                    <boolProp name="displayJMeterVariables">true</boolProp>
                                    <boolProp name="displaySystemProperties">false</boolProp>
                                  </DebugSampler>
                                  <hashTree/>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                              </hashTree>
                              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Иначе" enabled="true">
                                <stringProp name="IfController.condition">${__groovy(&quot;${surfboard}&quot;==&quot;0&quot;)}</stringProp>
                                <boolProp name="IfController.evaluateAll">false</boolProp>
                                <boolProp name="IfController.useExpression">true</boolProp>
                              </IfController>
                              <hashTree>
                                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Set cheerleader true" enabled="true">
                                  <stringProp name="BeanShellSampler.query">vars.put(&quot;cheerleader&quot;, &quot;1&quot;);
vars.put(&quot;gates&quot;, &quot;1&quot;);
vars.put(&quot;basket&quot;, &quot;1&quot;);
vars.put(&quot;ski&quot;, &quot;1&quot;);
vars.put(&quot;boll&quot;, &quot;1&quot;);
vars.put(&quot;puck&quot;, &quot;1&quot;);
vars.put(&quot;shuttlecock&quot;, &quot;1&quot;);
vars.put(&quot;rollers&quot;, &quot;1&quot;);
vars.put(&quot;skate&quot;, &quot;1&quot;);



</stringProp>
                                  <stringProp name="BeanShellSampler.filename"></stringProp>
                                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                                </BeanShellSampler>
                                <hashTree/>
                                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Hellow i am 9" enabled="true">
                                  <boolProp name="displayJMeterProperties">false</boolProp>
                                  <boolProp name="displayJMeterVariables">true</boolProp>
                                  <boolProp name="displaySystemProperties">false</boolProp>
                                </DebugSampler>
                                <hashTree/>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получение id ролей" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role1ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role1ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName2}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName2}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role2ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role2ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName3}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName3}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role3ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role3ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName4}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName4}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role4ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role4ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName5}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName5}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role5ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role5ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName6}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName6}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role6ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role6ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName7}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName7}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role7ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role7ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName8}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName8}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role8ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role8ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                                    <boolProp name="TransactionController.parent">false</boolProp>
                                  </TransactionController>
                                  <hashTree>
                                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                        <collectionProp name="Arguments.arguments">
                                          <elementProp name="" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName9}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName9}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </elementProp>
                                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                      <stringProp name="HTTPSampler.method">POST</stringProp>
                                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                    </HTTPSamplerProxy>
                                    <hashTree>
                                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                        <collectionProp name="HeaderManager.headers">
                                          <elementProp name="Host" elementType="Header">
                                            <stringProp name="Header.name">Host</stringProp>
                                            <stringProp name="Header.value">${host}</stringProp>
                                          </elementProp>
                                          <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                          </elementProp>
                                          <elementProp name="Content-Type" elementType="Header">
                                            <stringProp name="Header.name">Content-Type</stringProp>
                                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                          </elementProp>
                                          <elementProp name="Tessa-Session" elementType="Header">
                                            <stringProp name="Header.name">Tessa-Session</stringProp>
                                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                          </elementProp>
                                        </collectionProp>
                                      </HeaderManager>
                                      <hashTree/>
                                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role9ID" enabled="true">
                                        <stringProp name="JSONPostProcessor.referenceNames">Role9ID</stringProp>
                                        <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                      </JSONPostProcessor>
                                      <hashTree/>
                                    </hashTree>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveNewCard" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApBarcodeScannerUsrCfg&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;ID_source&quot;:null,&#xd;
               &quot;IsClosePendingDisabled&quot;:false,&#xd;
               &quot;IsDismissed&quot;:false,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NumberInitials&quot;:null,&#xd;
               &quot;PersonDat&quot;:null,&#xd;
               &quot;PersonPre&quot;:null,&#xd;
               &quot;PersonRod&quot;:null,&#xd;
               &quot;PersonTvo&quot;:null,&#xd;
               &quot;PersonVin&quot;:null,&#xd;
               &quot;PositionDat&quot;:null,&#xd;
               &quot;PositionImn&quot;:null,&#xd;
               &quot;PositionRod&quot;:null,&#xd;
               &quot;PositionText&quot;:null,&#xd;
               &quot;PressServiceExportFolder&quot;:null,&#xd;
               &quot;Room&quot;:null,&#xd;
               &quot;SecretariatID&quot;:null,&#xd;
               &quot;SecretariatName&quot;:null,&#xd;
               &quot;SummaryExportFolder&quot;:null,&#xd;
               &quot;UopiExportFolder&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApPersonalRolesPrinters&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:true&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantDocKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantEntryPoints&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantFileType&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;FileCategoryID&quot;:null,&#xd;
               &quot;FileCategoryName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistants&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistory&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrAuthorDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrDocReceiversCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrPartnerTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryPerformerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_FieldChangedCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocStateCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrPartnerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrTaskTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrUsersCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocKindsCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocStatesCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionCompletionOptions&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionFunctionRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ConditionsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;CustomBackgroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomBlockColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomForegroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;DefaultWorkplacesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;ba729035-42d5-4a18-ae4d-b5fde98ed42b&quot;,&#xd;
                  &quot;WorkplaceID::uid&quot;:&quot;6b522604-0bdf-4cc0-a8d9-b1df3320584f&quot;,&#xd;
                  &quot;WorkplaceName&quot;:&quot;ЗамПред&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;FmUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;EnableMessageIndicator&quot;:true,&#xd;
               &quot;IsNotShowMsgIndicatorOnStartup&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;KrActiveTasksVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalInfoUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrApprovalCommonInfoVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;ApprovedBy&quot;:null,&#xd;
               &quot;AuthorComment&quot;:null,&#xd;
               &quot;AuthorID&quot;:null,&#xd;
               &quot;AuthorName&quot;:null,&#xd;
               &quot;CurrentApprovalStageRowID&quot;:null,&#xd;
               &quot;DisapprovedBy&quot;:null,&#xd;
               &quot;MainCardID&quot;:null,&#xd;
               &quot;ProcessOwnerID&quot;:null,&#xd;
               &quot;ProcessOwnerName&quot;:null,&#xd;
               &quot;StateChangedDateTimeUTC&quot;:null,&#xd;
               &quot;StateID::int&quot;:0,&#xd;
               &quot;StateName&quot;:&quot;$KrStates_Doc_Draft&quot;&#xd;
            }&#xd;
         },&#xd;
         &quot;KrApprovalHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrDialogButtonSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkNestedProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkSecondaryProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrNotificationOptionalRecipientsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrPerformersVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrStagesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUniversalTaskOptionsSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DisableTaskPopupNotifications&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRulesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AllowanceType&quot;:null,&#xd;
                  &quot;Disallow&quot;:true,&#xd;
                  &quot;Name&quot;:&quot;Отключить все&quot;,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRuleTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;967bfb11-4dc5-4f94-884d-5512717c9c27&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;816aaf6b-f601-4b69-bac4-2bb26697d4f4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;471e9ca5-8f3e-451c-afc3-4b8eaf8d26c6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Внутренний документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;acb9811f-1130-4c77-b50c-3caece5223c2&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;06cfa119-409b-4f7d-8a26-dde973712133&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ReturnFromPostponeNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;01a87a90-68b9-4b0c-a994-9a857fd64ec0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c410ab01-6890-4a7f-80f2-2d1cc9037d63&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Входящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;0d96e715-24df-4fe4-aea3-74378f43407c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f543d9b7-3d04-4bec-b1ce-60d735fd8374&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ee1b057f-9b73-4813-ae76-84fd2756913d&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2d5a655c-8757-4249-b987-3548bf3bc4ba&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения исполнителем дочернего поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;07c4a069-f4f7-464c-b05b-0bba5b440b43&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;032c0098-4a93-464c-959b-ae89f7c80cb6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения поручения соисполнителем&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;09bf9c04-be98-405c-acdb-7d767d59d7b4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;02b56f51-5085-48a9-952d-ea83f517c478&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение контроля исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;8e9cfb4e-d5c4-425f-85a7-1e333bf9c2e7&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;85054f91-9b48-4c4d-a3e3-1f019b15e8a9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3debfa49-e272-4a15-ac79-05364b34a0a6&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1db3d05b-dc2d-498b-a8e6-6956781a063c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение проверки исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6d64082e-372e-4e75-ba2b-236d101a0df8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ea46a095-d7ed-4309-b3d1-3e5c434a9d50&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TaskNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c36e86b6-6101-4067-8357-2ca981b6d8be&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ec2d437c-5fd9-4f6e-bcfa-fddb9acec096&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Изменение срока исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;a5d7cd05-a21d-4412-9d93-7c16ca679efc&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;70e39d81-2843-4a25-bcf5-c0f8b4a32e77&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Исходящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;55bcba7f-0e2e-439a-a1ce-f294681c26c4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2f168457-6a7f-4f1a-9bc6-bbb369f6499f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Общий процесс&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;4f9ee838-74df-4b98-ad9c-06683179a45f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8660fbf3-11a5-46a8-a1ba-1ae60177e82c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotification_AcquaintanceType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9d070b1a-f6b3-40d6-a08b-00d9e70dad7f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;b27cd592-8f80-4039-b694-547c94ecd31e&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_CommentNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c7a3be23-c42b-4971-88a3-eac6502f09a0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1f5f3d98-232c-461a-8350-98cd7f230459&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskRevokedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;95773bf8-11dc-4e25-8bbf-aa97371e8bb5&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;914deea1-6e40-4d01-af6c-42d2055c61d9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Отзыв поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3a1906d7-2406-4724-8301-b5f6ca3c64c9&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c5a765f4-bd96-44c3-8c5f-5cf5fe43c521&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$Notifications_Other&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;406c9297-e763-415e-9262-7b8c595ff1d3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3ede2c7b-1e06-4d43-bb3a-8752e2bc146a&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ForumNewMessagesNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;5fb7363e-023f-43c4-93ed-d19e3d3863df&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;a05d2e88-cbcc-40f8-b655-93d8c02a5525&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр отправки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;37ca2bfa-c22e-45eb-8da9-fc737a9b454c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;42f27ce9-ab29-4f1f-a302-c7ae90a841e5&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр доставки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53a097c1-2cf4-47e3-88ea-e57a9f92747f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ae5c5cd7-4c7c-4b8b-a679-8d5c2fe5d2da&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция аннулирована&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9a995274-b6ac-408a-ac89-79eadd2ba8b3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;701b44c7-90ab-4485-b9b7-aab9b4b91149&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция исполнена&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;03b5c071-280f-4006-b5c9-e07009bb757a&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3d5d7a44-c74e-418f-85eb-201bac6a9493&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция отозвана&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9271192a-2187-42f9-b042-e6c3f6134dab&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;77bdba46-e241-479a-aea1-6b0987da9783&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Смена исполнителя поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;b970e7e7-a430-43ab-965f-853460d26348&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7af52656-2a34-4f9c-b8ac-265f0c48f442&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Согласование досыла. Отказ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;47db0ce8-672c-4345-9a90-de9e198ec59c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;e0a148bf-1a73-4581-b8b6-05d0c61b85db&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление о миграции после одобрения запроса доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3f93dcd9-b6ef-46d9-aaa1-75fc016678d4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;6bbbaf3c-d578-40a7-8f44-b22aeaa95ab7&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об отказе в предоставлении доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;62bf7f22-84f5-48e3-8b40-47443b530aa1&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;90fca673-2e25-4adc-958d-03a8aa79b13f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об ошибке при миграции карточки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9c665744-e962-4e0d-9131-5e8c095d4c79&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f979367c-5d0c-429e-8cbd-9b1a508c1340&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об успешном завершении миграции&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;fdc664f8-57b0-42a7-a971-9b0b606b77e8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7daca7d3-70f7-4643-9431-f5cf975ee115&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;ФИАС&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;2fda3e2e-5418-4fff-b945-54fa3ce7888e&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;LastName&quot;,&#xd;
               &quot;FirstName&quot;,&#xd;
               &quot;MiddleName&quot;,&#xd;
               &quot;Name&quot;,&#xd;
               &quot;FullName&quot;,&#xd;
               &quot;LoginTypeID&quot;,&#xd;
               &quot;LoginTypeName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AccessLevelID::int&quot;:0,&#xd;
               &quot;AccessLevelName&quot;:&quot;$Enum_AccessLevels_Regular&quot;,&#xd;
               &quot;ApplicationArchitectureID::int&quot;:0,&#xd;
               &quot;ApplicationArchitectureName&quot;:&quot;$Enum_ApplicationArchitectures_Auto&quot;,&#xd;
               &quot;BirthDate&quot;:null,&#xd;
               &quot;Blocked&quot;:false,&#xd;
               &quot;BlockedDueDate&quot;:null,&#xd;
               &quot;CipherInfo&quot;:null,&#xd;
               &quot;Email&quot;:null,&#xd;
               &quot;Fax&quot;:null,&#xd;
               &quot;FirstName&quot;:&quot;${DirectorFirstName}&quot;,&#xd;
               &quot;FullName&quot;:&quot;${DirectorLastName} ${DirectorFirstName} ${DirectorMiddleName}&quot;,&#xd;
               &quot;HomePhone&quot;:null,&#xd;
               &quot;IPPhone&quot;:null,&#xd;
               &quot;LastName&quot;:&quot;${DirectorLastName}&quot;,&#xd;
               &quot;Login&quot;:&quot;${DirectorLogin}&quot;,&#xd;
               &quot;LoginTypeID::int&quot;:1,&#xd;
               &quot;LoginTypeName&quot;:&quot;$Enum_LoginTypes_Tessa&quot;,&#xd;
               &quot;MiddleName&quot;:&quot;${DirectorMiddleName}&quot;,&#xd;
               &quot;MobilePhone&quot;:null,&#xd;
               &quot;Name&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
               &quot;PasswordChanged&quot;:null,&#xd;
               &quot;PasswordHash&quot;:null,&#xd;
               &quot;PasswordKey&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;Position&quot;:null,&#xd;
               &quot;Security&quot;:null,&#xd;
               &quot;SecurityLock&quot;:false,&#xd;
               &quot;UserPositionID&quot;:null,&#xd;
               &quot;UserPositionName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleStaticRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role1ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName1}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;850ed3b6-6af2-4df1-9b2e-4615a2b3e504&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role2ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName2}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;11edacee-27f5-4af5-828e-181487442803&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role3ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName3}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6f7e8c55-73ac-4c50-b749-1032487e395c&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role4ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName4}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53dccec1-9793-4128-865b-051d0e8be0ab&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role5ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName5}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;d5a6a966-a1b2-4f9c-b829-04c73c437a5d&quot;&#xd;
               },&#xd;
			{&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role6ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName6}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf6UUID}&quot;&#xd;
               },&#xd;
		     {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role7ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName7}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf7UUID}&quot;&#xd;
               },&#xd;
			   {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role8ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName8}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf8UUID}&quot;&#xd;
               },&#xd;
			   {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role9ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName9}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf9UUID}&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleSubscribedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LanguageCaption&quot;:null,&#xd;
               &quot;LanguageCode&quot;:null,&#xd;
               &quot;LanguageID&quot;:null,&#xd;
               &quot;Password&quot;: &quot;${DirectorPassword}&quot;,&#xd;
               &quot;PasswordRepeat&quot;:&quot;${DirectorPassword}&quot;,&#xd;
               &quot;Settings&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleUnsubscibedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8916d66f-627f-4733-91bf-4c264fcb9d1d&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TasksNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ac08e02e-a28a-40dc-ae28-41ea7e5b397e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementAccess&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementHelperVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserID&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:null,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:1&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;UserSettingsFunctionRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AssistantHeadParallelColor&quot;:null,&#xd;
               &quot;AssistantHeadParallelDeputyColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialDeputyColor&quot;:null,&#xd;
               &quot;AssistantParallelColor&quot;:null,&#xd;
               &quot;AssistantParallelEntryColor&quot;:null,&#xd;
               &quot;AssistantSerialColor&quot;:null,&#xd;
               &quot;AssistantSerialEntryColor&quot;:null,&#xd;
               &quot;AuthorColor&quot;:null,&#xd;
               &quot;AuthorDeputyColor&quot;:null,&#xd;
               &quot;PerformerColor&quot;:null,&#xd;
               &quot;PerformerDeputyColor&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;UserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LeftPanelOpenOnClick&quot;:true,&#xd;
               &quot;RightPanelOpenOnClick&quot;:true&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:null&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                                      <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                                      <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                    </JSONPostProcessor>
                                    <hashTree/>
                                  </hashTree>
                                  <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                                    <boolProp name="displayJMeterProperties">false</boolProp>
                                    <boolProp name="displayJMeterVariables">true</boolProp>
                                    <boolProp name="displaySystemProperties">false</boolProp>
                                  </DebugSampler>
                                  <hashTree/>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:null,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                                      <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                                      <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                    </JSONPostProcessor>
                                    <hashTree/>
                                  </hashTree>
                                  <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                                    <boolProp name="displayJMeterProperties">false</boolProp>
                                    <boolProp name="displayJMeterVariables">true</boolProp>
                                    <boolProp name="displaySystemProperties">false</boolProp>
                                  </DebugSampler>
                                  <hashTree/>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                              </hashTree>
                            </hashTree>
                            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Иначе" enabled="true">
                              <stringProp name="IfController.condition">${__groovy(&quot;${cheerleader}&quot;==&quot;0&quot;)}</stringProp>
                              <boolProp name="IfController.evaluateAll">false</boolProp>
                              <boolProp name="IfController.useExpression">true</boolProp>
                            </IfController>
                            <hashTree>
                              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Set gates true" enabled="true">
                                <stringProp name="BeanShellSampler.query">vars.put(&quot;gates&quot;, &quot;1&quot;);
vars.put(&quot;basket&quot;, &quot;1&quot;);
vars.put(&quot;ski&quot;, &quot;1&quot;);
vars.put(&quot;boll&quot;, &quot;1&quot;);
vars.put(&quot;puck&quot;, &quot;1&quot;);
vars.put(&quot;shuttlecock&quot;, &quot;1&quot;);
vars.put(&quot;rollers&quot;, &quot;1&quot;);
vars.put(&quot;skate&quot;, &quot;1&quot;);



</stringProp>
                                <stringProp name="BeanShellSampler.filename"></stringProp>
                                <stringProp name="BeanShellSampler.parameters"></stringProp>
                                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                              </BeanShellSampler>
                              <hashTree/>
                              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Hellow i am 8" enabled="true">
                                <boolProp name="displayJMeterProperties">false</boolProp>
                                <boolProp name="displayJMeterVariables">true</boolProp>
                                <boolProp name="displaySystemProperties">false</boolProp>
                              </DebugSampler>
                              <hashTree/>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получение id ролей" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role1ID" enabled="true">
                                      <stringProp name="JSONPostProcessor.referenceNames">Role1ID</stringProp>
                                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                    </JSONPostProcessor>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName2}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName2}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role2ID" enabled="true">
                                      <stringProp name="JSONPostProcessor.referenceNames">Role2ID</stringProp>
                                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                    </JSONPostProcessor>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName3}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName3}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role3ID" enabled="true">
                                      <stringProp name="JSONPostProcessor.referenceNames">Role3ID</stringProp>
                                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                    </JSONPostProcessor>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName4}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName4}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role4ID" enabled="true">
                                      <stringProp name="JSONPostProcessor.referenceNames">Role4ID</stringProp>
                                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                    </JSONPostProcessor>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName5}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName5}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role5ID" enabled="true">
                                      <stringProp name="JSONPostProcessor.referenceNames">Role5ID</stringProp>
                                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                    </JSONPostProcessor>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName6}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName6}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role6ID" enabled="true">
                                      <stringProp name="JSONPostProcessor.referenceNames">Role6ID</stringProp>
                                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                    </JSONPostProcessor>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName7}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName7}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role7ID" enabled="true">
                                      <stringProp name="JSONPostProcessor.referenceNames">Role7ID</stringProp>
                                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                    </JSONPostProcessor>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                                  <boolProp name="TransactionController.parent">false</boolProp>
                                </TransactionController>
                                <hashTree>
                                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                      <collectionProp name="Arguments.arguments">
                                        <elementProp name="" elementType="HTTPArgument">
                                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName8}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName8}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                          <stringProp name="Argument.metadata">=</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </elementProp>
                                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                    <stringProp name="HTTPSampler.method">POST</stringProp>
                                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                  </HTTPSamplerProxy>
                                  <hashTree>
                                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                      <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Host" elementType="Header">
                                          <stringProp name="Header.name">Host</stringProp>
                                          <stringProp name="Header.value">${host}</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                        </elementProp>
                                        <elementProp name="Content-Type" elementType="Header">
                                          <stringProp name="Header.name">Content-Type</stringProp>
                                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                        </elementProp>
                                        <elementProp name="Tessa-Session" elementType="Header">
                                          <stringProp name="Header.name">Tessa-Session</stringProp>
                                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                        </elementProp>
                                      </collectionProp>
                                    </HeaderManager>
                                    <hashTree/>
                                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role8ID" enabled="true">
                                      <stringProp name="JSONPostProcessor.referenceNames">Role8ID</stringProp>
                                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                    </JSONPostProcessor>
                                    <hashTree/>
                                  </hashTree>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveNewCard" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApBarcodeScannerUsrCfg&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;ID_source&quot;:null,&#xd;
               &quot;IsClosePendingDisabled&quot;:false,&#xd;
               &quot;IsDismissed&quot;:false,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NumberInitials&quot;:null,&#xd;
               &quot;PersonDat&quot;:null,&#xd;
               &quot;PersonPre&quot;:null,&#xd;
               &quot;PersonRod&quot;:null,&#xd;
               &quot;PersonTvo&quot;:null,&#xd;
               &quot;PersonVin&quot;:null,&#xd;
               &quot;PositionDat&quot;:null,&#xd;
               &quot;PositionImn&quot;:null,&#xd;
               &quot;PositionRod&quot;:null,&#xd;
               &quot;PositionText&quot;:null,&#xd;
               &quot;PressServiceExportFolder&quot;:null,&#xd;
               &quot;Room&quot;:null,&#xd;
               &quot;SecretariatID&quot;:null,&#xd;
               &quot;SecretariatName&quot;:null,&#xd;
               &quot;SummaryExportFolder&quot;:null,&#xd;
               &quot;UopiExportFolder&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApPersonalRolesPrinters&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:true&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantDocKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantEntryPoints&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantFileType&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;FileCategoryID&quot;:null,&#xd;
               &quot;FileCategoryName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistants&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistory&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrAuthorDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrDocReceiversCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrPartnerTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryPerformerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_FieldChangedCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocStateCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrPartnerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrTaskTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrUsersCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocKindsCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocStatesCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionCompletionOptions&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionFunctionRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ConditionsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;CustomBackgroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomBlockColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomForegroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;DefaultWorkplacesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;ba729035-42d5-4a18-ae4d-b5fde98ed42b&quot;,&#xd;
                  &quot;WorkplaceID::uid&quot;:&quot;6b522604-0bdf-4cc0-a8d9-b1df3320584f&quot;,&#xd;
                  &quot;WorkplaceName&quot;:&quot;ЗамПред&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;FmUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;EnableMessageIndicator&quot;:true,&#xd;
               &quot;IsNotShowMsgIndicatorOnStartup&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;KrActiveTasksVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalInfoUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrApprovalCommonInfoVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;ApprovedBy&quot;:null,&#xd;
               &quot;AuthorComment&quot;:null,&#xd;
               &quot;AuthorID&quot;:null,&#xd;
               &quot;AuthorName&quot;:null,&#xd;
               &quot;CurrentApprovalStageRowID&quot;:null,&#xd;
               &quot;DisapprovedBy&quot;:null,&#xd;
               &quot;MainCardID&quot;:null,&#xd;
               &quot;ProcessOwnerID&quot;:null,&#xd;
               &quot;ProcessOwnerName&quot;:null,&#xd;
               &quot;StateChangedDateTimeUTC&quot;:null,&#xd;
               &quot;StateID::int&quot;:0,&#xd;
               &quot;StateName&quot;:&quot;$KrStates_Doc_Draft&quot;&#xd;
            }&#xd;
         },&#xd;
         &quot;KrApprovalHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrDialogButtonSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkNestedProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkSecondaryProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrNotificationOptionalRecipientsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrPerformersVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrStagesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUniversalTaskOptionsSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DisableTaskPopupNotifications&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRulesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AllowanceType&quot;:null,&#xd;
                  &quot;Disallow&quot;:true,&#xd;
                  &quot;Name&quot;:&quot;Отключить все&quot;,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRuleTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;967bfb11-4dc5-4f94-884d-5512717c9c27&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;816aaf6b-f601-4b69-bac4-2bb26697d4f4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;471e9ca5-8f3e-451c-afc3-4b8eaf8d26c6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Внутренний документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;acb9811f-1130-4c77-b50c-3caece5223c2&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;06cfa119-409b-4f7d-8a26-dde973712133&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ReturnFromPostponeNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;01a87a90-68b9-4b0c-a994-9a857fd64ec0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c410ab01-6890-4a7f-80f2-2d1cc9037d63&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Входящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;0d96e715-24df-4fe4-aea3-74378f43407c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f543d9b7-3d04-4bec-b1ce-60d735fd8374&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ee1b057f-9b73-4813-ae76-84fd2756913d&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2d5a655c-8757-4249-b987-3548bf3bc4ba&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения исполнителем дочернего поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;07c4a069-f4f7-464c-b05b-0bba5b440b43&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;032c0098-4a93-464c-959b-ae89f7c80cb6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения поручения соисполнителем&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;09bf9c04-be98-405c-acdb-7d767d59d7b4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;02b56f51-5085-48a9-952d-ea83f517c478&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение контроля исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;8e9cfb4e-d5c4-425f-85a7-1e333bf9c2e7&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;85054f91-9b48-4c4d-a3e3-1f019b15e8a9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3debfa49-e272-4a15-ac79-05364b34a0a6&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1db3d05b-dc2d-498b-a8e6-6956781a063c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение проверки исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6d64082e-372e-4e75-ba2b-236d101a0df8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ea46a095-d7ed-4309-b3d1-3e5c434a9d50&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TaskNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c36e86b6-6101-4067-8357-2ca981b6d8be&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ec2d437c-5fd9-4f6e-bcfa-fddb9acec096&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Изменение срока исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;a5d7cd05-a21d-4412-9d93-7c16ca679efc&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;70e39d81-2843-4a25-bcf5-c0f8b4a32e77&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Исходящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;55bcba7f-0e2e-439a-a1ce-f294681c26c4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2f168457-6a7f-4f1a-9bc6-bbb369f6499f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Общий процесс&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;4f9ee838-74df-4b98-ad9c-06683179a45f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8660fbf3-11a5-46a8-a1ba-1ae60177e82c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotification_AcquaintanceType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9d070b1a-f6b3-40d6-a08b-00d9e70dad7f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;b27cd592-8f80-4039-b694-547c94ecd31e&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_CommentNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c7a3be23-c42b-4971-88a3-eac6502f09a0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1f5f3d98-232c-461a-8350-98cd7f230459&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskRevokedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;95773bf8-11dc-4e25-8bbf-aa97371e8bb5&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;914deea1-6e40-4d01-af6c-42d2055c61d9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Отзыв поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3a1906d7-2406-4724-8301-b5f6ca3c64c9&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c5a765f4-bd96-44c3-8c5f-5cf5fe43c521&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$Notifications_Other&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;406c9297-e763-415e-9262-7b8c595ff1d3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3ede2c7b-1e06-4d43-bb3a-8752e2bc146a&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ForumNewMessagesNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;5fb7363e-023f-43c4-93ed-d19e3d3863df&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;a05d2e88-cbcc-40f8-b655-93d8c02a5525&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр отправки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;37ca2bfa-c22e-45eb-8da9-fc737a9b454c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;42f27ce9-ab29-4f1f-a302-c7ae90a841e5&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр доставки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53a097c1-2cf4-47e3-88ea-e57a9f92747f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ae5c5cd7-4c7c-4b8b-a679-8d5c2fe5d2da&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция аннулирована&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9a995274-b6ac-408a-ac89-79eadd2ba8b3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;701b44c7-90ab-4485-b9b7-aab9b4b91149&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция исполнена&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;03b5c071-280f-4006-b5c9-e07009bb757a&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3d5d7a44-c74e-418f-85eb-201bac6a9493&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция отозвана&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9271192a-2187-42f9-b042-e6c3f6134dab&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;77bdba46-e241-479a-aea1-6b0987da9783&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Смена исполнителя поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;b970e7e7-a430-43ab-965f-853460d26348&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7af52656-2a34-4f9c-b8ac-265f0c48f442&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Согласование досыла. Отказ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;47db0ce8-672c-4345-9a90-de9e198ec59c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;e0a148bf-1a73-4581-b8b6-05d0c61b85db&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление о миграции после одобрения запроса доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3f93dcd9-b6ef-46d9-aaa1-75fc016678d4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;6bbbaf3c-d578-40a7-8f44-b22aeaa95ab7&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об отказе в предоставлении доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;62bf7f22-84f5-48e3-8b40-47443b530aa1&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;90fca673-2e25-4adc-958d-03a8aa79b13f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об ошибке при миграции карточки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9c665744-e962-4e0d-9131-5e8c095d4c79&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f979367c-5d0c-429e-8cbd-9b1a508c1340&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об успешном завершении миграции&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;fdc664f8-57b0-42a7-a971-9b0b606b77e8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7daca7d3-70f7-4643-9431-f5cf975ee115&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;ФИАС&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;2fda3e2e-5418-4fff-b945-54fa3ce7888e&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;LastName&quot;,&#xd;
               &quot;FirstName&quot;,&#xd;
               &quot;MiddleName&quot;,&#xd;
               &quot;Name&quot;,&#xd;
               &quot;FullName&quot;,&#xd;
               &quot;LoginTypeID&quot;,&#xd;
               &quot;LoginTypeName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AccessLevelID::int&quot;:0,&#xd;
               &quot;AccessLevelName&quot;:&quot;$Enum_AccessLevels_Regular&quot;,&#xd;
               &quot;ApplicationArchitectureID::int&quot;:0,&#xd;
               &quot;ApplicationArchitectureName&quot;:&quot;$Enum_ApplicationArchitectures_Auto&quot;,&#xd;
               &quot;BirthDate&quot;:null,&#xd;
               &quot;Blocked&quot;:false,&#xd;
               &quot;BlockedDueDate&quot;:null,&#xd;
               &quot;CipherInfo&quot;:null,&#xd;
               &quot;Email&quot;:null,&#xd;
               &quot;Fax&quot;:null,&#xd;
               &quot;FirstName&quot;:&quot;${DirectorFirstName}&quot;,&#xd;
               &quot;FullName&quot;:&quot;${DirectorLastName} ${DirectorFirstName} ${DirectorMiddleName}&quot;,&#xd;
               &quot;HomePhone&quot;:null,&#xd;
               &quot;IPPhone&quot;:null,&#xd;
               &quot;LastName&quot;:&quot;${DirectorLastName}&quot;,&#xd;
               &quot;Login&quot;:&quot;${DirectorLogin}&quot;,&#xd;
               &quot;LoginTypeID::int&quot;:1,&#xd;
               &quot;LoginTypeName&quot;:&quot;$Enum_LoginTypes_Tessa&quot;,&#xd;
               &quot;MiddleName&quot;:&quot;${DirectorMiddleName}&quot;,&#xd;
               &quot;MobilePhone&quot;:null,&#xd;
               &quot;Name&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
               &quot;PasswordChanged&quot;:null,&#xd;
               &quot;PasswordHash&quot;:null,&#xd;
               &quot;PasswordKey&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;Position&quot;:null,&#xd;
               &quot;Security&quot;:null,&#xd;
               &quot;SecurityLock&quot;:false,&#xd;
               &quot;UserPositionID&quot;:null,&#xd;
               &quot;UserPositionName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleStaticRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role1ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName1}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;850ed3b6-6af2-4df1-9b2e-4615a2b3e504&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role2ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName2}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;11edacee-27f5-4af5-828e-181487442803&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role3ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName3}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6f7e8c55-73ac-4c50-b749-1032487e395c&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role4ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName4}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53dccec1-9793-4128-865b-051d0e8be0ab&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role5ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName5}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;d5a6a966-a1b2-4f9c-b829-04c73c437a5d&quot;&#xd;
               },&#xd;
			{&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role6ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName6}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf6UUID}&quot;&#xd;
               },&#xd;
		     {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role7ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName7}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf7UUID}&quot;&#xd;
               },&#xd;
			   {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role8ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName8}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf8UUID}&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleSubscribedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LanguageCaption&quot;:null,&#xd;
               &quot;LanguageCode&quot;:null,&#xd;
               &quot;LanguageID&quot;:null,&#xd;
               &quot;Password&quot;: &quot;${DirectorPassword}&quot;,&#xd;
               &quot;PasswordRepeat&quot;:&quot;${DirectorPassword}&quot;,&#xd;
               &quot;Settings&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleUnsubscibedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8916d66f-627f-4733-91bf-4c264fcb9d1d&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TasksNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ac08e02e-a28a-40dc-ae28-41ea7e5b397e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementAccess&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementHelperVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserID&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:null,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:1&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;UserSettingsFunctionRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AssistantHeadParallelColor&quot;:null,&#xd;
               &quot;AssistantHeadParallelDeputyColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialDeputyColor&quot;:null,&#xd;
               &quot;AssistantParallelColor&quot;:null,&#xd;
               &quot;AssistantParallelEntryColor&quot;:null,&#xd;
               &quot;AssistantSerialColor&quot;:null,&#xd;
               &quot;AssistantSerialEntryColor&quot;:null,&#xd;
               &quot;AuthorColor&quot;:null,&#xd;
               &quot;AuthorDeputyColor&quot;:null,&#xd;
               &quot;PerformerColor&quot;:null,&#xd;
               &quot;PerformerDeputyColor&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;UserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LeftPanelOpenOnClick&quot;:true,&#xd;
               &quot;RightPanelOpenOnClick&quot;:true&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:null&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                                    <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                                    <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                  </JSONPostProcessor>
                                  <hashTree/>
                                </hashTree>
                                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                                  <boolProp name="displayJMeterProperties">false</boolProp>
                                  <boolProp name="displayJMeterVariables">true</boolProp>
                                  <boolProp name="displaySystemProperties">false</boolProp>
                                </DebugSampler>
                                <hashTree/>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:null,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                                    <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                                    <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                  </JSONPostProcessor>
                                  <hashTree/>
                                </hashTree>
                                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                                  <boolProp name="displayJMeterProperties">false</boolProp>
                                  <boolProp name="displayJMeterVariables">true</boolProp>
                                  <boolProp name="displaySystemProperties">false</boolProp>
                                </DebugSampler>
                                <hashTree/>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                            </hashTree>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Иначе" enabled="true">
                            <stringProp name="IfController.condition">${__groovy(&quot;${gates}&quot;==&quot;0&quot;)}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                            <boolProp name="IfController.useExpression">true</boolProp>
                          </IfController>
                          <hashTree>
                            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Set basket true" enabled="true">
                              <stringProp name="BeanShellSampler.query">vars.put(&quot;basket&quot;, &quot;1&quot;);
vars.put(&quot;ski&quot;, &quot;1&quot;);
vars.put(&quot;boll&quot;, &quot;1&quot;);
vars.put(&quot;puck&quot;, &quot;1&quot;);
vars.put(&quot;shuttlecock&quot;, &quot;1&quot;);
vars.put(&quot;rollers&quot;, &quot;1&quot;);
vars.put(&quot;skate&quot;, &quot;1&quot;);



</stringProp>
                              <stringProp name="BeanShellSampler.filename"></stringProp>
                              <stringProp name="BeanShellSampler.parameters"></stringProp>
                              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                            </BeanShellSampler>
                            <hashTree/>
                            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Hellow i am 7" enabled="true">
                              <boolProp name="displayJMeterProperties">false</boolProp>
                              <boolProp name="displayJMeterVariables">true</boolProp>
                              <boolProp name="displaySystemProperties">false</boolProp>
                            </DebugSampler>
                            <hashTree/>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получение id ролей" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role1ID" enabled="true">
                                    <stringProp name="JSONPostProcessor.referenceNames">Role1ID</stringProp>
                                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                  </JSONPostProcessor>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName2}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName2}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role2ID" enabled="true">
                                    <stringProp name="JSONPostProcessor.referenceNames">Role2ID</stringProp>
                                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                  </JSONPostProcessor>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName3}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName3}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role3ID" enabled="true">
                                    <stringProp name="JSONPostProcessor.referenceNames">Role3ID</stringProp>
                                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                  </JSONPostProcessor>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName4}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName4}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role4ID" enabled="true">
                                    <stringProp name="JSONPostProcessor.referenceNames">Role4ID</stringProp>
                                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                  </JSONPostProcessor>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName5}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName5}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role5ID" enabled="true">
                                    <stringProp name="JSONPostProcessor.referenceNames">Role5ID</stringProp>
                                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                  </JSONPostProcessor>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName6}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName6}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role6ID" enabled="true">
                                    <stringProp name="JSONPostProcessor.referenceNames">Role6ID</stringProp>
                                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                  </JSONPostProcessor>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                                <boolProp name="TransactionController.includeTimers">false</boolProp>
                                <boolProp name="TransactionController.parent">false</boolProp>
                              </TransactionController>
                              <hashTree>
                                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                    <collectionProp name="Arguments.arguments">
                                      <elementProp name="" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName7}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName7}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </elementProp>
                                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                  <stringProp name="HTTPSampler.method">POST</stringProp>
                                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                                </HTTPSamplerProxy>
                                <hashTree>
                                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                      <elementProp name="Host" elementType="Header">
                                        <stringProp name="Header.name">Host</stringProp>
                                        <stringProp name="Header.value">${host}</stringProp>
                                      </elementProp>
                                      <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                      </elementProp>
                                      <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                      </elementProp>
                                      <elementProp name="Tessa-Session" elementType="Header">
                                        <stringProp name="Header.name">Tessa-Session</stringProp>
                                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                      </elementProp>
                                    </collectionProp>
                                  </HeaderManager>
                                  <hashTree/>
                                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role7ID" enabled="true">
                                    <stringProp name="JSONPostProcessor.referenceNames">Role7ID</stringProp>
                                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                  </JSONPostProcessor>
                                  <hashTree/>
                                </hashTree>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveNewCard" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApBarcodeScannerUsrCfg&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;ID_source&quot;:null,&#xd;
               &quot;IsClosePendingDisabled&quot;:false,&#xd;
               &quot;IsDismissed&quot;:false,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NumberInitials&quot;:null,&#xd;
               &quot;PersonDat&quot;:null,&#xd;
               &quot;PersonPre&quot;:null,&#xd;
               &quot;PersonRod&quot;:null,&#xd;
               &quot;PersonTvo&quot;:null,&#xd;
               &quot;PersonVin&quot;:null,&#xd;
               &quot;PositionDat&quot;:null,&#xd;
               &quot;PositionImn&quot;:null,&#xd;
               &quot;PositionRod&quot;:null,&#xd;
               &quot;PositionText&quot;:null,&#xd;
               &quot;PressServiceExportFolder&quot;:null,&#xd;
               &quot;Room&quot;:null,&#xd;
               &quot;SecretariatID&quot;:null,&#xd;
               &quot;SecretariatName&quot;:null,&#xd;
               &quot;SummaryExportFolder&quot;:null,&#xd;
               &quot;UopiExportFolder&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApPersonalRolesPrinters&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:true&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantDocKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantEntryPoints&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantFileType&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;FileCategoryID&quot;:null,&#xd;
               &quot;FileCategoryName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistants&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistory&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrAuthorDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrDocReceiversCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrPartnerTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryPerformerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_FieldChangedCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocStateCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrPartnerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrTaskTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrUsersCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocKindsCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocStatesCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionCompletionOptions&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionFunctionRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ConditionsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;CustomBackgroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomBlockColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomForegroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;DefaultWorkplacesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;ba729035-42d5-4a18-ae4d-b5fde98ed42b&quot;,&#xd;
                  &quot;WorkplaceID::uid&quot;:&quot;6b522604-0bdf-4cc0-a8d9-b1df3320584f&quot;,&#xd;
                  &quot;WorkplaceName&quot;:&quot;ЗамПред&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;FmUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;EnableMessageIndicator&quot;:true,&#xd;
               &quot;IsNotShowMsgIndicatorOnStartup&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;KrActiveTasksVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalInfoUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrApprovalCommonInfoVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;ApprovedBy&quot;:null,&#xd;
               &quot;AuthorComment&quot;:null,&#xd;
               &quot;AuthorID&quot;:null,&#xd;
               &quot;AuthorName&quot;:null,&#xd;
               &quot;CurrentApprovalStageRowID&quot;:null,&#xd;
               &quot;DisapprovedBy&quot;:null,&#xd;
               &quot;MainCardID&quot;:null,&#xd;
               &quot;ProcessOwnerID&quot;:null,&#xd;
               &quot;ProcessOwnerName&quot;:null,&#xd;
               &quot;StateChangedDateTimeUTC&quot;:null,&#xd;
               &quot;StateID::int&quot;:0,&#xd;
               &quot;StateName&quot;:&quot;$KrStates_Doc_Draft&quot;&#xd;
            }&#xd;
         },&#xd;
         &quot;KrApprovalHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrDialogButtonSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkNestedProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkSecondaryProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrNotificationOptionalRecipientsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrPerformersVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrStagesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUniversalTaskOptionsSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DisableTaskPopupNotifications&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRulesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AllowanceType&quot;:null,&#xd;
                  &quot;Disallow&quot;:true,&#xd;
                  &quot;Name&quot;:&quot;Отключить все&quot;,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRuleTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;967bfb11-4dc5-4f94-884d-5512717c9c27&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;816aaf6b-f601-4b69-bac4-2bb26697d4f4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;471e9ca5-8f3e-451c-afc3-4b8eaf8d26c6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Внутренний документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;acb9811f-1130-4c77-b50c-3caece5223c2&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;06cfa119-409b-4f7d-8a26-dde973712133&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ReturnFromPostponeNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;01a87a90-68b9-4b0c-a994-9a857fd64ec0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c410ab01-6890-4a7f-80f2-2d1cc9037d63&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Входящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;0d96e715-24df-4fe4-aea3-74378f43407c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f543d9b7-3d04-4bec-b1ce-60d735fd8374&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ee1b057f-9b73-4813-ae76-84fd2756913d&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2d5a655c-8757-4249-b987-3548bf3bc4ba&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения исполнителем дочернего поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;07c4a069-f4f7-464c-b05b-0bba5b440b43&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;032c0098-4a93-464c-959b-ae89f7c80cb6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения поручения соисполнителем&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;09bf9c04-be98-405c-acdb-7d767d59d7b4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;02b56f51-5085-48a9-952d-ea83f517c478&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение контроля исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;8e9cfb4e-d5c4-425f-85a7-1e333bf9c2e7&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;85054f91-9b48-4c4d-a3e3-1f019b15e8a9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3debfa49-e272-4a15-ac79-05364b34a0a6&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1db3d05b-dc2d-498b-a8e6-6956781a063c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение проверки исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6d64082e-372e-4e75-ba2b-236d101a0df8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ea46a095-d7ed-4309-b3d1-3e5c434a9d50&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TaskNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c36e86b6-6101-4067-8357-2ca981b6d8be&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ec2d437c-5fd9-4f6e-bcfa-fddb9acec096&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Изменение срока исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;a5d7cd05-a21d-4412-9d93-7c16ca679efc&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;70e39d81-2843-4a25-bcf5-c0f8b4a32e77&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Исходящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;55bcba7f-0e2e-439a-a1ce-f294681c26c4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2f168457-6a7f-4f1a-9bc6-bbb369f6499f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Общий процесс&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;4f9ee838-74df-4b98-ad9c-06683179a45f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8660fbf3-11a5-46a8-a1ba-1ae60177e82c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotification_AcquaintanceType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9d070b1a-f6b3-40d6-a08b-00d9e70dad7f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;b27cd592-8f80-4039-b694-547c94ecd31e&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_CommentNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c7a3be23-c42b-4971-88a3-eac6502f09a0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1f5f3d98-232c-461a-8350-98cd7f230459&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskRevokedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;95773bf8-11dc-4e25-8bbf-aa97371e8bb5&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;914deea1-6e40-4d01-af6c-42d2055c61d9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Отзыв поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3a1906d7-2406-4724-8301-b5f6ca3c64c9&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c5a765f4-bd96-44c3-8c5f-5cf5fe43c521&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$Notifications_Other&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;406c9297-e763-415e-9262-7b8c595ff1d3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3ede2c7b-1e06-4d43-bb3a-8752e2bc146a&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ForumNewMessagesNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;5fb7363e-023f-43c4-93ed-d19e3d3863df&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;a05d2e88-cbcc-40f8-b655-93d8c02a5525&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр отправки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;37ca2bfa-c22e-45eb-8da9-fc737a9b454c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;42f27ce9-ab29-4f1f-a302-c7ae90a841e5&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр доставки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53a097c1-2cf4-47e3-88ea-e57a9f92747f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ae5c5cd7-4c7c-4b8b-a679-8d5c2fe5d2da&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция аннулирована&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9a995274-b6ac-408a-ac89-79eadd2ba8b3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;701b44c7-90ab-4485-b9b7-aab9b4b91149&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция исполнена&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;03b5c071-280f-4006-b5c9-e07009bb757a&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3d5d7a44-c74e-418f-85eb-201bac6a9493&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция отозвана&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9271192a-2187-42f9-b042-e6c3f6134dab&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;77bdba46-e241-479a-aea1-6b0987da9783&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Смена исполнителя поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;b970e7e7-a430-43ab-965f-853460d26348&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7af52656-2a34-4f9c-b8ac-265f0c48f442&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Согласование досыла. Отказ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;47db0ce8-672c-4345-9a90-de9e198ec59c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;e0a148bf-1a73-4581-b8b6-05d0c61b85db&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление о миграции после одобрения запроса доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3f93dcd9-b6ef-46d9-aaa1-75fc016678d4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;6bbbaf3c-d578-40a7-8f44-b22aeaa95ab7&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об отказе в предоставлении доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;62bf7f22-84f5-48e3-8b40-47443b530aa1&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;90fca673-2e25-4adc-958d-03a8aa79b13f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об ошибке при миграции карточки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9c665744-e962-4e0d-9131-5e8c095d4c79&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f979367c-5d0c-429e-8cbd-9b1a508c1340&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об успешном завершении миграции&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;fdc664f8-57b0-42a7-a971-9b0b606b77e8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7daca7d3-70f7-4643-9431-f5cf975ee115&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;ФИАС&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;2fda3e2e-5418-4fff-b945-54fa3ce7888e&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;LastName&quot;,&#xd;
               &quot;FirstName&quot;,&#xd;
               &quot;MiddleName&quot;,&#xd;
               &quot;Name&quot;,&#xd;
               &quot;FullName&quot;,&#xd;
               &quot;LoginTypeID&quot;,&#xd;
               &quot;LoginTypeName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AccessLevelID::int&quot;:0,&#xd;
               &quot;AccessLevelName&quot;:&quot;$Enum_AccessLevels_Regular&quot;,&#xd;
               &quot;ApplicationArchitectureID::int&quot;:0,&#xd;
               &quot;ApplicationArchitectureName&quot;:&quot;$Enum_ApplicationArchitectures_Auto&quot;,&#xd;
               &quot;BirthDate&quot;:null,&#xd;
               &quot;Blocked&quot;:false,&#xd;
               &quot;BlockedDueDate&quot;:null,&#xd;
               &quot;CipherInfo&quot;:null,&#xd;
               &quot;Email&quot;:null,&#xd;
               &quot;Fax&quot;:null,&#xd;
               &quot;FirstName&quot;:&quot;${DirectorFirstName}&quot;,&#xd;
               &quot;FullName&quot;:&quot;${DirectorLastName} ${DirectorFirstName} ${DirectorMiddleName}&quot;,&#xd;
               &quot;HomePhone&quot;:null,&#xd;
               &quot;IPPhone&quot;:null,&#xd;
               &quot;LastName&quot;:&quot;${DirectorLastName}&quot;,&#xd;
               &quot;Login&quot;:&quot;${DirectorLogin}&quot;,&#xd;
               &quot;LoginTypeID::int&quot;:1,&#xd;
               &quot;LoginTypeName&quot;:&quot;$Enum_LoginTypes_Tessa&quot;,&#xd;
               &quot;MiddleName&quot;:&quot;${DirectorMiddleName}&quot;,&#xd;
               &quot;MobilePhone&quot;:null,&#xd;
               &quot;Name&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
               &quot;PasswordChanged&quot;:null,&#xd;
               &quot;PasswordHash&quot;:null,&#xd;
               &quot;PasswordKey&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;Position&quot;:null,&#xd;
               &quot;Security&quot;:null,&#xd;
               &quot;SecurityLock&quot;:false,&#xd;
               &quot;UserPositionID&quot;:null,&#xd;
               &quot;UserPositionName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleStaticRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role1ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName1}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;850ed3b6-6af2-4df1-9b2e-4615a2b3e504&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role2ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName2}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;11edacee-27f5-4af5-828e-181487442803&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role3ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName3}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6f7e8c55-73ac-4c50-b749-1032487e395c&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role4ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName4}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53dccec1-9793-4128-865b-051d0e8be0ab&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role5ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName5}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;d5a6a966-a1b2-4f9c-b829-04c73c437a5d&quot;&#xd;
               },&#xd;
			{&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role6ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName6}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf6UUID}&quot;&#xd;
               },&#xd;
		     {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role7ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName7}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf7UUID}&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleSubscribedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LanguageCaption&quot;:null,&#xd;
               &quot;LanguageCode&quot;:null,&#xd;
               &quot;LanguageID&quot;:null,&#xd;
               &quot;Password&quot;: &quot;${DirectorPassword}&quot;,&#xd;
               &quot;PasswordRepeat&quot;:&quot;${DirectorPassword}&quot;,&#xd;
               &quot;Settings&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleUnsubscibedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8916d66f-627f-4733-91bf-4c264fcb9d1d&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TasksNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ac08e02e-a28a-40dc-ae28-41ea7e5b397e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementAccess&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementHelperVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserID&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:null,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:1&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;UserSettingsFunctionRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AssistantHeadParallelColor&quot;:null,&#xd;
               &quot;AssistantHeadParallelDeputyColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialDeputyColor&quot;:null,&#xd;
               &quot;AssistantParallelColor&quot;:null,&#xd;
               &quot;AssistantParallelEntryColor&quot;:null,&#xd;
               &quot;AssistantSerialColor&quot;:null,&#xd;
               &quot;AssistantSerialEntryColor&quot;:null,&#xd;
               &quot;AuthorColor&quot;:null,&#xd;
               &quot;AuthorDeputyColor&quot;:null,&#xd;
               &quot;PerformerColor&quot;:null,&#xd;
               &quot;PerformerDeputyColor&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;UserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LeftPanelOpenOnClick&quot;:true,&#xd;
               &quot;RightPanelOpenOnClick&quot;:true&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:null&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                                  <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                                  <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                </JSONPostProcessor>
                                <hashTree/>
                              </hashTree>
                              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                                <boolProp name="displayJMeterProperties">false</boolProp>
                                <boolProp name="displayJMeterVariables">true</boolProp>
                                <boolProp name="displaySystemProperties">false</boolProp>
                              </DebugSampler>
                              <hashTree/>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:null,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                                  <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                                  <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                </JSONPostProcessor>
                                <hashTree/>
                              </hashTree>
                              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                                <boolProp name="displayJMeterProperties">false</boolProp>
                                <boolProp name="displayJMeterVariables">true</boolProp>
                                <boolProp name="displaySystemProperties">false</boolProp>
                              </DebugSampler>
                              <hashTree/>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Иначе" enabled="true">
                          <stringProp name="IfController.condition">${__groovy(&quot;${basket}&quot;==&quot;0&quot;)}</stringProp>
                          <boolProp name="IfController.evaluateAll">false</boolProp>
                          <boolProp name="IfController.useExpression">true</boolProp>
                        </IfController>
                        <hashTree>
                          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Set ski true" enabled="true">
                            <stringProp name="BeanShellSampler.query">vars.put(&quot;ski&quot;, &quot;1&quot;);
vars.put(&quot;boll&quot;, &quot;1&quot;);
vars.put(&quot;puck&quot;, &quot;1&quot;);
vars.put(&quot;shuttlecock&quot;, &quot;1&quot;);
vars.put(&quot;rollers&quot;, &quot;1&quot;);
vars.put(&quot;skate&quot;, &quot;1&quot;);



</stringProp>
                            <stringProp name="BeanShellSampler.filename"></stringProp>
                            <stringProp name="BeanShellSampler.parameters"></stringProp>
                            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                          </BeanShellSampler>
                          <hashTree/>
                          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Hellow i am 6" enabled="true">
                            <boolProp name="displayJMeterProperties">false</boolProp>
                            <boolProp name="displayJMeterVariables">true</boolProp>
                            <boolProp name="displaySystemProperties">false</boolProp>
                          </DebugSampler>
                          <hashTree/>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получение id ролей" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role1ID" enabled="true">
                                  <stringProp name="JSONPostProcessor.referenceNames">Role1ID</stringProp>
                                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                </JSONPostProcessor>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName2}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName2}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role2ID" enabled="true">
                                  <stringProp name="JSONPostProcessor.referenceNames">Role2ID</stringProp>
                                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                </JSONPostProcessor>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName3}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName3}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role3ID" enabled="true">
                                  <stringProp name="JSONPostProcessor.referenceNames">Role3ID</stringProp>
                                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                </JSONPostProcessor>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName4}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName4}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role4ID" enabled="true">
                                  <stringProp name="JSONPostProcessor.referenceNames">Role4ID</stringProp>
                                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                </JSONPostProcessor>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName5}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName5}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role5ID" enabled="true">
                                  <stringProp name="JSONPostProcessor.referenceNames">Role5ID</stringProp>
                                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                </JSONPostProcessor>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                              <boolProp name="TransactionController.includeTimers">false</boolProp>
                              <boolProp name="TransactionController.parent">false</boolProp>
                            </TransactionController>
                            <hashTree>
                              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="HTTPArgument">
                                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName6}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName6}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                                <stringProp name="HTTPSampler.port">${port}</stringProp>
                                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                              </HTTPSamplerProxy>
                              <hashTree>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                  <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Host" elementType="Header">
                                      <stringProp name="Header.name">Host</stringProp>
                                      <stringProp name="Header.value">${host}</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                      <stringProp name="Header.name">Content-Type</stringProp>
                                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                    </elementProp>
                                    <elementProp name="Tessa-Session" elementType="Header">
                                      <stringProp name="Header.name">Tessa-Session</stringProp>
                                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role6ID" enabled="true">
                                  <stringProp name="JSONPostProcessor.referenceNames">Role6ID</stringProp>
                                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                                </JSONPostProcessor>
                                <hashTree/>
                              </hashTree>
                            </hashTree>
                          </hashTree>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveNewCard" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApBarcodeScannerUsrCfg&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;ID_source&quot;:null,&#xd;
               &quot;IsClosePendingDisabled&quot;:false,&#xd;
               &quot;IsDismissed&quot;:false,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NumberInitials&quot;:null,&#xd;
               &quot;PersonDat&quot;:null,&#xd;
               &quot;PersonPre&quot;:null,&#xd;
               &quot;PersonRod&quot;:null,&#xd;
               &quot;PersonTvo&quot;:null,&#xd;
               &quot;PersonVin&quot;:null,&#xd;
               &quot;PositionDat&quot;:null,&#xd;
               &quot;PositionImn&quot;:null,&#xd;
               &quot;PositionRod&quot;:null,&#xd;
               &quot;PositionText&quot;:null,&#xd;
               &quot;PressServiceExportFolder&quot;:null,&#xd;
               &quot;Room&quot;:null,&#xd;
               &quot;SecretariatID&quot;:null,&#xd;
               &quot;SecretariatName&quot;:null,&#xd;
               &quot;SummaryExportFolder&quot;:null,&#xd;
               &quot;UopiExportFolder&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApPersonalRolesPrinters&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:true&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantDocKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantEntryPoints&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantFileType&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;FileCategoryID&quot;:null,&#xd;
               &quot;FileCategoryName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistants&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistory&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrAuthorDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrDocReceiversCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrPartnerTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryPerformerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_FieldChangedCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocStateCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrPartnerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrTaskTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrUsersCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocKindsCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocStatesCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionCompletionOptions&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionFunctionRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ConditionsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;CustomBackgroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomBlockColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomForegroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;DefaultWorkplacesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;ba729035-42d5-4a18-ae4d-b5fde98ed42b&quot;,&#xd;
                  &quot;WorkplaceID::uid&quot;:&quot;6b522604-0bdf-4cc0-a8d9-b1df3320584f&quot;,&#xd;
                  &quot;WorkplaceName&quot;:&quot;ЗамПред&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;FmUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;EnableMessageIndicator&quot;:true,&#xd;
               &quot;IsNotShowMsgIndicatorOnStartup&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;KrActiveTasksVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalInfoUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrApprovalCommonInfoVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;ApprovedBy&quot;:null,&#xd;
               &quot;AuthorComment&quot;:null,&#xd;
               &quot;AuthorID&quot;:null,&#xd;
               &quot;AuthorName&quot;:null,&#xd;
               &quot;CurrentApprovalStageRowID&quot;:null,&#xd;
               &quot;DisapprovedBy&quot;:null,&#xd;
               &quot;MainCardID&quot;:null,&#xd;
               &quot;ProcessOwnerID&quot;:null,&#xd;
               &quot;ProcessOwnerName&quot;:null,&#xd;
               &quot;StateChangedDateTimeUTC&quot;:null,&#xd;
               &quot;StateID::int&quot;:0,&#xd;
               &quot;StateName&quot;:&quot;$KrStates_Doc_Draft&quot;&#xd;
            }&#xd;
         },&#xd;
         &quot;KrApprovalHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrDialogButtonSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkNestedProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkSecondaryProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrNotificationOptionalRecipientsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrPerformersVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrStagesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUniversalTaskOptionsSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DisableTaskPopupNotifications&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRulesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AllowanceType&quot;:null,&#xd;
                  &quot;Disallow&quot;:true,&#xd;
                  &quot;Name&quot;:&quot;Отключить все&quot;,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRuleTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;967bfb11-4dc5-4f94-884d-5512717c9c27&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;816aaf6b-f601-4b69-bac4-2bb26697d4f4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;471e9ca5-8f3e-451c-afc3-4b8eaf8d26c6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Внутренний документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;acb9811f-1130-4c77-b50c-3caece5223c2&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;06cfa119-409b-4f7d-8a26-dde973712133&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ReturnFromPostponeNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;01a87a90-68b9-4b0c-a994-9a857fd64ec0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c410ab01-6890-4a7f-80f2-2d1cc9037d63&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Входящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;0d96e715-24df-4fe4-aea3-74378f43407c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f543d9b7-3d04-4bec-b1ce-60d735fd8374&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ee1b057f-9b73-4813-ae76-84fd2756913d&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2d5a655c-8757-4249-b987-3548bf3bc4ba&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения исполнителем дочернего поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;07c4a069-f4f7-464c-b05b-0bba5b440b43&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;032c0098-4a93-464c-959b-ae89f7c80cb6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения поручения соисполнителем&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;09bf9c04-be98-405c-acdb-7d767d59d7b4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;02b56f51-5085-48a9-952d-ea83f517c478&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение контроля исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;8e9cfb4e-d5c4-425f-85a7-1e333bf9c2e7&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;85054f91-9b48-4c4d-a3e3-1f019b15e8a9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3debfa49-e272-4a15-ac79-05364b34a0a6&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1db3d05b-dc2d-498b-a8e6-6956781a063c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение проверки исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6d64082e-372e-4e75-ba2b-236d101a0df8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ea46a095-d7ed-4309-b3d1-3e5c434a9d50&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TaskNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c36e86b6-6101-4067-8357-2ca981b6d8be&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ec2d437c-5fd9-4f6e-bcfa-fddb9acec096&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Изменение срока исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;a5d7cd05-a21d-4412-9d93-7c16ca679efc&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;70e39d81-2843-4a25-bcf5-c0f8b4a32e77&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Исходящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;55bcba7f-0e2e-439a-a1ce-f294681c26c4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2f168457-6a7f-4f1a-9bc6-bbb369f6499f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Общий процесс&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;4f9ee838-74df-4b98-ad9c-06683179a45f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8660fbf3-11a5-46a8-a1ba-1ae60177e82c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotification_AcquaintanceType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9d070b1a-f6b3-40d6-a08b-00d9e70dad7f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;b27cd592-8f80-4039-b694-547c94ecd31e&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_CommentNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c7a3be23-c42b-4971-88a3-eac6502f09a0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1f5f3d98-232c-461a-8350-98cd7f230459&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskRevokedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;95773bf8-11dc-4e25-8bbf-aa97371e8bb5&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;914deea1-6e40-4d01-af6c-42d2055c61d9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Отзыв поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3a1906d7-2406-4724-8301-b5f6ca3c64c9&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c5a765f4-bd96-44c3-8c5f-5cf5fe43c521&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$Notifications_Other&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;406c9297-e763-415e-9262-7b8c595ff1d3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3ede2c7b-1e06-4d43-bb3a-8752e2bc146a&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ForumNewMessagesNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;5fb7363e-023f-43c4-93ed-d19e3d3863df&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;a05d2e88-cbcc-40f8-b655-93d8c02a5525&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр отправки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;37ca2bfa-c22e-45eb-8da9-fc737a9b454c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;42f27ce9-ab29-4f1f-a302-c7ae90a841e5&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр доставки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53a097c1-2cf4-47e3-88ea-e57a9f92747f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ae5c5cd7-4c7c-4b8b-a679-8d5c2fe5d2da&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция аннулирована&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9a995274-b6ac-408a-ac89-79eadd2ba8b3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;701b44c7-90ab-4485-b9b7-aab9b4b91149&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция исполнена&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;03b5c071-280f-4006-b5c9-e07009bb757a&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3d5d7a44-c74e-418f-85eb-201bac6a9493&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция отозвана&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9271192a-2187-42f9-b042-e6c3f6134dab&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;77bdba46-e241-479a-aea1-6b0987da9783&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Смена исполнителя поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;b970e7e7-a430-43ab-965f-853460d26348&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7af52656-2a34-4f9c-b8ac-265f0c48f442&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Согласование досыла. Отказ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;47db0ce8-672c-4345-9a90-de9e198ec59c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;e0a148bf-1a73-4581-b8b6-05d0c61b85db&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление о миграции после одобрения запроса доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3f93dcd9-b6ef-46d9-aaa1-75fc016678d4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;6bbbaf3c-d578-40a7-8f44-b22aeaa95ab7&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об отказе в предоставлении доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;62bf7f22-84f5-48e3-8b40-47443b530aa1&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;90fca673-2e25-4adc-958d-03a8aa79b13f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об ошибке при миграции карточки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9c665744-e962-4e0d-9131-5e8c095d4c79&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f979367c-5d0c-429e-8cbd-9b1a508c1340&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об успешном завершении миграции&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;fdc664f8-57b0-42a7-a971-9b0b606b77e8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7daca7d3-70f7-4643-9431-f5cf975ee115&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;ФИАС&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;2fda3e2e-5418-4fff-b945-54fa3ce7888e&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;LastName&quot;,&#xd;
               &quot;FirstName&quot;,&#xd;
               &quot;MiddleName&quot;,&#xd;
               &quot;Name&quot;,&#xd;
               &quot;FullName&quot;,&#xd;
               &quot;LoginTypeID&quot;,&#xd;
               &quot;LoginTypeName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AccessLevelID::int&quot;:0,&#xd;
               &quot;AccessLevelName&quot;:&quot;$Enum_AccessLevels_Regular&quot;,&#xd;
               &quot;ApplicationArchitectureID::int&quot;:0,&#xd;
               &quot;ApplicationArchitectureName&quot;:&quot;$Enum_ApplicationArchitectures_Auto&quot;,&#xd;
               &quot;BirthDate&quot;:null,&#xd;
               &quot;Blocked&quot;:false,&#xd;
               &quot;BlockedDueDate&quot;:null,&#xd;
               &quot;CipherInfo&quot;:null,&#xd;
               &quot;Email&quot;:null,&#xd;
               &quot;Fax&quot;:null,&#xd;
               &quot;FirstName&quot;:&quot;${DirectorFirstName}&quot;,&#xd;
               &quot;FullName&quot;:&quot;${DirectorLastName} ${DirectorFirstName} ${DirectorMiddleName}&quot;,&#xd;
               &quot;HomePhone&quot;:null,&#xd;
               &quot;IPPhone&quot;:null,&#xd;
               &quot;LastName&quot;:&quot;${DirectorLastName}&quot;,&#xd;
               &quot;Login&quot;:&quot;${DirectorLogin}&quot;,&#xd;
               &quot;LoginTypeID::int&quot;:1,&#xd;
               &quot;LoginTypeName&quot;:&quot;$Enum_LoginTypes_Tessa&quot;,&#xd;
               &quot;MiddleName&quot;:&quot;${DirectorMiddleName}&quot;,&#xd;
               &quot;MobilePhone&quot;:null,&#xd;
               &quot;Name&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
               &quot;PasswordChanged&quot;:null,&#xd;
               &quot;PasswordHash&quot;:null,&#xd;
               &quot;PasswordKey&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;Position&quot;:null,&#xd;
               &quot;Security&quot;:null,&#xd;
               &quot;SecurityLock&quot;:false,&#xd;
               &quot;UserPositionID&quot;:null,&#xd;
               &quot;UserPositionName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleStaticRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role1ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName1}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;850ed3b6-6af2-4df1-9b2e-4615a2b3e504&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role2ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName2}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;11edacee-27f5-4af5-828e-181487442803&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role3ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName3}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6f7e8c55-73ac-4c50-b749-1032487e395c&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role4ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName4}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53dccec1-9793-4128-865b-051d0e8be0ab&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role5ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName5}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;d5a6a966-a1b2-4f9c-b829-04c73c437a5d&quot;&#xd;
               },&#xd;
			   {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role6ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName6}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Rowf6UUID}&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleSubscribedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LanguageCaption&quot;:null,&#xd;
               &quot;LanguageCode&quot;:null,&#xd;
               &quot;LanguageID&quot;:null,&#xd;
               &quot;Password&quot;: &quot;${DirectorPassword}&quot;,&#xd;
               &quot;PasswordRepeat&quot;:&quot;${DirectorPassword}&quot;,&#xd;
               &quot;Settings&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleUnsubscibedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8916d66f-627f-4733-91bf-4c264fcb9d1d&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TasksNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ac08e02e-a28a-40dc-ae28-41ea7e5b397e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementAccess&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementHelperVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserID&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:null,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:1&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;UserSettingsFunctionRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AssistantHeadParallelColor&quot;:null,&#xd;
               &quot;AssistantHeadParallelDeputyColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialDeputyColor&quot;:null,&#xd;
               &quot;AssistantParallelColor&quot;:null,&#xd;
               &quot;AssistantParallelEntryColor&quot;:null,&#xd;
               &quot;AssistantSerialColor&quot;:null,&#xd;
               &quot;AssistantSerialEntryColor&quot;:null,&#xd;
               &quot;AuthorColor&quot;:null,&#xd;
               &quot;AuthorDeputyColor&quot;:null,&#xd;
               &quot;PerformerColor&quot;:null,&#xd;
               &quot;PerformerDeputyColor&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;UserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LeftPanelOpenOnClick&quot;:true,&#xd;
               &quot;RightPanelOpenOnClick&quot;:true&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:null&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                                <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                                <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                              </JSONPostProcessor>
                              <hashTree/>
                            </hashTree>
                            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                              <boolProp name="displayJMeterProperties">false</boolProp>
                              <boolProp name="displayJMeterVariables">true</boolProp>
                              <boolProp name="displaySystemProperties">false</boolProp>
                            </DebugSampler>
                            <hashTree/>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:null,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                                <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                                <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                              </JSONPostProcessor>
                              <hashTree/>
                            </hashTree>
                            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                              <boolProp name="displayJMeterProperties">false</boolProp>
                              <boolProp name="displayJMeterVariables">true</boolProp>
                              <boolProp name="displaySystemProperties">false</boolProp>
                            </DebugSampler>
                            <hashTree/>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                      </hashTree>
                      <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Иначе" enabled="true">
                        <stringProp name="IfController.condition">${__groovy(&quot;${ski}&quot;==&quot;0&quot;)}</stringProp>
                        <boolProp name="IfController.evaluateAll">false</boolProp>
                        <boolProp name="IfController.useExpression">true</boolProp>
                      </IfController>
                      <hashTree>
                        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Set boll True" enabled="true">
                          <stringProp name="BeanShellSampler.query">vars.put(&quot;boll&quot;, &quot;1&quot;);
vars.put(&quot;puck&quot;, &quot;1&quot;);
vars.put(&quot;shuttlecock&quot;, &quot;1&quot;);
vars.put(&quot;rollers&quot;, &quot;1&quot;);
vars.put(&quot;skate&quot;, &quot;1&quot;);



</stringProp>
                          <stringProp name="BeanShellSampler.filename"></stringProp>
                          <stringProp name="BeanShellSampler.parameters"></stringProp>
                          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                        </BeanShellSampler>
                        <hashTree/>
                        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Hellow i am 5" enabled="true">
                          <boolProp name="displayJMeterProperties">false</boolProp>
                          <boolProp name="displayJMeterVariables">true</boolProp>
                          <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugSampler>
                        <hashTree/>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                          </hashTree>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получение id ролей" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role1ID" enabled="true">
                                <stringProp name="JSONPostProcessor.referenceNames">Role1ID</stringProp>
                                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                              </JSONPostProcessor>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName2}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName2}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role2ID" enabled="true">
                                <stringProp name="JSONPostProcessor.referenceNames">Role2ID</stringProp>
                                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                              </JSONPostProcessor>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName3}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName3}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role3ID" enabled="true">
                                <stringProp name="JSONPostProcessor.referenceNames">Role3ID</stringProp>
                                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                              </JSONPostProcessor>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName4}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName4}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role4ID" enabled="true">
                                <stringProp name="JSONPostProcessor.referenceNames">Role4ID</stringProp>
                                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                              </JSONPostProcessor>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                          </TransactionController>
                          <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="HTTPArgument">
                                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName5}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName5}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <stringProp name="HTTPSampler.domain">${host}</stringProp>
                              <stringProp name="HTTPSampler.port">${port}</stringProp>
                              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                              <stringProp name="HTTPSampler.method">POST</stringProp>
                              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                              <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                  <elementProp name="Host" elementType="Header">
                                    <stringProp name="Header.name">Host</stringProp>
                                    <stringProp name="Header.value">${host}</stringProp>
                                  </elementProp>
                                  <elementProp name="Accept-Encoding" elementType="Header">
                                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                  </elementProp>
                                  <elementProp name="Content-Type" elementType="Header">
                                    <stringProp name="Header.name">Content-Type</stringProp>
                                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                  </elementProp>
                                  <elementProp name="Tessa-Session" elementType="Header">
                                    <stringProp name="Header.name">Tessa-Session</stringProp>
                                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </HeaderManager>
                              <hashTree/>
                              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role5ID" enabled="true">
                                <stringProp name="JSONPostProcessor.referenceNames">Role5ID</stringProp>
                                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                              </JSONPostProcessor>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveNewCard" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApBarcodeScannerUsrCfg&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;ID_source&quot;:null,&#xd;
               &quot;IsClosePendingDisabled&quot;:false,&#xd;
               &quot;IsDismissed&quot;:false,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NumberInitials&quot;:null,&#xd;
               &quot;PersonDat&quot;:null,&#xd;
               &quot;PersonPre&quot;:null,&#xd;
               &quot;PersonRod&quot;:null,&#xd;
               &quot;PersonTvo&quot;:null,&#xd;
               &quot;PersonVin&quot;:null,&#xd;
               &quot;PositionDat&quot;:null,&#xd;
               &quot;PositionImn&quot;:null,&#xd;
               &quot;PositionRod&quot;:null,&#xd;
               &quot;PositionText&quot;:null,&#xd;
               &quot;PressServiceExportFolder&quot;:null,&#xd;
               &quot;Room&quot;:null,&#xd;
               &quot;SecretariatID&quot;:null,&#xd;
               &quot;SecretariatName&quot;:null,&#xd;
               &quot;SummaryExportFolder&quot;:null,&#xd;
               &quot;UopiExportFolder&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApPersonalRolesPrinters&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:true&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantDocKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantEntryPoints&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantFileType&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;FileCategoryID&quot;:null,&#xd;
               &quot;FileCategoryName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistants&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistory&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrAuthorDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrDocReceiversCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrPartnerTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryPerformerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_FieldChangedCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocStateCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrPartnerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrTaskTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrUsersCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocKindsCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocStatesCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionCompletionOptions&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionFunctionRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ConditionsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;CustomBackgroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomBlockColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomForegroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;DefaultWorkplacesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;ba729035-42d5-4a18-ae4d-b5fde98ed42b&quot;,&#xd;
                  &quot;WorkplaceID::uid&quot;:&quot;6b522604-0bdf-4cc0-a8d9-b1df3320584f&quot;,&#xd;
                  &quot;WorkplaceName&quot;:&quot;ЗамПред&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;FmUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;EnableMessageIndicator&quot;:true,&#xd;
               &quot;IsNotShowMsgIndicatorOnStartup&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;KrActiveTasksVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalInfoUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrApprovalCommonInfoVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;ApprovedBy&quot;:null,&#xd;
               &quot;AuthorComment&quot;:null,&#xd;
               &quot;AuthorID&quot;:null,&#xd;
               &quot;AuthorName&quot;:null,&#xd;
               &quot;CurrentApprovalStageRowID&quot;:null,&#xd;
               &quot;DisapprovedBy&quot;:null,&#xd;
               &quot;MainCardID&quot;:null,&#xd;
               &quot;ProcessOwnerID&quot;:null,&#xd;
               &quot;ProcessOwnerName&quot;:null,&#xd;
               &quot;StateChangedDateTimeUTC&quot;:null,&#xd;
               &quot;StateID::int&quot;:0,&#xd;
               &quot;StateName&quot;:&quot;$KrStates_Doc_Draft&quot;&#xd;
            }&#xd;
         },&#xd;
         &quot;KrApprovalHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrDialogButtonSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkNestedProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkSecondaryProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrNotificationOptionalRecipientsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrPerformersVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrStagesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUniversalTaskOptionsSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DisableTaskPopupNotifications&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRulesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AllowanceType&quot;:null,&#xd;
                  &quot;Disallow&quot;:true,&#xd;
                  &quot;Name&quot;:&quot;Отключить все&quot;,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRuleTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;967bfb11-4dc5-4f94-884d-5512717c9c27&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;816aaf6b-f601-4b69-bac4-2bb26697d4f4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;471e9ca5-8f3e-451c-afc3-4b8eaf8d26c6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Внутренний документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;acb9811f-1130-4c77-b50c-3caece5223c2&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;06cfa119-409b-4f7d-8a26-dde973712133&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ReturnFromPostponeNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;01a87a90-68b9-4b0c-a994-9a857fd64ec0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c410ab01-6890-4a7f-80f2-2d1cc9037d63&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Входящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;0d96e715-24df-4fe4-aea3-74378f43407c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f543d9b7-3d04-4bec-b1ce-60d735fd8374&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ee1b057f-9b73-4813-ae76-84fd2756913d&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2d5a655c-8757-4249-b987-3548bf3bc4ba&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения исполнителем дочернего поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;07c4a069-f4f7-464c-b05b-0bba5b440b43&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;032c0098-4a93-464c-959b-ae89f7c80cb6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения поручения соисполнителем&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;09bf9c04-be98-405c-acdb-7d767d59d7b4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;02b56f51-5085-48a9-952d-ea83f517c478&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение контроля исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;8e9cfb4e-d5c4-425f-85a7-1e333bf9c2e7&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;85054f91-9b48-4c4d-a3e3-1f019b15e8a9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3debfa49-e272-4a15-ac79-05364b34a0a6&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1db3d05b-dc2d-498b-a8e6-6956781a063c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение проверки исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6d64082e-372e-4e75-ba2b-236d101a0df8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ea46a095-d7ed-4309-b3d1-3e5c434a9d50&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TaskNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c36e86b6-6101-4067-8357-2ca981b6d8be&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ec2d437c-5fd9-4f6e-bcfa-fddb9acec096&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Изменение срока исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;a5d7cd05-a21d-4412-9d93-7c16ca679efc&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;70e39d81-2843-4a25-bcf5-c0f8b4a32e77&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Исходящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;55bcba7f-0e2e-439a-a1ce-f294681c26c4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2f168457-6a7f-4f1a-9bc6-bbb369f6499f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Общий процесс&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;4f9ee838-74df-4b98-ad9c-06683179a45f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8660fbf3-11a5-46a8-a1ba-1ae60177e82c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotification_AcquaintanceType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9d070b1a-f6b3-40d6-a08b-00d9e70dad7f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;b27cd592-8f80-4039-b694-547c94ecd31e&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_CommentNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c7a3be23-c42b-4971-88a3-eac6502f09a0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1f5f3d98-232c-461a-8350-98cd7f230459&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskRevokedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;95773bf8-11dc-4e25-8bbf-aa97371e8bb5&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;914deea1-6e40-4d01-af6c-42d2055c61d9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Отзыв поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3a1906d7-2406-4724-8301-b5f6ca3c64c9&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c5a765f4-bd96-44c3-8c5f-5cf5fe43c521&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$Notifications_Other&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;406c9297-e763-415e-9262-7b8c595ff1d3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3ede2c7b-1e06-4d43-bb3a-8752e2bc146a&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ForumNewMessagesNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;5fb7363e-023f-43c4-93ed-d19e3d3863df&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;a05d2e88-cbcc-40f8-b655-93d8c02a5525&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр отправки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;37ca2bfa-c22e-45eb-8da9-fc737a9b454c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;42f27ce9-ab29-4f1f-a302-c7ae90a841e5&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр доставки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53a097c1-2cf4-47e3-88ea-e57a9f92747f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ae5c5cd7-4c7c-4b8b-a679-8d5c2fe5d2da&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция аннулирована&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9a995274-b6ac-408a-ac89-79eadd2ba8b3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;701b44c7-90ab-4485-b9b7-aab9b4b91149&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция исполнена&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;03b5c071-280f-4006-b5c9-e07009bb757a&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3d5d7a44-c74e-418f-85eb-201bac6a9493&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция отозвана&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9271192a-2187-42f9-b042-e6c3f6134dab&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;77bdba46-e241-479a-aea1-6b0987da9783&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Смена исполнителя поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;b970e7e7-a430-43ab-965f-853460d26348&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7af52656-2a34-4f9c-b8ac-265f0c48f442&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Согласование досыла. Отказ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;47db0ce8-672c-4345-9a90-de9e198ec59c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;e0a148bf-1a73-4581-b8b6-05d0c61b85db&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление о миграции после одобрения запроса доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3f93dcd9-b6ef-46d9-aaa1-75fc016678d4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;6bbbaf3c-d578-40a7-8f44-b22aeaa95ab7&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об отказе в предоставлении доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;62bf7f22-84f5-48e3-8b40-47443b530aa1&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;90fca673-2e25-4adc-958d-03a8aa79b13f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об ошибке при миграции карточки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9c665744-e962-4e0d-9131-5e8c095d4c79&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f979367c-5d0c-429e-8cbd-9b1a508c1340&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об успешном завершении миграции&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;fdc664f8-57b0-42a7-a971-9b0b606b77e8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7daca7d3-70f7-4643-9431-f5cf975ee115&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;ФИАС&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;2fda3e2e-5418-4fff-b945-54fa3ce7888e&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;LastName&quot;,&#xd;
               &quot;FirstName&quot;,&#xd;
               &quot;MiddleName&quot;,&#xd;
               &quot;Name&quot;,&#xd;
               &quot;FullName&quot;,&#xd;
               &quot;LoginTypeID&quot;,&#xd;
               &quot;LoginTypeName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AccessLevelID::int&quot;:0,&#xd;
               &quot;AccessLevelName&quot;:&quot;$Enum_AccessLevels_Regular&quot;,&#xd;
               &quot;ApplicationArchitectureID::int&quot;:0,&#xd;
               &quot;ApplicationArchitectureName&quot;:&quot;$Enum_ApplicationArchitectures_Auto&quot;,&#xd;
               &quot;BirthDate&quot;:null,&#xd;
               &quot;Blocked&quot;:false,&#xd;
               &quot;BlockedDueDate&quot;:null,&#xd;
               &quot;CipherInfo&quot;:null,&#xd;
               &quot;Email&quot;:null,&#xd;
               &quot;Fax&quot;:null,&#xd;
               &quot;FirstName&quot;:&quot;${DirectorFirstName}&quot;,&#xd;
               &quot;FullName&quot;:&quot;${DirectorLastName} ${DirectorFirstName} ${DirectorMiddleName}&quot;,&#xd;
               &quot;HomePhone&quot;:null,&#xd;
               &quot;IPPhone&quot;:null,&#xd;
               &quot;LastName&quot;:&quot;${DirectorLastName}&quot;,&#xd;
               &quot;Login&quot;:&quot;${DirectorLogin}&quot;,&#xd;
               &quot;LoginTypeID::int&quot;:1,&#xd;
               &quot;LoginTypeName&quot;:&quot;$Enum_LoginTypes_Tessa&quot;,&#xd;
               &quot;MiddleName&quot;:&quot;${DirectorMiddleName}&quot;,&#xd;
               &quot;MobilePhone&quot;:null,&#xd;
               &quot;Name&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
               &quot;PasswordChanged&quot;:null,&#xd;
               &quot;PasswordHash&quot;:null,&#xd;
               &quot;PasswordKey&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;Position&quot;:null,&#xd;
               &quot;Security&quot;:null,&#xd;
               &quot;SecurityLock&quot;:false,&#xd;
               &quot;UserPositionID&quot;:null,&#xd;
               &quot;UserPositionName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleStaticRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role1ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName1}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;850ed3b6-6af2-4df1-9b2e-4615a2b3e504&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role2ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName2}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;11edacee-27f5-4af5-828e-181487442803&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role3ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName3}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6f7e8c55-73ac-4c50-b749-1032487e395c&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role4ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName4}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53dccec1-9793-4128-865b-051d0e8be0ab&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role5ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName5}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;d5a6a966-a1b2-4f9c-b829-04c73c437a5d&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleSubscribedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LanguageCaption&quot;:null,&#xd;
               &quot;LanguageCode&quot;:null,&#xd;
               &quot;LanguageID&quot;:null,&#xd;
               &quot;Password&quot;: &quot;${DirectorPassword}&quot;,&#xd;
               &quot;PasswordRepeat&quot;:&quot;${DirectorPassword}&quot;,&#xd;
               &quot;Settings&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleUnsubscibedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8916d66f-627f-4733-91bf-4c264fcb9d1d&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TasksNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ac08e02e-a28a-40dc-ae28-41ea7e5b397e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementAccess&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementHelperVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserID&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:null,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:1&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;UserSettingsFunctionRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AssistantHeadParallelColor&quot;:null,&#xd;
               &quot;AssistantHeadParallelDeputyColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialDeputyColor&quot;:null,&#xd;
               &quot;AssistantParallelColor&quot;:null,&#xd;
               &quot;AssistantParallelEntryColor&quot;:null,&#xd;
               &quot;AssistantSerialColor&quot;:null,&#xd;
               &quot;AssistantSerialEntryColor&quot;:null,&#xd;
               &quot;AuthorColor&quot;:null,&#xd;
               &quot;AuthorDeputyColor&quot;:null,&#xd;
               &quot;PerformerColor&quot;:null,&#xd;
               &quot;PerformerDeputyColor&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;UserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LeftPanelOpenOnClick&quot;:true,&#xd;
               &quot;RightPanelOpenOnClick&quot;:true&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:null&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                              <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                              <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                            </JSONPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                            <boolProp name="displayJMeterProperties">false</boolProp>
                            <boolProp name="displayJMeterVariables">true</boolProp>
                            <boolProp name="displaySystemProperties">false</boolProp>
                          </DebugSampler>
                          <hashTree/>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:null,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                              <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                              <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                            </JSONPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                            <boolProp name="displayJMeterProperties">false</boolProp>
                            <boolProp name="displayJMeterVariables">true</boolProp>
                            <boolProp name="displaySystemProperties">false</boolProp>
                          </DebugSampler>
                          <hashTree/>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                          </hashTree>
                        </hashTree>
                        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                          <stringProp name="IfController.condition"></stringProp>
                          <boolProp name="IfController.evaluateAll">false</boolProp>
                          <boolProp name="IfController.useExpression">true</boolProp>
                        </IfController>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                    <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                      <boolProp name="displayJMeterProperties">false</boolProp>
                      <boolProp name="displayJMeterVariables">true</boolProp>
                      <boolProp name="displaySystemProperties">false</boolProp>
                    </DebugSampler>
                    <hashTree/>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Иначе" enabled="true">
                      <stringProp name="IfController.condition">${__groovy(&quot;${boll}&quot;==&quot;0&quot;)}</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                      <boolProp name="IfController.useExpression">true</boolProp>
                    </IfController>
                    <hashTree>
                      <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Hellow i am 4" enabled="true">
                        <boolProp name="displayJMeterProperties">false</boolProp>
                        <boolProp name="displayJMeterVariables">true</boolProp>
                        <boolProp name="displaySystemProperties">false</boolProp>
                      </DebugSampler>
                      <hashTree/>
                      <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Set Puck True" enabled="true">
                        <stringProp name="BeanShellSampler.query">vars.put(&quot;puck&quot;, &quot;1&quot;);
vars.put(&quot;shuttlecock&quot;, &quot;1&quot;);
vars.put(&quot;rollers&quot;, &quot;1&quot;);
vars.put(&quot;skate&quot;, &quot;1&quot;);

</stringProp>
                        <stringProp name="BeanShellSampler.filename"></stringProp>
                        <stringProp name="BeanShellSampler.parameters"></stringProp>
                        <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                      </BeanShellSampler>
                      <hashTree/>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получение id ролей" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                          </hashTree>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role1ID" enabled="true">
                              <stringProp name="JSONPostProcessor.referenceNames">Role1ID</stringProp>
                              <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                            </JSONPostProcessor>
                            <hashTree/>
                          </hashTree>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                          </hashTree>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName2}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName2}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role2ID" enabled="true">
                              <stringProp name="JSONPostProcessor.referenceNames">Role2ID</stringProp>
                              <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                            </JSONPostProcessor>
                            <hashTree/>
                          </hashTree>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                          </hashTree>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName3}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName3}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role3ID" enabled="true">
                              <stringProp name="JSONPostProcessor.referenceNames">Role3ID</stringProp>
                              <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                            </JSONPostProcessor>
                            <hashTree/>
                          </hashTree>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                          </hashTree>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName4}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName4}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain">${host}</stringProp>
                            <stringProp name="HTTPSampler.port">${port}</stringProp>
                            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="Host" elementType="Header">
                                  <stringProp name="Header.name">Host</stringProp>
                                  <stringProp name="Header.value">${host}</stringProp>
                                </elementProp>
                                <elementProp name="Accept-Encoding" elementType="Header">
                                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                                </elementProp>
                                <elementProp name="Content-Type" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                                </elementProp>
                                <elementProp name="Tessa-Session" elementType="Header">
                                  <stringProp name="Header.name">Tessa-Session</stringProp>
                                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role4ID" enabled="true">
                              <stringProp name="JSONPostProcessor.referenceNames">Role4ID</stringProp>
                              <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                            </JSONPostProcessor>
                            <hashTree/>
                          </hashTree>
                        </hashTree>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveNewCard" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApBarcodeScannerUsrCfg&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;ID_source&quot;:null,&#xd;
               &quot;IsClosePendingDisabled&quot;:false,&#xd;
               &quot;IsDismissed&quot;:false,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NumberInitials&quot;:null,&#xd;
               &quot;PersonDat&quot;:null,&#xd;
               &quot;PersonPre&quot;:null,&#xd;
               &quot;PersonRod&quot;:null,&#xd;
               &quot;PersonTvo&quot;:null,&#xd;
               &quot;PersonVin&quot;:null,&#xd;
               &quot;PositionDat&quot;:null,&#xd;
               &quot;PositionImn&quot;:null,&#xd;
               &quot;PositionRod&quot;:null,&#xd;
               &quot;PositionText&quot;:null,&#xd;
               &quot;PressServiceExportFolder&quot;:null,&#xd;
               &quot;Room&quot;:null,&#xd;
               &quot;SecretariatID&quot;:null,&#xd;
               &quot;SecretariatName&quot;:null,&#xd;
               &quot;SummaryExportFolder&quot;:null,&#xd;
               &quot;UopiExportFolder&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApPersonalRolesPrinters&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:true&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantDocKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantEntryPoints&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantFileType&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;FileCategoryID&quot;:null,&#xd;
               &quot;FileCategoryName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistants&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistory&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrAuthorDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrDocReceiversCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrPartnerTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryPerformerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_FieldChangedCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocStateCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrPartnerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrTaskTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrUsersCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocKindsCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocStatesCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionCompletionOptions&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionFunctionRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ConditionsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;CustomBackgroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomBlockColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomForegroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;DefaultWorkplacesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;ba729035-42d5-4a18-ae4d-b5fde98ed42b&quot;,&#xd;
                  &quot;WorkplaceID::uid&quot;:&quot;6b522604-0bdf-4cc0-a8d9-b1df3320584f&quot;,&#xd;
                  &quot;WorkplaceName&quot;:&quot;ЗамПред&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;FmUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;EnableMessageIndicator&quot;:true,&#xd;
               &quot;IsNotShowMsgIndicatorOnStartup&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;KrActiveTasksVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalInfoUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrApprovalCommonInfoVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;ApprovedBy&quot;:null,&#xd;
               &quot;AuthorComment&quot;:null,&#xd;
               &quot;AuthorID&quot;:null,&#xd;
               &quot;AuthorName&quot;:null,&#xd;
               &quot;CurrentApprovalStageRowID&quot;:null,&#xd;
               &quot;DisapprovedBy&quot;:null,&#xd;
               &quot;MainCardID&quot;:null,&#xd;
               &quot;ProcessOwnerID&quot;:null,&#xd;
               &quot;ProcessOwnerName&quot;:null,&#xd;
               &quot;StateChangedDateTimeUTC&quot;:null,&#xd;
               &quot;StateID::int&quot;:0,&#xd;
               &quot;StateName&quot;:&quot;$KrStates_Doc_Draft&quot;&#xd;
            }&#xd;
         },&#xd;
         &quot;KrApprovalHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrDialogButtonSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkNestedProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkSecondaryProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrNotificationOptionalRecipientsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrPerformersVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrStagesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUniversalTaskOptionsSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DisableTaskPopupNotifications&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRulesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AllowanceType&quot;:null,&#xd;
                  &quot;Disallow&quot;:true,&#xd;
                  &quot;Name&quot;:&quot;Отключить все&quot;,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRuleTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;967bfb11-4dc5-4f94-884d-5512717c9c27&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;816aaf6b-f601-4b69-bac4-2bb26697d4f4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;471e9ca5-8f3e-451c-afc3-4b8eaf8d26c6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Внутренний документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;acb9811f-1130-4c77-b50c-3caece5223c2&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;06cfa119-409b-4f7d-8a26-dde973712133&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ReturnFromPostponeNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;01a87a90-68b9-4b0c-a994-9a857fd64ec0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c410ab01-6890-4a7f-80f2-2d1cc9037d63&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Входящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;0d96e715-24df-4fe4-aea3-74378f43407c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f543d9b7-3d04-4bec-b1ce-60d735fd8374&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ee1b057f-9b73-4813-ae76-84fd2756913d&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2d5a655c-8757-4249-b987-3548bf3bc4ba&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения исполнителем дочернего поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;07c4a069-f4f7-464c-b05b-0bba5b440b43&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;032c0098-4a93-464c-959b-ae89f7c80cb6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения поручения соисполнителем&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;09bf9c04-be98-405c-acdb-7d767d59d7b4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;02b56f51-5085-48a9-952d-ea83f517c478&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение контроля исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;8e9cfb4e-d5c4-425f-85a7-1e333bf9c2e7&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;85054f91-9b48-4c4d-a3e3-1f019b15e8a9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3debfa49-e272-4a15-ac79-05364b34a0a6&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1db3d05b-dc2d-498b-a8e6-6956781a063c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение проверки исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6d64082e-372e-4e75-ba2b-236d101a0df8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ea46a095-d7ed-4309-b3d1-3e5c434a9d50&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TaskNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c36e86b6-6101-4067-8357-2ca981b6d8be&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ec2d437c-5fd9-4f6e-bcfa-fddb9acec096&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Изменение срока исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;a5d7cd05-a21d-4412-9d93-7c16ca679efc&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;70e39d81-2843-4a25-bcf5-c0f8b4a32e77&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Исходящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;55bcba7f-0e2e-439a-a1ce-f294681c26c4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2f168457-6a7f-4f1a-9bc6-bbb369f6499f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Общий процесс&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;4f9ee838-74df-4b98-ad9c-06683179a45f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8660fbf3-11a5-46a8-a1ba-1ae60177e82c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotification_AcquaintanceType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9d070b1a-f6b3-40d6-a08b-00d9e70dad7f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;b27cd592-8f80-4039-b694-547c94ecd31e&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_CommentNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c7a3be23-c42b-4971-88a3-eac6502f09a0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1f5f3d98-232c-461a-8350-98cd7f230459&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskRevokedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;95773bf8-11dc-4e25-8bbf-aa97371e8bb5&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;914deea1-6e40-4d01-af6c-42d2055c61d9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Отзыв поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3a1906d7-2406-4724-8301-b5f6ca3c64c9&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c5a765f4-bd96-44c3-8c5f-5cf5fe43c521&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$Notifications_Other&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;406c9297-e763-415e-9262-7b8c595ff1d3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3ede2c7b-1e06-4d43-bb3a-8752e2bc146a&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ForumNewMessagesNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;5fb7363e-023f-43c4-93ed-d19e3d3863df&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;a05d2e88-cbcc-40f8-b655-93d8c02a5525&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр отправки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;37ca2bfa-c22e-45eb-8da9-fc737a9b454c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;42f27ce9-ab29-4f1f-a302-c7ae90a841e5&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр доставки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53a097c1-2cf4-47e3-88ea-e57a9f92747f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ae5c5cd7-4c7c-4b8b-a679-8d5c2fe5d2da&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция аннулирована&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9a995274-b6ac-408a-ac89-79eadd2ba8b3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;701b44c7-90ab-4485-b9b7-aab9b4b91149&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция исполнена&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;03b5c071-280f-4006-b5c9-e07009bb757a&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3d5d7a44-c74e-418f-85eb-201bac6a9493&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция отозвана&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9271192a-2187-42f9-b042-e6c3f6134dab&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;77bdba46-e241-479a-aea1-6b0987da9783&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Смена исполнителя поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;b970e7e7-a430-43ab-965f-853460d26348&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7af52656-2a34-4f9c-b8ac-265f0c48f442&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Согласование досыла. Отказ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;47db0ce8-672c-4345-9a90-de9e198ec59c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;e0a148bf-1a73-4581-b8b6-05d0c61b85db&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление о миграции после одобрения запроса доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3f93dcd9-b6ef-46d9-aaa1-75fc016678d4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;6bbbaf3c-d578-40a7-8f44-b22aeaa95ab7&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об отказе в предоставлении доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;62bf7f22-84f5-48e3-8b40-47443b530aa1&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;90fca673-2e25-4adc-958d-03a8aa79b13f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об ошибке при миграции карточки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9c665744-e962-4e0d-9131-5e8c095d4c79&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f979367c-5d0c-429e-8cbd-9b1a508c1340&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об успешном завершении миграции&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;fdc664f8-57b0-42a7-a971-9b0b606b77e8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7daca7d3-70f7-4643-9431-f5cf975ee115&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;ФИАС&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;2fda3e2e-5418-4fff-b945-54fa3ce7888e&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;LastName&quot;,&#xd;
               &quot;FirstName&quot;,&#xd;
               &quot;MiddleName&quot;,&#xd;
               &quot;Name&quot;,&#xd;
               &quot;FullName&quot;,&#xd;
               &quot;LoginTypeID&quot;,&#xd;
               &quot;LoginTypeName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AccessLevelID::int&quot;:0,&#xd;
               &quot;AccessLevelName&quot;:&quot;$Enum_AccessLevels_Regular&quot;,&#xd;
               &quot;ApplicationArchitectureID::int&quot;:0,&#xd;
               &quot;ApplicationArchitectureName&quot;:&quot;$Enum_ApplicationArchitectures_Auto&quot;,&#xd;
               &quot;BirthDate&quot;:null,&#xd;
               &quot;Blocked&quot;:false,&#xd;
               &quot;BlockedDueDate&quot;:null,&#xd;
               &quot;CipherInfo&quot;:null,&#xd;
               &quot;Email&quot;:null,&#xd;
               &quot;Fax&quot;:null,&#xd;
               &quot;FirstName&quot;:&quot;${DirectorFirstName}&quot;,&#xd;
               &quot;FullName&quot;:&quot;${DirectorLastName} ${DirectorFirstName} ${DirectorMiddleName}&quot;,&#xd;
               &quot;HomePhone&quot;:null,&#xd;
               &quot;IPPhone&quot;:null,&#xd;
               &quot;LastName&quot;:&quot;${DirectorLastName}&quot;,&#xd;
               &quot;Login&quot;:&quot;${DirectorLogin}&quot;,&#xd;
               &quot;LoginTypeID::int&quot;:1,&#xd;
               &quot;LoginTypeName&quot;:&quot;$Enum_LoginTypes_Tessa&quot;,&#xd;
               &quot;MiddleName&quot;:&quot;${DirectorMiddleName}&quot;,&#xd;
               &quot;MobilePhone&quot;:null,&#xd;
               &quot;Name&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
               &quot;PasswordChanged&quot;:null,&#xd;
               &quot;PasswordHash&quot;:null,&#xd;
               &quot;PasswordKey&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;Position&quot;:null,&#xd;
               &quot;Security&quot;:null,&#xd;
               &quot;SecurityLock&quot;:false,&#xd;
               &quot;UserPositionID&quot;:null,&#xd;
               &quot;UserPositionName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleStaticRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role1ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName1}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;850ed3b6-6af2-4df1-9b2e-4615a2b3e504&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role2ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName2}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;11edacee-27f5-4af5-828e-181487442803&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role3ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName3}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6f7e8c55-73ac-4c50-b749-1032487e395c&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role4ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName4}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6f7e8c55-73ac-4c50-b749-1032487e395c&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleSubscribedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LanguageCaption&quot;:null,&#xd;
               &quot;LanguageCode&quot;:null,&#xd;
               &quot;LanguageID&quot;:null,&#xd;
               &quot;Password&quot;: &quot;${DirectorPassword}&quot;,&#xd;
               &quot;PasswordRepeat&quot;:&quot;${DirectorPassword}&quot;,&#xd;
               &quot;Settings&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleUnsubscibedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8916d66f-627f-4733-91bf-4c264fcb9d1d&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TasksNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ac08e02e-a28a-40dc-ae28-41ea7e5b397e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementAccess&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementHelperVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserID&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:null,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:1&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;UserSettingsFunctionRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AssistantHeadParallelColor&quot;:null,&#xd;
               &quot;AssistantHeadParallelDeputyColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialDeputyColor&quot;:null,&#xd;
               &quot;AssistantParallelColor&quot;:null,&#xd;
               &quot;AssistantParallelEntryColor&quot;:null,&#xd;
               &quot;AssistantSerialColor&quot;:null,&#xd;
               &quot;AssistantSerialEntryColor&quot;:null,&#xd;
               &quot;AuthorColor&quot;:null,&#xd;
               &quot;AuthorDeputyColor&quot;:null,&#xd;
               &quot;PerformerColor&quot;:null,&#xd;
               &quot;PerformerDeputyColor&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;UserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LeftPanelOpenOnClick&quot;:true,&#xd;
               &quot;RightPanelOpenOnClick&quot;:true&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:null&#xd;
}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                            <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                            <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          </JSONPostProcessor>
                          <hashTree/>
                        </hashTree>
                        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                          <boolProp name="displayJMeterProperties">false</boolProp>
                          <boolProp name="displayJMeterVariables">true</boolProp>
                          <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugSampler>
                        <hashTree/>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:null,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                            <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                            <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          </JSONPostProcessor>
                          <hashTree/>
                        </hashTree>
                        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                          <boolProp name="displayJMeterProperties">false</boolProp>
                          <boolProp name="displayJMeterVariables">true</boolProp>
                          <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugSampler>
                        <hashTree/>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Иначе" enabled="true">
                    <stringProp name="IfController.condition">${__groovy(&quot;${puck}&quot;==&quot;0&quot;)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="3If_Inside" enabled="true">
                      <boolProp name="displayJMeterProperties">false</boolProp>
                      <boolProp name="displayJMeterVariables">true</boolProp>
                      <boolProp name="displaySystemProperties">false</boolProp>
                    </DebugSampler>
                    <hashTree/>
                    <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Set Shuttlecock True" enabled="true">
                      <stringProp name="BeanShellSampler.query">vars.put(&quot;shuttlecock&quot;, &quot;1&quot;);
vars.put(&quot;rollers&quot;, &quot;1&quot;);
vars.put(&quot;skate&quot;, &quot;1&quot;);

</stringProp>
                      <stringProp name="BeanShellSampler.filename"></stringProp>
                      <stringProp name="BeanShellSampler.parameters"></stringProp>
                      <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                    </BeanShellSampler>
                    <hashTree/>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${host}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                        <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Host" elementType="Header">
                              <stringProp name="Header.name">Host</stringProp>
                              <stringProp name="Header.value">${host}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate, br</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                            </elementProp>
                            <elementProp name="Tessa-Session" elementType="Header">
                              <stringProp name="Header.name">Tessa-Session</stringProp>
                              <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${host}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                        <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Host" elementType="Header">
                              <stringProp name="Header.name">Host</stringProp>
                              <stringProp name="Header.value">${host}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate, br</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                            </elementProp>
                            <elementProp name="Tessa-Session" elementType="Header">
                              <stringProp name="Header.name">Tessa-Session</stringProp>
                              <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получение id ролей" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role1ID" enabled="true">
                            <stringProp name="JSONPostProcessor.referenceNames">Role1ID</stringProp>
                            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          </JSONPostProcessor>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName2}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName2}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role2ID" enabled="true">
                            <stringProp name="JSONPostProcessor.referenceNames">Role2ID</stringProp>
                            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          </JSONPostProcessor>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName3}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName3}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${host}</stringProp>
                          <stringProp name="HTTPSampler.port">${port}</stringProp>
                          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                          <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Host" elementType="Header">
                                <stringProp name="Header.name">Host</stringProp>
                                <stringProp name="Header.value">${host}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate, br</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                              </elementProp>
                              <elementProp name="Tessa-Session" elementType="Header">
                                <stringProp name="Header.name">Tessa-Session</stringProp>
                                <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role3ID" enabled="true">
                            <stringProp name="JSONPostProcessor.referenceNames">Role3ID</stringProp>
                            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          </JSONPostProcessor>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                    </hashTree>
                    <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                      <boolProp name="displayJMeterProperties">false</boolProp>
                      <boolProp name="displayJMeterVariables">true</boolProp>
                      <boolProp name="displaySystemProperties">false</boolProp>
                    </DebugSampler>
                    <hashTree/>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveNewCard" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApBarcodeScannerUsrCfg&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;ID_source&quot;:null,&#xd;
               &quot;IsClosePendingDisabled&quot;:false,&#xd;
               &quot;IsDismissed&quot;:false,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NumberInitials&quot;:null,&#xd;
               &quot;PersonDat&quot;:null,&#xd;
               &quot;PersonPre&quot;:null,&#xd;
               &quot;PersonRod&quot;:null,&#xd;
               &quot;PersonTvo&quot;:null,&#xd;
               &quot;PersonVin&quot;:null,&#xd;
               &quot;PositionDat&quot;:null,&#xd;
               &quot;PositionImn&quot;:null,&#xd;
               &quot;PositionRod&quot;:null,&#xd;
               &quot;PositionText&quot;:null,&#xd;
               &quot;PressServiceExportFolder&quot;:null,&#xd;
               &quot;Room&quot;:null,&#xd;
               &quot;SecretariatID&quot;:null,&#xd;
               &quot;SecretariatName&quot;:null,&#xd;
               &quot;SummaryExportFolder&quot;:null,&#xd;
               &quot;UopiExportFolder&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApPersonalRolesPrinters&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:true&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantDocKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantEntryPoints&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantFileType&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;FileCategoryID&quot;:null,&#xd;
               &quot;FileCategoryName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistants&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistory&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrAuthorDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrDocReceiversCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrPartnerTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryPerformerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_FieldChangedCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocStateCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrPartnerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrTaskTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrUsersCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocKindsCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocStatesCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionCompletionOptions&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionFunctionRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ConditionsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;CustomBackgroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomBlockColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomForegroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;DefaultWorkplacesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;ba729035-42d5-4a18-ae4d-b5fde98ed42b&quot;,&#xd;
                  &quot;WorkplaceID::uid&quot;:&quot;6b522604-0bdf-4cc0-a8d9-b1df3320584f&quot;,&#xd;
                  &quot;WorkplaceName&quot;:&quot;ЗамПред&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;FmUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;EnableMessageIndicator&quot;:true,&#xd;
               &quot;IsNotShowMsgIndicatorOnStartup&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;KrActiveTasksVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalInfoUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrApprovalCommonInfoVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;ApprovedBy&quot;:null,&#xd;
               &quot;AuthorComment&quot;:null,&#xd;
               &quot;AuthorID&quot;:null,&#xd;
               &quot;AuthorName&quot;:null,&#xd;
               &quot;CurrentApprovalStageRowID&quot;:null,&#xd;
               &quot;DisapprovedBy&quot;:null,&#xd;
               &quot;MainCardID&quot;:null,&#xd;
               &quot;ProcessOwnerID&quot;:null,&#xd;
               &quot;ProcessOwnerName&quot;:null,&#xd;
               &quot;StateChangedDateTimeUTC&quot;:null,&#xd;
               &quot;StateID::int&quot;:0,&#xd;
               &quot;StateName&quot;:&quot;$KrStates_Doc_Draft&quot;&#xd;
            }&#xd;
         },&#xd;
         &quot;KrApprovalHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrDialogButtonSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkNestedProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkSecondaryProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrNotificationOptionalRecipientsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrPerformersVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrStagesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUniversalTaskOptionsSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DisableTaskPopupNotifications&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRulesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AllowanceType&quot;:null,&#xd;
                  &quot;Disallow&quot;:true,&#xd;
                  &quot;Name&quot;:&quot;Отключить все&quot;,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRuleTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;967bfb11-4dc5-4f94-884d-5512717c9c27&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;816aaf6b-f601-4b69-bac4-2bb26697d4f4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;471e9ca5-8f3e-451c-afc3-4b8eaf8d26c6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Внутренний документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;acb9811f-1130-4c77-b50c-3caece5223c2&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;06cfa119-409b-4f7d-8a26-dde973712133&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ReturnFromPostponeNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;01a87a90-68b9-4b0c-a994-9a857fd64ec0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c410ab01-6890-4a7f-80f2-2d1cc9037d63&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Входящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;0d96e715-24df-4fe4-aea3-74378f43407c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f543d9b7-3d04-4bec-b1ce-60d735fd8374&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ee1b057f-9b73-4813-ae76-84fd2756913d&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2d5a655c-8757-4249-b987-3548bf3bc4ba&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения исполнителем дочернего поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;07c4a069-f4f7-464c-b05b-0bba5b440b43&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;032c0098-4a93-464c-959b-ae89f7c80cb6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения поручения соисполнителем&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;09bf9c04-be98-405c-acdb-7d767d59d7b4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;02b56f51-5085-48a9-952d-ea83f517c478&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение контроля исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;8e9cfb4e-d5c4-425f-85a7-1e333bf9c2e7&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;85054f91-9b48-4c4d-a3e3-1f019b15e8a9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3debfa49-e272-4a15-ac79-05364b34a0a6&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1db3d05b-dc2d-498b-a8e6-6956781a063c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение проверки исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6d64082e-372e-4e75-ba2b-236d101a0df8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ea46a095-d7ed-4309-b3d1-3e5c434a9d50&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TaskNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c36e86b6-6101-4067-8357-2ca981b6d8be&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ec2d437c-5fd9-4f6e-bcfa-fddb9acec096&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Изменение срока исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;a5d7cd05-a21d-4412-9d93-7c16ca679efc&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;70e39d81-2843-4a25-bcf5-c0f8b4a32e77&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Исходящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;55bcba7f-0e2e-439a-a1ce-f294681c26c4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2f168457-6a7f-4f1a-9bc6-bbb369f6499f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Общий процесс&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;4f9ee838-74df-4b98-ad9c-06683179a45f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8660fbf3-11a5-46a8-a1ba-1ae60177e82c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotification_AcquaintanceType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9d070b1a-f6b3-40d6-a08b-00d9e70dad7f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;b27cd592-8f80-4039-b694-547c94ecd31e&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_CommentNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c7a3be23-c42b-4971-88a3-eac6502f09a0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1f5f3d98-232c-461a-8350-98cd7f230459&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskRevokedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;95773bf8-11dc-4e25-8bbf-aa97371e8bb5&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;914deea1-6e40-4d01-af6c-42d2055c61d9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Отзыв поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3a1906d7-2406-4724-8301-b5f6ca3c64c9&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c5a765f4-bd96-44c3-8c5f-5cf5fe43c521&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$Notifications_Other&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;406c9297-e763-415e-9262-7b8c595ff1d3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3ede2c7b-1e06-4d43-bb3a-8752e2bc146a&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ForumNewMessagesNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;5fb7363e-023f-43c4-93ed-d19e3d3863df&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;a05d2e88-cbcc-40f8-b655-93d8c02a5525&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр отправки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;37ca2bfa-c22e-45eb-8da9-fc737a9b454c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;42f27ce9-ab29-4f1f-a302-c7ae90a841e5&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр доставки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53a097c1-2cf4-47e3-88ea-e57a9f92747f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ae5c5cd7-4c7c-4b8b-a679-8d5c2fe5d2da&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция аннулирована&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9a995274-b6ac-408a-ac89-79eadd2ba8b3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;701b44c7-90ab-4485-b9b7-aab9b4b91149&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция исполнена&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;03b5c071-280f-4006-b5c9-e07009bb757a&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3d5d7a44-c74e-418f-85eb-201bac6a9493&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция отозвана&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9271192a-2187-42f9-b042-e6c3f6134dab&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;77bdba46-e241-479a-aea1-6b0987da9783&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Смена исполнителя поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;b970e7e7-a430-43ab-965f-853460d26348&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7af52656-2a34-4f9c-b8ac-265f0c48f442&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Согласование досыла. Отказ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;47db0ce8-672c-4345-9a90-de9e198ec59c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;e0a148bf-1a73-4581-b8b6-05d0c61b85db&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление о миграции после одобрения запроса доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3f93dcd9-b6ef-46d9-aaa1-75fc016678d4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;6bbbaf3c-d578-40a7-8f44-b22aeaa95ab7&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об отказе в предоставлении доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;62bf7f22-84f5-48e3-8b40-47443b530aa1&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;90fca673-2e25-4adc-958d-03a8aa79b13f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об ошибке при миграции карточки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9c665744-e962-4e0d-9131-5e8c095d4c79&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f979367c-5d0c-429e-8cbd-9b1a508c1340&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об успешном завершении миграции&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;fdc664f8-57b0-42a7-a971-9b0b606b77e8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7daca7d3-70f7-4643-9431-f5cf975ee115&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;ФИАС&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;2fda3e2e-5418-4fff-b945-54fa3ce7888e&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;LastName&quot;,&#xd;
               &quot;FirstName&quot;,&#xd;
               &quot;MiddleName&quot;,&#xd;
               &quot;Name&quot;,&#xd;
               &quot;FullName&quot;,&#xd;
               &quot;LoginTypeID&quot;,&#xd;
               &quot;LoginTypeName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AccessLevelID::int&quot;:0,&#xd;
               &quot;AccessLevelName&quot;:&quot;$Enum_AccessLevels_Regular&quot;,&#xd;
               &quot;ApplicationArchitectureID::int&quot;:0,&#xd;
               &quot;ApplicationArchitectureName&quot;:&quot;$Enum_ApplicationArchitectures_Auto&quot;,&#xd;
               &quot;BirthDate&quot;:null,&#xd;
               &quot;Blocked&quot;:false,&#xd;
               &quot;BlockedDueDate&quot;:null,&#xd;
               &quot;CipherInfo&quot;:null,&#xd;
               &quot;Email&quot;:null,&#xd;
               &quot;Fax&quot;:null,&#xd;
               &quot;FirstName&quot;:&quot;${DirectorFirstName}&quot;,&#xd;
               &quot;FullName&quot;:&quot;${DirectorLastName} ${DirectorFirstName} ${DirectorMiddleName}&quot;,&#xd;
               &quot;HomePhone&quot;:null,&#xd;
               &quot;IPPhone&quot;:null,&#xd;
               &quot;LastName&quot;:&quot;${DirectorLastName}&quot;,&#xd;
               &quot;Login&quot;:&quot;${DirectorLogin}&quot;,&#xd;
               &quot;LoginTypeID::int&quot;:1,&#xd;
               &quot;LoginTypeName&quot;:&quot;$Enum_LoginTypes_Tessa&quot;,&#xd;
               &quot;MiddleName&quot;:&quot;${DirectorMiddleName}&quot;,&#xd;
               &quot;MobilePhone&quot;:null,&#xd;
               &quot;Name&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
               &quot;PasswordChanged&quot;:null,&#xd;
               &quot;PasswordHash&quot;:null,&#xd;
               &quot;PasswordKey&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;Position&quot;:null,&#xd;
               &quot;Security&quot;:null,&#xd;
               &quot;SecurityLock&quot;:false,&#xd;
               &quot;UserPositionID&quot;:null,&#xd;
               &quot;UserPositionName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleStaticRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role1ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName1}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;850ed3b6-6af2-4df1-9b2e-4615a2b3e504&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role2ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName2}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;11edacee-27f5-4af5-828e-181487442803&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role3ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName3}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6f7e8c55-73ac-4c50-b749-1032487e395c&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleSubscribedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LanguageCaption&quot;:null,&#xd;
               &quot;LanguageCode&quot;:null,&#xd;
               &quot;LanguageID&quot;:null,&#xd;
               &quot;Password&quot;: &quot;${DirectorPassword}&quot;,&#xd;
               &quot;PasswordRepeat&quot;:&quot;${DirectorPassword}&quot;,&#xd;
               &quot;Settings&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleUnsubscibedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8916d66f-627f-4733-91bf-4c264fcb9d1d&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TasksNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ac08e02e-a28a-40dc-ae28-41ea7e5b397e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementAccess&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementHelperVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserID&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:null,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:1&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;UserSettingsFunctionRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AssistantHeadParallelColor&quot;:null,&#xd;
               &quot;AssistantHeadParallelDeputyColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialDeputyColor&quot;:null,&#xd;
               &quot;AssistantParallelColor&quot;:null,&#xd;
               &quot;AssistantParallelEntryColor&quot;:null,&#xd;
               &quot;AssistantSerialColor&quot;:null,&#xd;
               &quot;AssistantSerialEntryColor&quot;:null,&#xd;
               &quot;AuthorColor&quot;:null,&#xd;
               &quot;AuthorDeputyColor&quot;:null,&#xd;
               &quot;PerformerColor&quot;:null,&#xd;
               &quot;PerformerDeputyColor&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;UserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LeftPanelOpenOnClick&quot;:true,&#xd;
               &quot;RightPanelOpenOnClick&quot;:true&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:null&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${host}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                        <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Host" elementType="Header">
                              <stringProp name="Header.name">Host</stringProp>
                              <stringProp name="Header.value">${host}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate, br</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                            </elementProp>
                            <elementProp name="Tessa-Session" elementType="Header">
                              <stringProp name="Header.name">Tessa-Session</stringProp>
                              <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                      </hashTree>
                      <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                        <boolProp name="displayJMeterProperties">false</boolProp>
                        <boolProp name="displayJMeterVariables">true</boolProp>
                        <boolProp name="displaySystemProperties">false</boolProp>
                      </DebugSampler>
                      <hashTree/>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:null,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${host}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                        <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Host" elementType="Header">
                              <stringProp name="Header.name">Host</stringProp>
                              <stringProp name="Header.value">${host}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate, br</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                            </elementProp>
                            <elementProp name="Tessa-Session" elementType="Header">
                              <stringProp name="Header.name">Tessa-Session</stringProp>
                              <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                      </hashTree>
                      <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                        <boolProp name="displayJMeterProperties">false</boolProp>
                        <boolProp name="displayJMeterVariables">true</boolProp>
                        <boolProp name="displaySystemProperties">false</boolProp>
                      </DebugSampler>
                      <hashTree/>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${host}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                        <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Host" elementType="Header">
                              <stringProp name="Header.name">Host</stringProp>
                              <stringProp name="Header.value">${host}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate, br</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                            </elementProp>
                            <elementProp name="Tessa-Session" elementType="Header">
                              <stringProp name="Header.name">Tessa-Session</stringProp>
                              <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${host}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                        <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Host" elementType="Header">
                              <stringProp name="Header.name">Host</stringProp>
                              <stringProp name="Header.value">${host}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate, br</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                            </elementProp>
                            <elementProp name="Tessa-Session" elementType="Header">
                              <stringProp name="Header.name">Tessa-Session</stringProp>
                              <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Иначе" enabled="true">
                  <stringProp name="IfController.condition">${__groovy(&quot;${shuttlecock}&quot;==&quot;0&quot;)}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                  <boolProp name="IfController.useExpression">true</boolProp>
                </IfController>
                <hashTree>
                  <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="2If_Inside" enabled="true">
                    <boolProp name="displayJMeterProperties">false</boolProp>
                    <boolProp name="displayJMeterVariables">true</boolProp>
                    <boolProp name="displaySystemProperties">false</boolProp>
                  </DebugSampler>
                  <hashTree/>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Set Rollers True" enabled="true">
                    <stringProp name="BeanShellSampler.query">vars.put(&quot;rollers&quot;, &quot;1&quot;);
vars.put(&quot;skate&quot;, &quot;1&quot;);

</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                    <boolProp name="TransactionController.parent">false</boolProp>
                  </TransactionController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Host" elementType="Header">
                            <stringProp name="Header.name">Host</stringProp>
                            <stringProp name="Header.value">${host}</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                          </elementProp>
                          <elementProp name="Tessa-Session" elementType="Header">
                            <stringProp name="Header.name">Tessa-Session</stringProp>
                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Host" elementType="Header">
                            <stringProp name="Header.name">Host</stringProp>
                            <stringProp name="Header.value">${host}</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                          </elementProp>
                          <elementProp name="Tessa-Session" elementType="Header">
                            <stringProp name="Header.name">Tessa-Session</stringProp>
                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получение id ролей" enabled="true">
                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                    <boolProp name="TransactionController.parent">false</boolProp>
                  </TransactionController>
                  <hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${host}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                        <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Host" elementType="Header">
                              <stringProp name="Header.name">Host</stringProp>
                              <stringProp name="Header.value">${host}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate, br</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                            </elementProp>
                            <elementProp name="Tessa-Session" elementType="Header">
                              <stringProp name="Header.name">Tessa-Session</stringProp>
                              <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${host}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                        <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Host" elementType="Header">
                              <stringProp name="Header.name">Host</stringProp>
                              <stringProp name="Header.value">${host}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate, br</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                            </elementProp>
                            <elementProp name="Tessa-Session" elementType="Header">
                              <stringProp name="Header.name">Tessa-Session</stringProp>
                              <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${host}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                        <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Host" elementType="Header">
                              <stringProp name="Header.name">Host</stringProp>
                              <stringProp name="Header.value">${host}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate, br</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                            </elementProp>
                            <elementProp name="Tessa-Session" elementType="Header">
                              <stringProp name="Header.name">Tessa-Session</stringProp>
                              <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role1ID" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">Role1ID</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${host}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                        <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Host" elementType="Header">
                              <stringProp name="Header.name">Host</stringProp>
                              <stringProp name="Header.value">${host}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate, br</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                            </elementProp>
                            <elementProp name="Tessa-Session" elementType="Header">
                              <stringProp name="Header.name">Tessa-Session</stringProp>
                              <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${host}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                        <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Host" elementType="Header">
                              <stringProp name="Header.name">Host</stringProp>
                              <stringProp name="Header.value">${host}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate, br</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                            </elementProp>
                            <elementProp name="Tessa-Session" elementType="Header">
                              <stringProp name="Header.name">Tessa-Session</stringProp>
                              <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName2}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName2}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${host}</stringProp>
                        <stringProp name="HTTPSampler.port">${port}</stringProp>
                        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                        <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Host" elementType="Header">
                              <stringProp name="Header.name">Host</stringProp>
                              <stringProp name="Header.value">${host}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate, br</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                            </elementProp>
                            <elementProp name="Tessa-Session" elementType="Header">
                              <stringProp name="Header.name">Tessa-Session</stringProp>
                              <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role2ID" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">Role2ID</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                    <boolProp name="displayJMeterProperties">false</boolProp>
                    <boolProp name="displayJMeterVariables">true</boolProp>
                    <boolProp name="displaySystemProperties">false</boolProp>
                  </DebugSampler>
                  <hashTree/>
                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveNewCard" enabled="true">
                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                    <boolProp name="TransactionController.parent">false</boolProp>
                  </TransactionController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApBarcodeScannerUsrCfg&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;ID_source&quot;:null,&#xd;
               &quot;IsClosePendingDisabled&quot;:false,&#xd;
               &quot;IsDismissed&quot;:false,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NumberInitials&quot;:null,&#xd;
               &quot;PersonDat&quot;:null,&#xd;
               &quot;PersonPre&quot;:null,&#xd;
               &quot;PersonRod&quot;:null,&#xd;
               &quot;PersonTvo&quot;:null,&#xd;
               &quot;PersonVin&quot;:null,&#xd;
               &quot;PositionDat&quot;:null,&#xd;
               &quot;PositionImn&quot;:null,&#xd;
               &quot;PositionRod&quot;:null,&#xd;
               &quot;PositionText&quot;:null,&#xd;
               &quot;PressServiceExportFolder&quot;:null,&#xd;
               &quot;Room&quot;:null,&#xd;
               &quot;SecretariatID&quot;:null,&#xd;
               &quot;SecretariatName&quot;:null,&#xd;
               &quot;SummaryExportFolder&quot;:null,&#xd;
               &quot;UopiExportFolder&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApPersonalRolesPrinters&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:true&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantDocKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantEntryPoints&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantFileType&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;FileCategoryID&quot;:null,&#xd;
               &quot;FileCategoryName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistants&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistory&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrAuthorDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrDocReceiversCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrPartnerTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryPerformerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_FieldChangedCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocStateCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrPartnerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrTaskTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrUsersCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocKindsCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocStatesCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionCompletionOptions&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionFunctionRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ConditionsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;CustomBackgroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomBlockColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomForegroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;DefaultWorkplacesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;ba729035-42d5-4a18-ae4d-b5fde98ed42b&quot;,&#xd;
                  &quot;WorkplaceID::uid&quot;:&quot;6b522604-0bdf-4cc0-a8d9-b1df3320584f&quot;,&#xd;
                  &quot;WorkplaceName&quot;:&quot;ЗамПред&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;FmUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;EnableMessageIndicator&quot;:true,&#xd;
               &quot;IsNotShowMsgIndicatorOnStartup&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;KrActiveTasksVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalInfoUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrApprovalCommonInfoVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;ApprovedBy&quot;:null,&#xd;
               &quot;AuthorComment&quot;:null,&#xd;
               &quot;AuthorID&quot;:null,&#xd;
               &quot;AuthorName&quot;:null,&#xd;
               &quot;CurrentApprovalStageRowID&quot;:null,&#xd;
               &quot;DisapprovedBy&quot;:null,&#xd;
               &quot;MainCardID&quot;:null,&#xd;
               &quot;ProcessOwnerID&quot;:null,&#xd;
               &quot;ProcessOwnerName&quot;:null,&#xd;
               &quot;StateChangedDateTimeUTC&quot;:null,&#xd;
               &quot;StateID::int&quot;:0,&#xd;
               &quot;StateName&quot;:&quot;$KrStates_Doc_Draft&quot;&#xd;
            }&#xd;
         },&#xd;
         &quot;KrApprovalHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrDialogButtonSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkNestedProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkSecondaryProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrNotificationOptionalRecipientsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrPerformersVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrStagesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUniversalTaskOptionsSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DisableTaskPopupNotifications&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRulesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AllowanceType&quot;:null,&#xd;
                  &quot;Disallow&quot;:true,&#xd;
                  &quot;Name&quot;:&quot;Отключить все&quot;,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRuleTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;967bfb11-4dc5-4f94-884d-5512717c9c27&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;816aaf6b-f601-4b69-bac4-2bb26697d4f4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;471e9ca5-8f3e-451c-afc3-4b8eaf8d26c6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Внутренний документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;acb9811f-1130-4c77-b50c-3caece5223c2&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;06cfa119-409b-4f7d-8a26-dde973712133&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ReturnFromPostponeNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;01a87a90-68b9-4b0c-a994-9a857fd64ec0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c410ab01-6890-4a7f-80f2-2d1cc9037d63&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Входящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;0d96e715-24df-4fe4-aea3-74378f43407c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f543d9b7-3d04-4bec-b1ce-60d735fd8374&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ee1b057f-9b73-4813-ae76-84fd2756913d&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2d5a655c-8757-4249-b987-3548bf3bc4ba&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения исполнителем дочернего поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;07c4a069-f4f7-464c-b05b-0bba5b440b43&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;032c0098-4a93-464c-959b-ae89f7c80cb6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения поручения соисполнителем&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;09bf9c04-be98-405c-acdb-7d767d59d7b4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;02b56f51-5085-48a9-952d-ea83f517c478&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение контроля исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;8e9cfb4e-d5c4-425f-85a7-1e333bf9c2e7&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;85054f91-9b48-4c4d-a3e3-1f019b15e8a9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3debfa49-e272-4a15-ac79-05364b34a0a6&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1db3d05b-dc2d-498b-a8e6-6956781a063c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение проверки исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6d64082e-372e-4e75-ba2b-236d101a0df8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ea46a095-d7ed-4309-b3d1-3e5c434a9d50&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TaskNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c36e86b6-6101-4067-8357-2ca981b6d8be&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ec2d437c-5fd9-4f6e-bcfa-fddb9acec096&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Изменение срока исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;a5d7cd05-a21d-4412-9d93-7c16ca679efc&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;70e39d81-2843-4a25-bcf5-c0f8b4a32e77&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Исходящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;55bcba7f-0e2e-439a-a1ce-f294681c26c4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2f168457-6a7f-4f1a-9bc6-bbb369f6499f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Общий процесс&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;4f9ee838-74df-4b98-ad9c-06683179a45f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8660fbf3-11a5-46a8-a1ba-1ae60177e82c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotification_AcquaintanceType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9d070b1a-f6b3-40d6-a08b-00d9e70dad7f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;b27cd592-8f80-4039-b694-547c94ecd31e&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_CommentNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c7a3be23-c42b-4971-88a3-eac6502f09a0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1f5f3d98-232c-461a-8350-98cd7f230459&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskRevokedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;95773bf8-11dc-4e25-8bbf-aa97371e8bb5&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;914deea1-6e40-4d01-af6c-42d2055c61d9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Отзыв поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3a1906d7-2406-4724-8301-b5f6ca3c64c9&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c5a765f4-bd96-44c3-8c5f-5cf5fe43c521&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$Notifications_Other&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;406c9297-e763-415e-9262-7b8c595ff1d3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3ede2c7b-1e06-4d43-bb3a-8752e2bc146a&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ForumNewMessagesNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;5fb7363e-023f-43c4-93ed-d19e3d3863df&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;a05d2e88-cbcc-40f8-b655-93d8c02a5525&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр отправки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;37ca2bfa-c22e-45eb-8da9-fc737a9b454c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;42f27ce9-ab29-4f1f-a302-c7ae90a841e5&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр доставки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53a097c1-2cf4-47e3-88ea-e57a9f92747f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ae5c5cd7-4c7c-4b8b-a679-8d5c2fe5d2da&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция аннулирована&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9a995274-b6ac-408a-ac89-79eadd2ba8b3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;701b44c7-90ab-4485-b9b7-aab9b4b91149&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция исполнена&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;03b5c071-280f-4006-b5c9-e07009bb757a&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3d5d7a44-c74e-418f-85eb-201bac6a9493&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция отозвана&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9271192a-2187-42f9-b042-e6c3f6134dab&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;77bdba46-e241-479a-aea1-6b0987da9783&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Смена исполнителя поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;b970e7e7-a430-43ab-965f-853460d26348&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7af52656-2a34-4f9c-b8ac-265f0c48f442&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Согласование досыла. Отказ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;47db0ce8-672c-4345-9a90-de9e198ec59c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;e0a148bf-1a73-4581-b8b6-05d0c61b85db&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление о миграции после одобрения запроса доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3f93dcd9-b6ef-46d9-aaa1-75fc016678d4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;6bbbaf3c-d578-40a7-8f44-b22aeaa95ab7&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об отказе в предоставлении доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;62bf7f22-84f5-48e3-8b40-47443b530aa1&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;90fca673-2e25-4adc-958d-03a8aa79b13f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об ошибке при миграции карточки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9c665744-e962-4e0d-9131-5e8c095d4c79&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f979367c-5d0c-429e-8cbd-9b1a508c1340&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об успешном завершении миграции&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;fdc664f8-57b0-42a7-a971-9b0b606b77e8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7daca7d3-70f7-4643-9431-f5cf975ee115&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;ФИАС&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;2fda3e2e-5418-4fff-b945-54fa3ce7888e&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;LastName&quot;,&#xd;
               &quot;FirstName&quot;,&#xd;
               &quot;MiddleName&quot;,&#xd;
               &quot;Name&quot;,&#xd;
               &quot;FullName&quot;,&#xd;
               &quot;LoginTypeID&quot;,&#xd;
               &quot;LoginTypeName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AccessLevelID::int&quot;:0,&#xd;
               &quot;AccessLevelName&quot;:&quot;$Enum_AccessLevels_Regular&quot;,&#xd;
               &quot;ApplicationArchitectureID::int&quot;:0,&#xd;
               &quot;ApplicationArchitectureName&quot;:&quot;$Enum_ApplicationArchitectures_Auto&quot;,&#xd;
               &quot;BirthDate&quot;:null,&#xd;
               &quot;Blocked&quot;:false,&#xd;
               &quot;BlockedDueDate&quot;:null,&#xd;
               &quot;CipherInfo&quot;:null,&#xd;
               &quot;Email&quot;:null,&#xd;
               &quot;Fax&quot;:null,&#xd;
               &quot;FirstName&quot;:&quot;${DirectorFirstName}&quot;,&#xd;
               &quot;FullName&quot;:&quot;${DirectorLastName} ${DirectorFirstName} ${DirectorMiddleName}&quot;,&#xd;
               &quot;HomePhone&quot;:null,&#xd;
               &quot;IPPhone&quot;:null,&#xd;
               &quot;LastName&quot;:&quot;${DirectorLastName}&quot;,&#xd;
               &quot;Login&quot;:&quot;${DirectorLogin}&quot;,&#xd;
               &quot;LoginTypeID::int&quot;:1,&#xd;
               &quot;LoginTypeName&quot;:&quot;$Enum_LoginTypes_Tessa&quot;,&#xd;
               &quot;MiddleName&quot;:&quot;${DirectorMiddleName}&quot;,&#xd;
               &quot;MobilePhone&quot;:null,&#xd;
               &quot;Name&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
               &quot;PasswordChanged&quot;:null,&#xd;
               &quot;PasswordHash&quot;:null,&#xd;
               &quot;PasswordKey&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;Position&quot;:null,&#xd;
               &quot;Security&quot;:null,&#xd;
               &quot;SecurityLock&quot;:false,&#xd;
               &quot;UserPositionID&quot;:null,&#xd;
               &quot;UserPositionName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleStaticRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role1ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName1}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;850ed3b6-6af2-4df1-9b2e-4615a2b3e504&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role2ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName2}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;11edacee-27f5-4af5-828e-181487442803&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleSubscribedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LanguageCaption&quot;:null,&#xd;
               &quot;LanguageCode&quot;:null,&#xd;
               &quot;LanguageID&quot;:null,&#xd;
               &quot;Password&quot;: &quot;${DirectorPassword}&quot;,&#xd;
               &quot;PasswordRepeat&quot;:&quot;${DirectorPassword}&quot;,&#xd;
               &quot;Settings&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleUnsubscibedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8916d66f-627f-4733-91bf-4c264fcb9d1d&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TasksNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ac08e02e-a28a-40dc-ae28-41ea7e5b397e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementAccess&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementHelperVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserID&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:null,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:1&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;UserSettingsFunctionRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AssistantHeadParallelColor&quot;:null,&#xd;
               &quot;AssistantHeadParallelDeputyColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialDeputyColor&quot;:null,&#xd;
               &quot;AssistantParallelColor&quot;:null,&#xd;
               &quot;AssistantParallelEntryColor&quot;:null,&#xd;
               &quot;AssistantSerialColor&quot;:null,&#xd;
               &quot;AssistantSerialEntryColor&quot;:null,&#xd;
               &quot;AuthorColor&quot;:null,&#xd;
               &quot;AuthorDeputyColor&quot;:null,&#xd;
               &quot;PerformerColor&quot;:null,&#xd;
               &quot;PerformerDeputyColor&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;UserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LeftPanelOpenOnClick&quot;:true,&#xd;
               &quot;RightPanelOpenOnClick&quot;:true&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:null&#xd;
}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Host" elementType="Header">
                            <stringProp name="Header.name">Host</stringProp>
                            <stringProp name="Header.value">${host}</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                          </elementProp>
                          <elementProp name="Tessa-Session" elementType="Header">
                            <stringProp name="Header.name">Tessa-Session</stringProp>
                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                    </hashTree>
                    <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                      <boolProp name="displayJMeterProperties">false</boolProp>
                      <boolProp name="displayJMeterVariables">true</boolProp>
                      <boolProp name="displaySystemProperties">false</boolProp>
                    </DebugSampler>
                    <hashTree/>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:null,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Host" elementType="Header">
                            <stringProp name="Header.name">Host</stringProp>
                            <stringProp name="Header.value">${host}</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                          </elementProp>
                          <elementProp name="Tessa-Session" elementType="Header">
                            <stringProp name="Header.name">Tessa-Session</stringProp>
                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                    </hashTree>
                    <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                      <boolProp name="displayJMeterProperties">false</boolProp>
                      <boolProp name="displayJMeterVariables">true</boolProp>
                      <boolProp name="displaySystemProperties">false</boolProp>
                    </DebugSampler>
                    <hashTree/>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Host" elementType="Header">
                            <stringProp name="Header.name">Host</stringProp>
                            <stringProp name="Header.value">${host}</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                          </elementProp>
                          <elementProp name="Tessa-Session" elementType="Header">
                            <stringProp name="Header.name">Tessa-Session</stringProp>
                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${host}</stringProp>
                      <stringProp name="HTTPSampler.port">${port}</stringProp>
                      <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Host" elementType="Header">
                            <stringProp name="Header.name">Host</stringProp>
                            <stringProp name="Header.value">${host}</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate, br</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                          </elementProp>
                          <elementProp name="Tessa-Session" elementType="Header">
                            <stringProp name="Header.name">Tessa-Session</stringProp>
                            <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Иначе" enabled="true">
                <stringProp name="IfController.condition">${__groovy(&quot;${rollers}&quot;==&quot;0&quot;)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Set Skate True" enabled="true">
                  <stringProp name="BeanShellSampler.query">vars.put(&quot;skate&quot;, &quot;1&quot;);

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="If_Inside" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree/>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Host" elementType="Header">
                          <stringProp name="Header.name">Host</stringProp>
                          <stringProp name="Header.value">${host}</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                        </elementProp>
                        <elementProp name="Tessa-Session" elementType="Header">
                          <stringProp name="Header.name">Tessa-Session</stringProp>
                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Host" elementType="Header">
                          <stringProp name="Header.name">Host</stringProp>
                          <stringProp name="Header.value">${host}</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                        </elementProp>
                        <elementProp name="Tessa-Session" elementType="Header">
                          <stringProp name="Header.name">Tessa-Session</stringProp>
                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Host" elementType="Header">
                          <stringProp name="Header.name">Host</stringProp>
                          <stringProp name="Header.value">${host}</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                        </elementProp>
                        <elementProp name="Tessa-Session" elementType="Header">
                          <stringProp name="Header.name">Tessa-Session</stringProp>
                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role1ID" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">Role1ID</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree/>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveNewCard" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApBarcodeScannerUsrCfg&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;ID_source&quot;:null,&#xd;
               &quot;IsClosePendingDisabled&quot;:false,&#xd;
               &quot;IsDismissed&quot;:false,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NumberInitials&quot;:null,&#xd;
               &quot;PersonDat&quot;:null,&#xd;
               &quot;PersonPre&quot;:null,&#xd;
               &quot;PersonRod&quot;:null,&#xd;
               &quot;PersonTvo&quot;:null,&#xd;
               &quot;PersonVin&quot;:null,&#xd;
               &quot;PositionDat&quot;:null,&#xd;
               &quot;PositionImn&quot;:null,&#xd;
               &quot;PositionRod&quot;:null,&#xd;
               &quot;PositionText&quot;:null,&#xd;
               &quot;PressServiceExportFolder&quot;:null,&#xd;
               &quot;Room&quot;:null,&#xd;
               &quot;SecretariatID&quot;:null,&#xd;
               &quot;SecretariatName&quot;:null,&#xd;
               &quot;SummaryExportFolder&quot;:null,&#xd;
               &quot;UopiExportFolder&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApPersonalRolesPrinters&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:true&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantDocKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantEntryPoints&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantFileType&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;FileCategoryID&quot;:null,&#xd;
               &quot;FileCategoryName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistants&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistory&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrAuthorDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrDocReceiversCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrPartnerTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryPerformerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_FieldChangedCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocStateCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrPartnerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrTaskTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrUsersCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocKindsCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocStatesCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionCompletionOptions&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionFunctionRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ConditionsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;CustomBackgroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomBlockColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomForegroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;DefaultWorkplacesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;ba729035-42d5-4a18-ae4d-b5fde98ed42b&quot;,&#xd;
                  &quot;WorkplaceID::uid&quot;:&quot;6b522604-0bdf-4cc0-a8d9-b1df3320584f&quot;,&#xd;
                  &quot;WorkplaceName&quot;:&quot;ЗамПред&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;FmUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;EnableMessageIndicator&quot;:true,&#xd;
               &quot;IsNotShowMsgIndicatorOnStartup&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;KrActiveTasksVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalInfoUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrApprovalCommonInfoVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;ApprovedBy&quot;:null,&#xd;
               &quot;AuthorComment&quot;:null,&#xd;
               &quot;AuthorID&quot;:null,&#xd;
               &quot;AuthorName&quot;:null,&#xd;
               &quot;CurrentApprovalStageRowID&quot;:null,&#xd;
               &quot;DisapprovedBy&quot;:null,&#xd;
               &quot;MainCardID&quot;:null,&#xd;
               &quot;ProcessOwnerID&quot;:null,&#xd;
               &quot;ProcessOwnerName&quot;:null,&#xd;
               &quot;StateChangedDateTimeUTC&quot;:null,&#xd;
               &quot;StateID::int&quot;:0,&#xd;
               &quot;StateName&quot;:&quot;$KrStates_Doc_Draft&quot;&#xd;
            }&#xd;
         },&#xd;
         &quot;KrApprovalHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrDialogButtonSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkNestedProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkSecondaryProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrNotificationOptionalRecipientsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrPerformersVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrStagesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUniversalTaskOptionsSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DisableTaskPopupNotifications&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRulesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AllowanceType&quot;:null,&#xd;
                  &quot;Disallow&quot;:true,&#xd;
                  &quot;Name&quot;:&quot;Отключить все&quot;,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRuleTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;967bfb11-4dc5-4f94-884d-5512717c9c27&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;816aaf6b-f601-4b69-bac4-2bb26697d4f4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;471e9ca5-8f3e-451c-afc3-4b8eaf8d26c6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Внутренний документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;acb9811f-1130-4c77-b50c-3caece5223c2&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;06cfa119-409b-4f7d-8a26-dde973712133&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ReturnFromPostponeNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;01a87a90-68b9-4b0c-a994-9a857fd64ec0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c410ab01-6890-4a7f-80f2-2d1cc9037d63&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Входящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;0d96e715-24df-4fe4-aea3-74378f43407c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f543d9b7-3d04-4bec-b1ce-60d735fd8374&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ee1b057f-9b73-4813-ae76-84fd2756913d&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2d5a655c-8757-4249-b987-3548bf3bc4ba&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения исполнителем дочернего поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;07c4a069-f4f7-464c-b05b-0bba5b440b43&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;032c0098-4a93-464c-959b-ae89f7c80cb6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения поручения соисполнителем&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;09bf9c04-be98-405c-acdb-7d767d59d7b4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;02b56f51-5085-48a9-952d-ea83f517c478&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение контроля исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;8e9cfb4e-d5c4-425f-85a7-1e333bf9c2e7&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;85054f91-9b48-4c4d-a3e3-1f019b15e8a9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3debfa49-e272-4a15-ac79-05364b34a0a6&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1db3d05b-dc2d-498b-a8e6-6956781a063c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение проверки исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6d64082e-372e-4e75-ba2b-236d101a0df8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ea46a095-d7ed-4309-b3d1-3e5c434a9d50&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TaskNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c36e86b6-6101-4067-8357-2ca981b6d8be&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ec2d437c-5fd9-4f6e-bcfa-fddb9acec096&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Изменение срока исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;a5d7cd05-a21d-4412-9d93-7c16ca679efc&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;70e39d81-2843-4a25-bcf5-c0f8b4a32e77&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Исходящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;55bcba7f-0e2e-439a-a1ce-f294681c26c4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2f168457-6a7f-4f1a-9bc6-bbb369f6499f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Общий процесс&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;4f9ee838-74df-4b98-ad9c-06683179a45f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8660fbf3-11a5-46a8-a1ba-1ae60177e82c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotification_AcquaintanceType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9d070b1a-f6b3-40d6-a08b-00d9e70dad7f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;b27cd592-8f80-4039-b694-547c94ecd31e&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_CommentNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c7a3be23-c42b-4971-88a3-eac6502f09a0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1f5f3d98-232c-461a-8350-98cd7f230459&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskRevokedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;95773bf8-11dc-4e25-8bbf-aa97371e8bb5&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;914deea1-6e40-4d01-af6c-42d2055c61d9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Отзыв поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3a1906d7-2406-4724-8301-b5f6ca3c64c9&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c5a765f4-bd96-44c3-8c5f-5cf5fe43c521&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$Notifications_Other&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;406c9297-e763-415e-9262-7b8c595ff1d3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3ede2c7b-1e06-4d43-bb3a-8752e2bc146a&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ForumNewMessagesNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;5fb7363e-023f-43c4-93ed-d19e3d3863df&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;a05d2e88-cbcc-40f8-b655-93d8c02a5525&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр отправки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;37ca2bfa-c22e-45eb-8da9-fc737a9b454c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;42f27ce9-ab29-4f1f-a302-c7ae90a841e5&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр доставки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53a097c1-2cf4-47e3-88ea-e57a9f92747f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ae5c5cd7-4c7c-4b8b-a679-8d5c2fe5d2da&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция аннулирована&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9a995274-b6ac-408a-ac89-79eadd2ba8b3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;701b44c7-90ab-4485-b9b7-aab9b4b91149&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция исполнена&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;03b5c071-280f-4006-b5c9-e07009bb757a&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3d5d7a44-c74e-418f-85eb-201bac6a9493&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция отозвана&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9271192a-2187-42f9-b042-e6c3f6134dab&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;77bdba46-e241-479a-aea1-6b0987da9783&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Смена исполнителя поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;b970e7e7-a430-43ab-965f-853460d26348&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7af52656-2a34-4f9c-b8ac-265f0c48f442&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Согласование досыла. Отказ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;47db0ce8-672c-4345-9a90-de9e198ec59c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;e0a148bf-1a73-4581-b8b6-05d0c61b85db&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление о миграции после одобрения запроса доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3f93dcd9-b6ef-46d9-aaa1-75fc016678d4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;6bbbaf3c-d578-40a7-8f44-b22aeaa95ab7&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об отказе в предоставлении доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;62bf7f22-84f5-48e3-8b40-47443b530aa1&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;90fca673-2e25-4adc-958d-03a8aa79b13f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об ошибке при миграции карточки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9c665744-e962-4e0d-9131-5e8c095d4c79&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f979367c-5d0c-429e-8cbd-9b1a508c1340&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об успешном завершении миграции&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;fdc664f8-57b0-42a7-a971-9b0b606b77e8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7daca7d3-70f7-4643-9431-f5cf975ee115&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;ФИАС&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;2fda3e2e-5418-4fff-b945-54fa3ce7888e&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;LastName&quot;,&#xd;
               &quot;FirstName&quot;,&#xd;
               &quot;MiddleName&quot;,&#xd;
               &quot;Name&quot;,&#xd;
               &quot;FullName&quot;,&#xd;
               &quot;LoginTypeID&quot;,&#xd;
               &quot;LoginTypeName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AccessLevelID::int&quot;:0,&#xd;
               &quot;AccessLevelName&quot;:&quot;$Enum_AccessLevels_Regular&quot;,&#xd;
               &quot;ApplicationArchitectureID::int&quot;:0,&#xd;
               &quot;ApplicationArchitectureName&quot;:&quot;$Enum_ApplicationArchitectures_Auto&quot;,&#xd;
               &quot;BirthDate&quot;:null,&#xd;
               &quot;Blocked&quot;:false,&#xd;
               &quot;BlockedDueDate&quot;:null,&#xd;
               &quot;CipherInfo&quot;:null,&#xd;
               &quot;Email&quot;:null,&#xd;
               &quot;Fax&quot;:null,&#xd;
               &quot;FirstName&quot;:&quot;${DirectorFirstName}&quot;,&#xd;
               &quot;FullName&quot;:&quot;${DirectorLastName} ${DirectorFirstName} ${DirectorMiddleName}&quot;,&#xd;
               &quot;HomePhone&quot;:null,&#xd;
               &quot;IPPhone&quot;:null,&#xd;
               &quot;LastName&quot;:&quot;${DirectorLastName}&quot;,&#xd;
               &quot;Login&quot;:&quot;${DirectorLogin}&quot;,&#xd;
               &quot;LoginTypeID::int&quot;:1,&#xd;
               &quot;LoginTypeName&quot;:&quot;$Enum_LoginTypes_Tessa&quot;,&#xd;
               &quot;MiddleName&quot;:&quot;${DirectorMiddleName}&quot;,&#xd;
               &quot;MobilePhone&quot;:null,&#xd;
               &quot;Name&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
               &quot;PasswordChanged&quot;:null,&#xd;
               &quot;PasswordHash&quot;:null,&#xd;
               &quot;PasswordKey&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;Position&quot;:null,&#xd;
               &quot;Security&quot;:null,&#xd;
               &quot;SecurityLock&quot;:false,&#xd;
               &quot;UserPositionID&quot;:null,&#xd;
               &quot;UserPositionName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleStaticRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;${Role1ID}&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;${RoleName1}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;850ed3b6-6af2-4df1-9b2e-4615a2b3e504&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleSubscribedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LanguageCaption&quot;:null,&#xd;
               &quot;LanguageCode&quot;:null,&#xd;
               &quot;LanguageID&quot;:null,&#xd;
               &quot;Password&quot;: &quot;${DirectorPassword}&quot;,&#xd;
               &quot;PasswordRepeat&quot;:&quot;${DirectorPassword}&quot;,&#xd;
               &quot;Settings&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleUnsubscibedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8916d66f-627f-4733-91bf-4c264fcb9d1d&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TasksNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ac08e02e-a28a-40dc-ae28-41ea7e5b397e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementAccess&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementHelperVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserID&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:null,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:1&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;UserSettingsFunctionRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AssistantHeadParallelColor&quot;:null,&#xd;
               &quot;AssistantHeadParallelDeputyColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialDeputyColor&quot;:null,&#xd;
               &quot;AssistantParallelColor&quot;:null,&#xd;
               &quot;AssistantParallelEntryColor&quot;:null,&#xd;
               &quot;AssistantSerialColor&quot;:null,&#xd;
               &quot;AssistantSerialEntryColor&quot;:null,&#xd;
               &quot;AuthorColor&quot;:null,&#xd;
               &quot;AuthorDeputyColor&quot;:null,&#xd;
               &quot;PerformerColor&quot;:null,&#xd;
               &quot;PerformerDeputyColor&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;UserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LeftPanelOpenOnClick&quot;:true,&#xd;
               &quot;RightPanelOpenOnClick&quot;:true&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:null&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Host" elementType="Header">
                          <stringProp name="Header.name">Host</stringProp>
                          <stringProp name="Header.value">${host}</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                        </elementProp>
                        <elementProp name="Tessa-Session" elementType="Header">
                          <stringProp name="Header.name">Tessa-Session</stringProp>
                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                  </hashTree>
                  <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                    <boolProp name="displayJMeterProperties">false</boolProp>
                    <boolProp name="displayJMeterVariables">true</boolProp>
                    <boolProp name="displaySystemProperties">false</boolProp>
                  </DebugSampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:null,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Host" elementType="Header">
                          <stringProp name="Header.name">Host</stringProp>
                          <stringProp name="Header.value">${host}</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                        </elementProp>
                        <elementProp name="Tessa-Session" elementType="Header">
                          <stringProp name="Header.name">Tessa-Session</stringProp>
                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                  </hashTree>
                  <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                    <boolProp name="displayJMeterProperties">false</boolProp>
                    <boolProp name="displayJMeterVariables">true</boolProp>
                    <boolProp name="displaySystemProperties">false</boolProp>
                  </DebugSampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Host" elementType="Header">
                          <stringProp name="Header.name">Host</stringProp>
                          <stringProp name="Header.value">${host}</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                        </elementProp>
                        <elementProp name="Tessa-Session" elementType="Header">
                          <stringProp name="Header.name">Tessa-Session</stringProp>
                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${host}</stringProp>
                    <stringProp name="HTTPSampler.port">${port}</stringProp>
                    <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Host" elementType="Header">
                          <stringProp name="Header.name">Host</stringProp>
                          <stringProp name="Header.value">${host}</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                        </elementProp>
                        <elementProp name="Tessa-Session" elementType="Header">
                          <stringProp name="Header.name">Tessa-Session</stringProp>
                          <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Иначе" enabled="true">
              <stringProp name="IfController.condition">${__groovy(&quot;${skate}&quot;==&quot;0&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Установи роль в CSV" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EditAssignes" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenOfficeGuide" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="39" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="40" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;PositionName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApPositions&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchOfficePosition" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="41" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;PositionName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${OfficePosition}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${OfficePosition}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;ApPositions&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="OfficePositonId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">OfficePositonId</stringProp>
                  <stringProp name="RegexExtractor.regex">(?)(.{1,36})&quot;,&quot;${OfficePosition}&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenDepartmentGuide" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="42" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="43" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApDepartments&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchDepartment" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="44" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${DirectorDepartment}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${DirectorDepartment}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Departments&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="DirectorDepartmentId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">DirectorDepartmentId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.rows[0][1]</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если руководитель" enabled="true">
              <stringProp name="IfController.condition">${__groovy(&quot;${IsDirector}&quot;==&quot;true&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Руководитель" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Save" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="45" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created::dtm&quot;:&quot;${__groovy(new Date().format(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;&quot;\,TimeZone.getTimeZone(&quot;UTC&quot;)),)}&quot;,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApDocKindRowsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApRegistratorsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;AssignmentHistoryFileHidden&quot;:true,&#xd;
         &quot;AssistantUser&quot;:false,&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;HasRoleSimplifiedReview&quot;:true,&#xd;
         &quot;kr_permissions_calculated&quot;:true,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;LocalTilesInfoMark&quot;:[&#xd;
            {&#xd;
               &quot;::single_type&quot;:&quot;obj&quot;&#xd;
            },&#xd;
            {&#xd;
               &quot;ActionGrouping&quot;:false,&#xd;
               &quot;AskConfirmation&quot;:true,&#xd;
               &quot;ButtonHotkey&quot;:null,&#xd;
               &quot;Caption&quot;:&quot;Аннулировать&quot;,&#xd;
               &quot;ConfirmationMessage&quot;:null,&#xd;
               &quot;Icon&quot;:null,&#xd;
               &quot;ID::uid&quot;:&quot;8add3329-8285-4746-8005-1a52d445e068&quot;,&#xd;
               &quot;IsGlobal&quot;:false,&#xd;
               &quot;Name&quot;:&quot;Аннулировать документ &quot;,&#xd;
               &quot;NestedTiles&quot;:[&#xd;
                  {&#xd;
                     &quot;::single_type&quot;:&quot;obj&quot;&#xd;
                  }&#xd;
               ],&#xd;
               &quot;Order::int&quot;:0,&#xd;
               &quot;TileSize::int&quot;:0,&#xd;
               &quot;Tooltip&quot;:null&#xd;
            }&#xd;
         ],&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified::dtm&quot;:&quot;${__groovy(new Date().format(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;&quot;\,TimeZone.getTimeZone(&quot;UTC&quot;)),)}&quot;,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AppointmentID&quot;:null,&#xd;
                  &quot;AssignmentDate&quot;:null,&#xd;
                  &quot;AssignmentReason&quot;:null,&#xd;
                  &quot;CorrespondentID&quot;:null,&#xd;
                  &quot;CorrespondentName&quot;:null,&#xd;
                  &quot;DepartmentID::uid&quot;:&quot;${DirectorDepartmentId}&quot;,&#xd;
                  &quot;DepartmentName&quot;:&quot;${DirectorDepartment}&quot;,&#xd;
                  &quot;EndDate&quot;:null,&#xd;
                  &quot;EndReason&quot;:null,&#xd;
                  &quot;Head&quot;:true,&#xd;
                  &quot;PositionID::uid&quot;:&quot;${OfficePositonId}&quot;,&#xd;
                  &quot;PositionName&quot;:&quot;${OfficePosition}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Row1UUID}&quot;,&#xd;
                  &quot;WorkerRowIDRowID&quot;:null&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:false&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:1&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;&#xd;
   }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Host" elementType="Header">
                        <stringProp name="Header.name">Host</stringProp>
                        <stringProp name="Header.value">${host}</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                      </elementProp>
                      <elementProp name="Tessa-Session" elementType="Header">
                        <stringProp name="Header.name">Tessa-Session</stringProp>
                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
      &quot;kr_calculate_permissions&quot;:true,&#xd;
      &quot;kr_permissions_calculated&quot;:true,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Host" elementType="Header">
                        <stringProp name="Header.name">Host</stringProp>
                        <stringProp name="Header.value">${host}</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                      </elementProp>
                      <elementProp name="Tessa-Session" elementType="Header">
                        <stringProp name="Header.name">Tessa-Session</stringProp>
                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Host" elementType="Header">
                        <stringProp name="Header.name">Host</stringProp>
                        <stringProp name="Header.value">${host}</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                      </elementProp>
                      <elementProp name="Tessa-Session" elementType="Header">
                        <stringProp name="Header.name">Tessa-Session</stringProp>
                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="48" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Host" elementType="Header">
                        <stringProp name="Header.name">Host</stringProp>
                        <stringProp name="Header.value">${host}</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                      </elementProp>
                      <elementProp name="Tessa-Session" elementType="Header">
                        <stringProp name="Header.name">Tessa-Session</stringProp>
                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если не руководитель" enabled="true">
              <stringProp name="IfController.condition">${__groovy(&quot;${IsDirector}&quot;==&quot;false&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Не руководитель" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Save" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="45" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created::dtm&quot;:&quot;${__groovy(new Date().format(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;&quot;\,TimeZone.getTimeZone(&quot;UTC&quot;)),)}&quot;,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApDocKindRowsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApRegistratorsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;AssignmentHistoryFileHidden&quot;:true,&#xd;
         &quot;AssistantUser&quot;:false,&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;HasRoleSimplifiedReview&quot;:true,&#xd;
         &quot;kr_permissions_calculated&quot;:true,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;LocalTilesInfoMark&quot;:[&#xd;
            {&#xd;
               &quot;::single_type&quot;:&quot;obj&quot;&#xd;
            },&#xd;
            {&#xd;
               &quot;ActionGrouping&quot;:false,&#xd;
               &quot;AskConfirmation&quot;:true,&#xd;
               &quot;ButtonHotkey&quot;:null,&#xd;
               &quot;Caption&quot;:&quot;Аннулировать&quot;,&#xd;
               &quot;ConfirmationMessage&quot;:null,&#xd;
               &quot;Icon&quot;:null,&#xd;
               &quot;ID::uid&quot;:&quot;8add3329-8285-4746-8005-1a52d445e068&quot;,&#xd;
               &quot;IsGlobal&quot;:false,&#xd;
               &quot;Name&quot;:&quot;Аннулировать документ &quot;,&#xd;
               &quot;NestedTiles&quot;:[&#xd;
                  {&#xd;
                     &quot;::single_type&quot;:&quot;obj&quot;&#xd;
                  }&#xd;
               ],&#xd;
               &quot;Order::int&quot;:0,&#xd;
               &quot;TileSize::int&quot;:0,&#xd;
               &quot;Tooltip&quot;:null&#xd;
            }&#xd;
         ],&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified::dtm&quot;:&quot;${__groovy(new Date().format(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;&quot;\,TimeZone.getTimeZone(&quot;UTC&quot;)),)}&quot;,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AppointmentID&quot;:null,&#xd;
                  &quot;AssignmentDate&quot;:null,&#xd;
                  &quot;AssignmentReason&quot;:null,&#xd;
                  &quot;CorrespondentID&quot;:null,&#xd;
                  &quot;CorrespondentName&quot;:null,&#xd;
                  &quot;DepartmentID::uid&quot;:&quot;${DirectorDepartmentId}&quot;,&#xd;
                  &quot;DepartmentName&quot;:&quot;${DirectorDepartment}&quot;,&#xd;
                  &quot;EndDate&quot;:null,&#xd;
                  &quot;EndReason&quot;:null,&#xd;
                  &quot;Head&quot;:false,&#xd;
                  &quot;PositionID::uid&quot;:&quot;${OfficePositonId}&quot;,&#xd;
                  &quot;PositionName&quot;:&quot;${OfficePosition}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;${Row1UUID}&quot;,&#xd;
                  &quot;WorkerRowIDRowID&quot;:null&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:false&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:1&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;&#xd;
   }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Host" elementType="Header">
                        <stringProp name="Header.name">Host</stringProp>
                        <stringProp name="Header.value">${host}</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                      </elementProp>
                      <elementProp name="Tessa-Session" elementType="Header">
                        <stringProp name="Header.name">Tessa-Session</stringProp>
                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
      &quot;kr_calculate_permissions&quot;:true,&#xd;
      &quot;kr_permissions_calculated&quot;:true,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Host" elementType="Header">
                        <stringProp name="Header.name">Host</stringProp>
                        <stringProp name="Header.value">${host}</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                      </elementProp>
                      <elementProp name="Tessa-Session" elementType="Header">
                        <stringProp name="Header.name">Tessa-Session</stringProp>
                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Host" elementType="Header">
                        <stringProp name="Header.name">Host</stringProp>
                        <stringProp name="Header.value">${host}</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                      </elementProp>
                      <elementProp name="Tessa-Session" elementType="Header">
                        <stringProp name="Header.name">Tessa-Session</stringProp>
                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="48" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${host}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Host" elementType="Header">
                        <stringProp name="Header.name">Host</stringProp>
                        <stringProp name="Header.value">${host}</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                      </elementProp>
                      <elementProp name="Tessa-Session" elementType="Header">
                        <stringProp name="Header.name">Tessa-Session</stringProp>
                        <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AddCurrentDepartment" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenDepartmentGuide" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="49" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="50" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;Departments&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchDepartment" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="51" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${DirectorDepartment}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${DirectorDepartment}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Departments&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenOfficeGuide" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="52" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="53" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;PositionName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApPositions&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchOfficePosition" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="54" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;PositionName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Contains&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;директ&quot;,&quot;Value&quot;:&quot;директ&quot;}]}],&quot;Name&quot;:&quot;Name&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApPositions&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Save" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="55" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created::dtm&quot;:&quot;${__groovy(new Date().format(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;&quot;\,TimeZone.getTimeZone(&quot;UTC&quot;)),)}&quot;,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApDocKindRowsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApRegistratorsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;AssignmentHistoryFileHidden&quot;:true,&#xd;
         &quot;AssistantUser&quot;:false,&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;HasRoleSimplifiedReview&quot;:true,&#xd;
         &quot;kr_permissions_calculated&quot;:true,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;LocalTilesInfoMark&quot;:[&#xd;
            {&#xd;
               &quot;::single_type&quot;:&quot;obj&quot;&#xd;
            },&#xd;
            {&#xd;
               &quot;ActionGrouping&quot;:false,&#xd;
               &quot;AskConfirmation&quot;:true,&#xd;
               &quot;ButtonHotkey&quot;:null,&#xd;
               &quot;Caption&quot;:&quot;Аннулировать&quot;,&#xd;
               &quot;ConfirmationMessage&quot;:null,&#xd;
               &quot;Icon&quot;:null,&#xd;
               &quot;ID::uid&quot;:&quot;8add3329-8285-4746-8005-1a52d445e068&quot;,&#xd;
               &quot;IsGlobal&quot;:false,&#xd;
               &quot;Name&quot;:&quot;Аннулировать документ &quot;,&#xd;
               &quot;NestedTiles&quot;:[&#xd;
                  {&#xd;
                     &quot;::single_type&quot;:&quot;obj&quot;&#xd;
                  }&#xd;
               ],&#xd;
               &quot;Order::int&quot;:0,&#xd;
               &quot;TileSize::int&quot;:0,&#xd;
               &quot;Tooltip&quot;:null&#xd;
            }&#xd;
         ],&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified::dtm&quot;:&quot;${__groovy(new Date().format(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;&quot;\,TimeZone.getTimeZone(&quot;UTC&quot;)),)}&quot;,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;DepartmentID::uid&quot;:&quot;${DirectorDepartmentId}&quot;,&#xd;
                  &quot;DepartmentName&quot;:&quot;${DirectorDepartment}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6b5957a5-9a17-4ae8-b8a3-cde2deff73bb&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserPositionID::uid&quot;:&quot;${OfficePositonId}&quot;,&#xd;
               &quot;UserPositionName&quot;:&quot;${OfficePosition}&quot;&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:2&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;&#xd;
   }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:&quot;${DirectorLastName} ${DirectorFirstName}&quot;,&#xd;
      &quot;kr_calculate_permissions&quot;:true,&#xd;
      &quot;kr_permissions_calculated&quot;:true,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="58" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EndInfo" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import org.apache.jmeter.services.FileServer;

String path=FileServer.getFileServer().getBaseDir();

name1= vars.get(&quot;DirectorLogin&quot;);

f = new FileOutputStream(&quot;C://TEST SOFT/CreateUseres/rightNewGuys.csv&quot;, true); //spec-ify true if you want to overwrite file. Keep blank otherwise.
p = new PrintStream(f); 
this.interpreter.setOut(p); 
p.println(name1);
f.close();</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
              <stringProp name="BeanShellSampler.query">import org.apache.jmeter.services.FileServer;

String path=FileServer.getFileServer().getBaseDir();

name1= vars.get(&quot;DirectorLogin&quot;);

file = new FileOutputStream(&quot;C://TEST SOFT/CreateUseres/IsGuyRight.csv&quot;, true); //spec-ify true if you want to overwrite file. Keep blank otherwise.
pr = new PrintStream(file); 
this.interpreter.setOut(pr); 
pr.print(&quot; +&quot;);
pr.println(&quot;&quot;);
file.close();</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import org.apache.jmeter.services.FileServer;

String path=FileServer.getFileServer().getBaseDir();

name1= vars.get(&quot;DirectorLogin&quot;);
name2= vars.get(&quot;cardDirectorUUID&quot;);
name3= vars.get(&quot;DirectorLastName&quot;);
name4= vars.get(&quot;DirectorFirstName&quot;);

f = new FileOutputStream(&quot;C://TEST SOFT/CreateUseres/resulution_templates/rightNewGuys.csv&quot;, true); //spec-ify true if you want to overwrite file. Keep blank otherwise.
p = new PrintStream(f); 
this.interpreter.setOut(p); 
p.println(name1 + &quot;,1234567&quot;);
f.close();</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateAssociateDirector" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateCardOfPerson" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateDirectlyCard" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="26" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&quot;Info&quot;:{}}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/new</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="26" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&quot;Info&quot;:{}}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/new</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardAssDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardAssDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/request" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;CheckUserRole&quot;:[{&quot;::single_type&quot;:&quot;uid&quot;},&quot;${userID}&quot;,&quot;2454f52f-70f9-4548-bfc1-58548065974d&quot;,&quot;8d8d2bd9-1f6d-4f96-b6b1-1d0ad415f8a8&quot;]},&quot;RequestType::uid&quot;:&quot;c4df4f86-7cbe-40a1-8cfc-faaf21901032&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="30" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;Info&quot;:{&quot;RoleID::uid&quot;:&quot;2119aa21-c99b-45db-8e8b-c2a369e98478&quot;,&quot;UserID::uid&quot;:&quot;${userID}&quot;},&quot;RequestType::uid&quot;:&quot;8660e758-562a-4212-8e1c-9c14e571da89&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/request</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenEnterSystemGuide" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="31" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;LoginTypes&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenStaticRolesGuide" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;}]}],&quot;Name&quot;:&quot;IsStaticRole&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;Roles&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Contains&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;все&quot;,&quot;Value&quot;:&quot;все&quot;}]}],&quot;Name&quot;:&quot;Name&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;}]}],&quot;Name&quot;:&quot;IsStaticRole&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;Roles&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveNewCard" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created&quot;:null,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardAssDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApDocKindRowsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApRegistratorsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified&quot;:null,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApBarcodeScannerUsrCfg&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocKindRowsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApPersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AiskID&quot;:null,&#xd;
               &quot;ID_source&quot;:null,&#xd;
               &quot;IsClosePendingDisabled&quot;:false,&#xd;
               &quot;IsDismissed&quot;:false,&#xd;
               &quot;IsExcludedFromIntegration&quot;:false,&#xd;
               &quot;NumberInitials&quot;:null,&#xd;
               &quot;PersonDat&quot;:null,&#xd;
               &quot;PersonPre&quot;:null,&#xd;
               &quot;PersonRod&quot;:null,&#xd;
               &quot;PersonTvo&quot;:null,&#xd;
               &quot;PersonVin&quot;:null,&#xd;
               &quot;PositionDat&quot;:null,&#xd;
               &quot;PositionImn&quot;:null,&#xd;
               &quot;PositionRod&quot;:null,&#xd;
               &quot;PositionText&quot;:null,&#xd;
               &quot;PressServiceExportFolder&quot;:null,&#xd;
               &quot;Room&quot;:null,&#xd;
               &quot;SecretariatID&quot;:null,&#xd;
               &quot;SecretariatName&quot;:null,&#xd;
               &quot;SummaryExportFolder&quot;:null,&#xd;
               &quot;UopiExportFolder&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApPersonalRolesPrinters&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRegistratorsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:true&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantDocKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantEntryPoints&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantFileType&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;FileCategoryID&quot;:null,&#xd;
               &quot;FileCategoryName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;ApRoleAssistantRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistants&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAssistantTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistory&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleDeputiesManagementHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrAuthorDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrDocReceiversCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrPartnerTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_ApKrTaskHistoryPerformerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_FieldChangedCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDepartmentCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocStateCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrDocTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrPartnerCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrTaskTypeCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_KrUsersCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocKindsCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_RtkLinkedDocStatesCondition&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionCompletionOptions&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionFunctionRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskKinds&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Condition_TaskConditionTaskTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;ConditionsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;CustomBackgroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomBlockColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;CustomForegroundColorsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;Color1&quot;:null,&#xd;
               &quot;Color2&quot;:null,&#xd;
               &quot;Color3&quot;:null,&#xd;
               &quot;Color4&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;DefaultWorkplacesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;ba729035-42d5-4a18-ae4d-b5fde98ed42b&quot;,&#xd;
                  &quot;WorkplaceID::uid&quot;:&quot;6b522604-0bdf-4cc0-a8d9-b1df3320584f&quot;,&#xd;
                  &quot;WorkplaceName&quot;:&quot;ЗамПред&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;FmUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;EnableMessageIndicator&quot;:true,&#xd;
               &quot;IsNotShowMsgIndicatorOnStartup&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;KrActiveTasksVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalInfoUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrAdditionalApprovalUsersCardVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrApprovalCommonInfoVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;ApprovedBy&quot;:null,&#xd;
               &quot;AuthorComment&quot;:null,&#xd;
               &quot;AuthorID&quot;:null,&#xd;
               &quot;AuthorName&quot;:null,&#xd;
               &quot;CurrentApprovalStageRowID&quot;:null,&#xd;
               &quot;DisapprovedBy&quot;:null,&#xd;
               &quot;MainCardID&quot;:null,&#xd;
               &quot;ProcessOwnerID&quot;:null,&#xd;
               &quot;ProcessOwnerName&quot;:null,&#xd;
               &quot;StateChangedDateTimeUTC&quot;:null,&#xd;
               &quot;StateID::int&quot;:0,&#xd;
               &quot;StateName&quot;:&quot;$KrStates_Doc_Draft&quot;&#xd;
            }&#xd;
         },&#xd;
         &quot;KrApprovalHistoryVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrDialogButtonSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkNestedProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrForkSecondaryProcessesSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrNotificationOptionalRecipientsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrPerformersVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrStagesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUniversalTaskOptionsSettingsVirtual_Synthetic&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;KrUserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;DisableTaskPopupNotifications&quot;:false&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRulesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AllowanceType&quot;:null,&#xd;
                  &quot;Disallow&quot;:true,&#xd;
                  &quot;Name&quot;:&quot;Отключить все&quot;,&#xd;
                  &quot;Order::int&quot;:0,&#xd;
                  &quot;RowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleNotificationRuleTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;967bfb11-4dc5-4f94-884d-5512717c9c27&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;816aaf6b-f601-4b69-bac4-2bb26697d4f4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;471e9ca5-8f3e-451c-afc3-4b8eaf8d26c6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Внутренний документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;acb9811f-1130-4c77-b50c-3caece5223c2&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;06cfa119-409b-4f7d-8a26-dde973712133&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ReturnFromPostponeNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;01a87a90-68b9-4b0c-a994-9a857fd64ec0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c410ab01-6890-4a7f-80f2-2d1cc9037d63&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Входящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;0d96e715-24df-4fe4-aea3-74378f43407c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f543d9b7-3d04-4bec-b1ce-60d735fd8374&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_AdditionalApprovalCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ee1b057f-9b73-4813-ae76-84fd2756913d&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2d5a655c-8757-4249-b987-3548bf3bc4ba&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения исполнителем дочернего поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;07c4a069-f4f7-464c-b05b-0bba5b440b43&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;032c0098-4a93-464c-959b-ae89f7c80cb6&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение исполнения поручения соисполнителем&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;09bf9c04-be98-405c-acdb-7d767d59d7b4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;02b56f51-5085-48a9-952d-ea83f517c478&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение контроля исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;8e9cfb4e-d5c4-425f-85a7-1e333bf9c2e7&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;85054f91-9b48-4c4d-a3e3-1f019b15e8a9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskCompletedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3debfa49-e272-4a15-ac79-05364b34a0a6&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1db3d05b-dc2d-498b-a8e6-6956781a063c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Завершение проверки исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6d64082e-372e-4e75-ba2b-236d101a0df8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ea46a095-d7ed-4309-b3d1-3e5c434a9d50&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TaskNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c36e86b6-6101-4067-8357-2ca981b6d8be&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ec2d437c-5fd9-4f6e-bcfa-fddb9acec096&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Изменение срока исполнения поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;a5d7cd05-a21d-4412-9d93-7c16ca679efc&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;70e39d81-2843-4a25-bcf5-c0f8b4a32e77&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Исходящий документ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;55bcba7f-0e2e-439a-a1ce-f294681c26c4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;2f168457-6a7f-4f1a-9bc6-bbb369f6499f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Общий процесс&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;4f9ee838-74df-4b98-ad9c-06683179a45f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8660fbf3-11a5-46a8-a1ba-1ae60177e82c&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotification_AcquaintanceType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9d070b1a-f6b3-40d6-a08b-00d9e70dad7f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;b27cd592-8f80-4039-b694-547c94ecd31e&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_CommentNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;c7a3be23-c42b-4971-88a3-eac6502f09a0&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;1f5f3d98-232c-461a-8350-98cd7f230459&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_SubTaskRevokedNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;95773bf8-11dc-4e25-8bbf-aa97371e8bb5&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;914deea1-6e40-4d01-af6c-42d2055c61d9&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Отзыв поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3a1906d7-2406-4724-8301-b5f6ca3c64c9&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;c5a765f4-bd96-44c3-8c5f-5cf5fe43c521&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$Notifications_Other&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;406c9297-e763-415e-9262-7b8c595ff1d3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3ede2c7b-1e06-4d43-bb3a-8752e2bc146a&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_ForumNewMessagesNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;5fb7363e-023f-43c4-93ed-d19e3d3863df&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;a05d2e88-cbcc-40f8-b655-93d8c02a5525&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр отправки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;37ca2bfa-c22e-45eb-8da9-fc737a9b454c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;42f27ce9-ab29-4f1f-a302-c7ae90a841e5&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Реестр доставки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;53a097c1-2cf4-47e3-88ea-e57a9f92747f&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;ae5c5cd7-4c7c-4b8b-a679-8d5c2fe5d2da&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция аннулирована&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9a995274-b6ac-408a-ac89-79eadd2ba8b3&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;701b44c7-90ab-4485-b9b7-aab9b4b91149&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция исполнена&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;03b5c071-280f-4006-b5c9-e07009bb757a&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;3d5d7a44-c74e-418f-85eb-201bac6a9493&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Резолюция отозвана&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9271192a-2187-42f9-b042-e6c3f6134dab&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;77bdba46-e241-479a-aea1-6b0987da9783&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Смена исполнителя поручения&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;b970e7e7-a430-43ab-965f-853460d26348&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7af52656-2a34-4f9c-b8ac-265f0c48f442&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Согласование досыла. Отказ&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;47db0ce8-672c-4345-9a90-de9e198ec59c&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;e0a148bf-1a73-4581-b8b6-05d0c61b85db&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление о миграции после одобрения запроса доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3f93dcd9-b6ef-46d9-aaa1-75fc016678d4&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;6bbbaf3c-d578-40a7-8f44-b22aeaa95ab7&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об отказе в предоставлении доступа&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;62bf7f22-84f5-48e3-8b40-47443b530aa1&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;90fca673-2e25-4adc-958d-03a8aa79b13f&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об ошибке при миграции карточки&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;9c665744-e962-4e0d-9131-5e8c095d4c79&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;f979367c-5d0c-429e-8cbd-9b1a508c1340&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;Уведомление об успешном завершении миграции&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;fdc664f8-57b0-42a7-a971-9b0b606b77e8&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               },&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;7daca7d3-70f7-4643-9431-f5cf975ee115&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;ФИАС&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;2fda3e2e-5418-4fff-b945-54fa3ce7888e&quot;,&#xd;
                  &quot;RuleRowID::uid&quot;:&quot;16bddf66-2c1a-4644-891e-84551acca23e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;.changed&quot;:[&#xd;
               {&#xd;
                  &quot;::types&quot;:[&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;,&#xd;
                     &quot;str&quot;&#xd;
                  ]&#xd;
               },&#xd;
               &quot;LastName&quot;,&#xd;
               &quot;FirstName&quot;,&#xd;
               &quot;MiddleName&quot;,&#xd;
               &quot;Name&quot;,&#xd;
               &quot;FullName&quot;,&#xd;
               &quot;LoginTypeID&quot;,&#xd;
               &quot;LoginTypeName&quot;&#xd;
            ],&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AccessLevelID::int&quot;:0,&#xd;
               &quot;AccessLevelName&quot;:&quot;$Enum_AccessLevels_Regular&quot;,&#xd;
               &quot;ApplicationArchitectureID::int&quot;:0,&#xd;
               &quot;ApplicationArchitectureName&quot;:&quot;$Enum_ApplicationArchitectures_Auto&quot;,&#xd;
               &quot;BirthDate&quot;:null,&#xd;
               &quot;Blocked&quot;:false,&#xd;
               &quot;BlockedDueDate&quot;:null,&#xd;
               &quot;CipherInfo&quot;:null,&#xd;
               &quot;Email&quot;:null,&#xd;
               &quot;Fax&quot;:null,&#xd;
               &quot;FirstName&quot;:&quot;${AssDirectorFirstName}&quot;,&#xd;
               &quot;FullName&quot;:&quot;${AssDirectorLastName} ${AssDirectorFirstName} ${AssDirectorMiddleName}&quot;,&#xd;
               &quot;HomePhone&quot;:null,&#xd;
               &quot;IPPhone&quot;:null,&#xd;
               &quot;LastName&quot;:&quot;${AssDirectorLastName}&quot;,&#xd;
               &quot;Login&quot;:&quot;${AssDirectorLogin}&quot;,&#xd;
               &quot;LoginTypeID::int&quot;:1,&#xd;
               &quot;LoginTypeName&quot;:&quot;$Enum_LoginTypes_Tessa&quot;,&#xd;
               &quot;MiddleName&quot;:&quot;${AssDirectorMiddleName}&quot;,&#xd;
               &quot;MobilePhone&quot;:null,&#xd;
               &quot;Name&quot;:&quot;${AssDirectorLastName} ${AssDirectorFirstName}&quot;,&#xd;
               &quot;PasswordChanged&quot;:null,&#xd;
               &quot;PasswordHash&quot;:null,&#xd;
               &quot;PasswordKey&quot;:null,&#xd;
               &quot;Phone&quot;:null,&#xd;
               &quot;Position&quot;:null,&#xd;
               &quot;Security&quot;:null,&#xd;
               &quot;SecurityLock&quot;:false,&#xd;
               &quot;UserPositionID&quot;:null,&#xd;
               &quot;UserPositionName&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleStaticRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;RoleID::uid&quot;:&quot;2d785ace-b1e1-4eb1-8474-84dda1e79af2&quot;,&#xd;
                  &quot;RoleName&quot;:&quot;Все документы&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;3a897ae0-a3a2-420d-8b25-16fdfbfcfb5a&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoleSubscribedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LanguageCaption&quot;:null,&#xd;
               &quot;LanguageCode&quot;:null,&#xd;
               &quot;LanguageID&quot;:null,&#xd;
               &quot;Password&quot;: &quot;${AssDirectorPassword}&quot;,&#xd;
               &quot;PasswordRepeat&quot;:&quot;${AssDirectorPassword}&quot;,&#xd;
               &quot;Settings&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;PersonalRoleUnsubscibedTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;NotificationTypeID::uid&quot;:&quot;8916d66f-627f-4733-91bf-4c264fcb9d1d&quot;,&#xd;
                  &quot;NotificationTypeName&quot;:&quot;$KrNotifications_TasksNotificationType&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;ac08e02e-a28a-40dc-ae28-41ea7e5b397e&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputies&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementAccess&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementDeputizedVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementHelperVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserID&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRoles&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementRolesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagement&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypes&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementTypesVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementUsersVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;RoleDeputiesNestedManagementVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;Roles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AdSyncDate&quot;:null,&#xd;
               &quot;AdSyncDisableUpdate&quot;:null,&#xd;
               &quot;AdSyncDistinguishedName&quot;:null,&#xd;
               &quot;AdSyncHash&quot;:null,&#xd;
               &quot;AdSyncID&quot;:null,&#xd;
               &quot;AdSyncIndependent&quot;:false,&#xd;
               &quot;AdSyncWhenChanged&quot;:null,&#xd;
               &quot;CalendarID&quot;:null,&#xd;
               &quot;CalendarName&quot;:null,&#xd;
               &quot;DeputiesExpired::dtm&quot;:&quot;1753-01-01T00:00:00Z&quot;,&#xd;
               &quot;Description&quot;:null,&#xd;
               &quot;Hidden&quot;:false,&#xd;
               &quot;InheritTimeZone&quot;:true,&#xd;
               &quot;Name&quot;:null,&#xd;
               &quot;TimeZoneCodeName&quot;:null,&#xd;
               &quot;TimeZoneID&quot;:null,&#xd;
               &quot;TimeZoneShortName&quot;:null,&#xd;
               &quot;TimeZoneUtcOffsetMinutes&quot;:null,&#xd;
               &quot;TypeID::int&quot;:1&#xd;
            }&#xd;
         },&#xd;
         &quot;RoleUsers&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               &#xd;
            ]&#xd;
         },&#xd;
         &quot;UserSettingsFunctionRolesVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;AssistantHeadParallelColor&quot;:null,&#xd;
               &quot;AssistantHeadParallelDeputyColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialColor&quot;:null,&#xd;
               &quot;AssistantHeadSerialDeputyColor&quot;:null,&#xd;
               &quot;AssistantParallelColor&quot;:null,&#xd;
               &quot;AssistantParallelEntryColor&quot;:null,&#xd;
               &quot;AssistantSerialColor&quot;:null,&#xd;
               &quot;AssistantSerialEntryColor&quot;:null,&#xd;
               &quot;AuthorColor&quot;:null,&#xd;
               &quot;AuthorDeputyColor&quot;:null,&#xd;
               &quot;PerformerColor&quot;:null,&#xd;
               &quot;PerformerDeputyColor&quot;:null&#xd;
            }&#xd;
         },&#xd;
         &quot;UserSettingsVirtual&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;LeftPanelOpenOnClick&quot;:true,&#xd;
               &quot;RightPanelOpenOnClick&quot;:true&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:0&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardAssDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:null,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardAssDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardAssDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EditAssignes" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenOfficeGuide" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="39" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="40" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;PositionName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApPositions&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchOfficePosition" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="41" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;PositionName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Contains&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;директор&quot;,&quot;Value&quot;:&quot;директор&quot;}]}],&quot;Name&quot;:&quot;Name&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApPositions&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenDepartmentGuide" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="42" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="43" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApDepartments&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchDepartment" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="44" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${AssDirectorDepartment}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${AssDirectorDepartment}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Departments&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="AssDirectorDepartmentId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">AssDirectorDepartmentId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.rows[0][1]</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Save" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="45" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created::dtm&quot;:&quot;${__groovy(new Date().format(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;&quot;\,TimeZone.getTimeZone(&quot;UTC&quot;)),)}&quot;,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardAssDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApDocKindRowsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApRegistratorsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;AssignmentHistoryFileHidden&quot;:true,&#xd;
         &quot;AssistantUser&quot;:false,&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;HasRoleSimplifiedReview&quot;:true,&#xd;
         &quot;kr_permissions_calculated&quot;:true,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;LocalTilesInfoMark&quot;:[&#xd;
            {&#xd;
               &quot;::single_type&quot;:&quot;obj&quot;&#xd;
            },&#xd;
            {&#xd;
               &quot;ActionGrouping&quot;:false,&#xd;
               &quot;AskConfirmation&quot;:true,&#xd;
               &quot;ButtonHotkey&quot;:null,&#xd;
               &quot;Caption&quot;:&quot;Аннулировать&quot;,&#xd;
               &quot;ConfirmationMessage&quot;:null,&#xd;
               &quot;Icon&quot;:null,&#xd;
               &quot;ID::uid&quot;:&quot;8add3329-8285-4746-8005-1a52d445e068&quot;,&#xd;
               &quot;IsGlobal&quot;:false,&#xd;
               &quot;Name&quot;:&quot;Аннулировать документ &quot;,&#xd;
               &quot;NestedTiles&quot;:[&#xd;
                  {&#xd;
                     &quot;::single_type&quot;:&quot;obj&quot;&#xd;
                  }&#xd;
               ],&#xd;
               &quot;Order::int&quot;:0,&#xd;
               &quot;TileSize::int&quot;:0,&#xd;
               &quot;Tooltip&quot;:null&#xd;
            }&#xd;
         ],&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified::dtm&quot;:&quot;${__groovy(new Date().format(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;&quot;\,TimeZone.getTimeZone(&quot;UTC&quot;)),)}&quot;,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;ApPersonalAppointments&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;AppointmentID&quot;:null,&#xd;
                  &quot;AssignmentDate&quot;:null,&#xd;
                  &quot;AssignmentReason&quot;:null,&#xd;
                  &quot;CorrespondentID&quot;:null,&#xd;
                  &quot;CorrespondentName&quot;:null,&#xd;
                  &quot;DepartmentID::uid&quot;:&quot;${AssDirectorDepartmentId}&quot;,&#xd;
                  &quot;DepartmentName&quot;:&quot;${AssDirectorDepartment}&quot;,&#xd;
                  &quot;EndDate&quot;:null,&#xd;
                  &quot;EndReason&quot;:null,&#xd;
                  &quot;Head&quot;:false,&#xd;
                  &quot;PositionID::uid&quot;:&quot;b851e141-d76b-443e-8e52-e52193728369&quot;,&#xd;
                  &quot;PositionName&quot;:&quot;заместитель директора&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6fc74583-eb08-4530-9d26-c3578a6238e5&quot;,&#xd;
                  &quot;WorkerRowIDRowID&quot;:null&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;ApRoleAppointmentSettings&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;NeedRecalculate&quot;:false&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:1&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:&quot;${AssDirectorLastName} ${AssDirectorFirstName}&quot;&#xd;
   }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardAssDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:&quot;${AssAssDirectorLastName} ${AssDirectorFirstName}&quot;,&#xd;
      &quot;kr_calculate_permissions&quot;:true,&#xd;
      &quot;kr_permissions_calculated&quot;:true,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:false,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;CommName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:null,&#xd;
                     &quot;Value::uid&quot;:&quot;${cardAssDirectorUUID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PersonalRoleID&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="48" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardAssDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AddCurrentDepartment" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenDepartmentGuide" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="49" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="50" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;Departments&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchDepartment" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="51" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${AssDirectorDepartment}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${AssDirectorDepartment}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Departments&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OpenOfficeGuide" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="52" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CardID::uid&quot;:&quot;${userID}&quot;,&quot;Info&quot;:null,&quot;RestrictionFlags::int&quot;:0,&quot;SectionsToExclude&quot;:null,&quot;TasksToUnlockRowIDList&quot;:null}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="53" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;PositionName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApPositions&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchOfficePosition" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="54" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;PositionName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Contains&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;директ&quot;,&quot;Value&quot;:&quot;директ&quot;}]}],&quot;Name&quot;:&quot;Name&quot;,&quot;ReadOnly&quot;:false},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;ApPositions&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Save" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="55" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;Card&quot;:{&#xd;
      &quot;Created::dtm&quot;:&quot;${__groovy(new Date().format(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;&quot;\,TimeZone.getTimeZone(&quot;UTC&quot;)),)}&quot;,&#xd;
      &quot;CreatedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;CreatedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Files&quot;:null,&#xd;
      &quot;Flags::int&quot;:0,&#xd;
      &quot;ID::uid&quot;:&quot;${cardAssDirectorUUID}&quot;,&#xd;
      &quot;Info&quot;:{&#xd;
         &quot;ApCheckpointExaminationParticipantsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApDocKindRowsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApDocumentExaminationParticipantsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApRegistratorsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApResponsibleMEDOVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;ApSignerPersonalSettingsVirtual&quot;:&quot;{\&quot;.table::int\&quot;:1,\&quot;Rows\&quot;:[]}&quot;,&#xd;
         &quot;AssignmentHistoryFileHidden&quot;:true,&#xd;
         &quot;AssistantUser&quot;:false,&#xd;
         &quot;docTypeID&quot;:null,&#xd;
         &quot;HasRoleSimplifiedReview&quot;:true,&#xd;
         &quot;kr_permissions_calculated&quot;:true,&#xd;
         &quot;KrToken&quot;:${KrToken},&#xd;
         &quot;LabelsForCard&quot;:{&#xd;
            &quot;Labels&quot;:null&#xd;
         },&#xd;
         &quot;LocalTilesInfoMark&quot;:[&#xd;
            {&#xd;
               &quot;::single_type&quot;:&quot;obj&quot;&#xd;
            },&#xd;
            {&#xd;
               &quot;ActionGrouping&quot;:false,&#xd;
               &quot;AskConfirmation&quot;:true,&#xd;
               &quot;ButtonHotkey&quot;:null,&#xd;
               &quot;Caption&quot;:&quot;Аннулировать&quot;,&#xd;
               &quot;ConfirmationMessage&quot;:null,&#xd;
               &quot;Icon&quot;:null,&#xd;
               &quot;ID::uid&quot;:&quot;8add3329-8285-4746-8005-1a52d445e068&quot;,&#xd;
               &quot;IsGlobal&quot;:false,&#xd;
               &quot;Name&quot;:&quot;Аннулировать документ &quot;,&#xd;
               &quot;NestedTiles&quot;:[&#xd;
                  {&#xd;
                     &quot;::single_type&quot;:&quot;obj&quot;&#xd;
                  }&#xd;
               ],&#xd;
               &quot;Order::int&quot;:0,&#xd;
               &quot;TileSize::int&quot;:0,&#xd;
               &quot;Tooltip&quot;:null&#xd;
            }&#xd;
         ],&#xd;
         &quot;SignersSettingsSectionsContentHash&quot;:&quot;0Owy3l5Dmth0qVBC9HKn7oCD7aNGcnACMXat2uy7FTU=&quot;&#xd;
      },&#xd;
      &quot;Modified::dtm&quot;:&quot;${__groovy(new Date().format(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;&quot;\,TimeZone.getTimeZone(&quot;UTC&quot;)),)}&quot;,&#xd;
      &quot;ModifiedByID::uid&quot;:&quot;${userID}&quot;,&#xd;
      &quot;ModifiedByName&quot;:&quot;${userName}&quot;,&#xd;
      &quot;Permissions&quot;:null,&#xd;
      &quot;Sections&quot;:{&#xd;
         &quot;PersonalRoleDepartmentsVirtual&quot;:{&#xd;
            &quot;.table::int&quot;:1,&#xd;
            &quot;Rows&quot;:[&#xd;
               {&#xd;
                  &quot;.state::int&quot;:2,&#xd;
                  &quot;DepartmentID::uid&quot;:&quot;${AssDirectorDepartmentId}&quot;,&#xd;
                  &quot;DepartmentName&quot;:&quot;${AssDirectorDepartment}&quot;,&#xd;
                  &quot;RowID::uid&quot;:&quot;6b5957a5-9a17-4ae8-b8a3-cde2deff73bb&quot;&#xd;
               }&#xd;
            ]&#xd;
         },&#xd;
         &quot;PersonalRoles&quot;:{&#xd;
            &quot;Fields&quot;:{&#xd;
               &quot;UserPositionID::uid&quot;:&quot;b851e141-d76b-443e-8e52-e52193728369&quot;,&#xd;
               &quot;UserPositionName&quot;:&quot;заместитель директора&quot;&#xd;
            }&#xd;
         }&#xd;
      },&#xd;
      &quot;TaskHistory&quot;:null,&#xd;
      &quot;TaskHistoryGroups&quot;:null,&#xd;
      &quot;Tasks&quot;:null,&#xd;
      &quot;Topics&quot;:null,&#xd;
      &quot;TypeCaption&quot;:&quot;$CardTypes_TypesNames_PersonalRole&quot;,&#xd;
      &quot;TypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
      &quot;TypeName&quot;:&quot;PersonalRole&quot;,&#xd;
      &quot;Version::int&quot;:2&#xd;
   },&#xd;
   &quot;FileMapping&quot;:null,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:&quot;${AssDirectorLastName} ${AssDirectorFirstName}&quot;&#xd;
   }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/store</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.Info.KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/cards/get" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;CardID::uid&quot;:&quot;${cardAssDirectorUUID}&quot;,&#xd;
   &quot;CardTypeID::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
   &quot;CardTypeName&quot;:&quot;PersonalRole&quot;,&#xd;
   &quot;CompressionMode::int&quot;:1,&#xd;
   &quot;Info&quot;:{&#xd;
      &quot;.digest&quot;:&quot;${AssDirectorLastName} ${AssDirectorFirstName}&quot;,&#xd;
      &quot;kr_calculate_permissions&quot;:true,&#xd;
      &quot;kr_permissions_calculated&quot;:true,&#xd;
      &quot;KrToken&quot;:${KrToken}&#xd;
   },&#xd;
   &quot;SectionsToExclude&quot;:null,&#xd;
   &quot;TasksToUnlockRowIDList&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/cards/get</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KrToken" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.Card.Info.KrToken</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/views/get-data" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:false,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;CommName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardAssDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;PersonalRoleID&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RtkCommitteesAndCommissionsParticipation&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="58" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;CalculateRowCounting&quot;:true,&quot;ExecutionTimeOut&quot;:null,&quot;SkipErrorLogging&quot;:false,&quot;SortingColumns&quot;:[{&quot;Alias&quot;:&quot;RoleDeputizedName&quot;,&quot;Descending&quot;:false}],&quot;SubsetName&quot;:&quot;&quot;,&quot;Values&quot;:[{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;1&quot;,&quot;Value::int&quot;:1}]}],&quot;Name&quot;:&quot;PageOffset&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;21&quot;,&quot;Value::int&quot;:21}]}],&quot;Name&quot;:&quot;PageLimit&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:null,&quot;Value::uid&quot;:&quot;${cardAssDirectorUUID}&quot;}]}],&quot;Name&quot;:&quot;Role&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;${userName}&quot;,&quot;Value::uid&quot;:&quot;${userID}&quot;}]}],&quot;Name&quot;:&quot;CurrentUserId&quot;,&quot;ReadOnly&quot;:true},{&quot;CriteriaValues&quot;:[{&quot;CriteriaName&quot;:&quot;Equality&quot;,&quot;ReadOnly&quot;:false,&quot;Values&quot;:[{&quot;ExecutorParameterName&quot;:null,&quot;ReadOnly&quot;:false,&quot;Text&quot;:&quot;ru&quot;,&quot;Value::int&quot;:25}]}],&quot;Name&quot;:&quot;Locale&quot;,&quot;ReadOnly&quot;:true}],&quot;ViewAlias&quot;:&quot;RoleDeputies&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${host}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">${host}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                    <elementProp name="Tessa-Session" elementType="Header">
                      <stringProp name="Header.name">Tessa-Session</stringProp>
                      <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Поиск ролей" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchTheStaticRoles" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${RoleName1}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${RoleName1}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;929ad23c-8a22-09aa-9000-398bf13979b2&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;IsStaticRole&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Roles&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Role1ID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Role1ID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0][1]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если id == null" enabled="true">
            <stringProp name="IfController.condition">${__groovy(&quot;${Role1ID}&quot;==&quot;&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="-------&gt;  БЕЗ ID  &lt;-------" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

String path=FileServer.getFileServer().getBaseDir();

name1= vars.get(&quot;RoleName1&quot;);
name2= vars.get(&quot;DirectorDepartmentId&quot;);
name3= vars.get(&quot;RightRoleId&quot;);

f = new FileOutputStream(&quot;C://TEST SOFT/CreateUseres/result.csv&quot;, true); //spec-ify true if you want to overwrite file. Keep blank otherwise.
p = new PrintStream(f); 
this.interpreter.setOut(p); 
p.println(name1);
f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="---&gt; Роли тут &lt;---" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Поиск должностей" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchOfficePosition" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="41" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;PositionName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${OfficePosition}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${OfficePosition}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;ApPositions&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="OfficePositonId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">OfficePositonId</stringProp>
                <stringProp name="RegexExtractor.regex">(?)(.{1,36})&quot;,&quot;${OfficePosition}&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если id == null" enabled="true">
              <stringProp name="IfController.condition">${__groovy(&quot;${OfficePositonId}&quot;==&quot;&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="-------&gt;  БЕЗ ID  &lt;-------" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

String path=FileServer.getFileServer().getBaseDir();

name1= vars.get(&quot;OfficePositonId&quot;);
name2= vars.get(&quot;DirectorDepartmentId&quot;);
name3= vars.get(&quot;RightDepId&quot;);

f = new FileOutputStream(&quot;C://TEST SOFT/CreateUseres/result.csv&quot;, true); //spec-ify true if you want to overwrite file. Keep blank otherwise.
p = new PrintStream(f); 
this.interpreter.setOut(p); 
p.println(name1);
f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="---&gt; Все тут &lt;---" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Поиск департаментов" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SearchDepartment" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="44" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
   &quot;CalculateRowCounting&quot;:true,&#xd;
   &quot;ExecutionTimeOut&quot;:null,&#xd;
   &quot;SkipErrorLogging&quot;:false,&#xd;
   &quot;SortingColumns&quot;:[&#xd;
      {&#xd;
         &quot;Alias&quot;:&quot;RoleName&quot;,&#xd;
         &quot;Descending&quot;:false&#xd;
      }&#xd;
   ],&#xd;
   &quot;SubsetName&quot;:&quot;&quot;,&#xd;
   &quot;Values&quot;:[&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Contains&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${DirectorDepartment}&quot;,&#xd;
                     &quot;Value&quot;:&quot;${DirectorDepartment}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Name&quot;,&#xd;
         &quot;ReadOnly&quot;:false&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;1&quot;,&#xd;
                     &quot;Value::int&quot;:1&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageOffset&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;21&quot;,&#xd;
                     &quot;Value::int&quot;:21&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;PageLimit&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;${userName}&quot;,&#xd;
                     &quot;Value::uid&quot;:&quot;${userID}&quot;&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;CurrentUserId&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      },&#xd;
      {&#xd;
         &quot;CriteriaValues&quot;:[&#xd;
            {&#xd;
               &quot;CriteriaName&quot;:&quot;Equality&quot;,&#xd;
               &quot;ReadOnly&quot;:false,&#xd;
               &quot;Values&quot;:[&#xd;
                  {&#xd;
                     &quot;ExecutorParameterName&quot;:null,&#xd;
                     &quot;ReadOnly&quot;:false,&#xd;
                     &quot;Text&quot;:&quot;ru&quot;,&#xd;
                     &quot;Value::int&quot;:25&#xd;
                  }&#xd;
               ]&#xd;
            }&#xd;
         ],&#xd;
         &quot;Name&quot;:&quot;Locale&quot;,&#xd;
         &quot;ReadOnly&quot;:true&#xd;
      }&#xd;
   ],&#xd;
   &quot;ViewAlias&quot;:&quot;Departments&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/views/get-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Tessa-Session" elementType="Header">
                    <stringProp name="Header.name">Tessa-Session</stringProp>
                    <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="DirectorDepartmentId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">DirectorDepartmentId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">.rows[0][1]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если id == null" enabled="true">
            <stringProp name="IfController.condition">${__groovy(&quot;${DirectorDepartmentId}&quot;==&quot;&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="-------&gt;  БЕЗ ID  &lt;-------" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

String path=FileServer.getFileServer().getBaseDir();

name1= vars.get(&quot;DirectorDepartment&quot;);
name2= vars.get(&quot;DirectorDepartmentId&quot;);
name3= vars.get(&quot;RightDepId&quot;);

f = new FileOutputStream(&quot;C://TEST SOFT/CreateUseres/result.csv&quot;, true); //spec-ify true if you want to overwrite file. Keep blank otherwise.
p = new PrintStream(f); 
this.interpreter.setOut(p); 
p.println(name1);
f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Если id != rightId" enabled="false">
            <stringProp name="IfController.condition">${__groovy(&quot;${DirectorDepartmentId}&quot;!=&quot;${RightDepId}&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CloseApp" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://192.168.140.16/loadtest/web/tessa/api/v1/sessions/close" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${appName}/web/tessa/api/v1/sessions/close</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${host}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-tessa</stringProp>
                </elementProp>
                <elementProp name="Tessa-Session" elementType="Header">
                  <stringProp name="Header.name">Tessa-Session</stringProp>
                  <stringProp name="Header.value">&lt;${Tessa-Session}/&gt;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
